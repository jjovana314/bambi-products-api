var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Admin.html",[0,1.412,1,2.157]],["body/interfaces/Admin.html",[0,1.532,1,3.114,2,2.181,3,0.165,4,0.142,5,0.142,6,3.395,7,0.239,8,0.94,9,1.542,10,4.824,11,4.027,12,4.381,13,4.381,14,1.467,15,4.027,16,4.381,17,0.76,18,0.554,19,0.019,20,2.557,21,0.165,22,0.01,23,0.014,24,0.01]],["title/controllers/AdminController.html",[25,1.412,26,2.532]],["body/controllers/AdminController.html",[1,1.972,3,0.088,4,0.076,5,0.076,7,0.128,9,1.188,11,1.35,14,0.775,17,0.654,18,0.41,19,0.02,21,0.088,22,0.017,23,0.009,24,0.005,25,0.819,26,2.315,27,0.819,28,1.815,29,1.35,30,1.363,31,3.189,32,2.862,33,3.338,34,2.862,35,2.862,36,2.862,37,2.862,38,2.862,39,1.815,40,6.052,41,3.252,42,2.928,43,3.338,44,0.71,45,2.117,46,2.594,47,2.196,48,4.022,49,2.317,50,1.027,51,2.117,52,2.865,53,2.117,54,1.815,55,3.338,56,2.117,57,2.832,58,2.117,59,3.338,60,2.117,61,3.338,62,1.815,63,3.338,64,2.117,65,2.862,66,2.117,67,3.618,68,3.338,69,2.117,70,1.815,71,3.338,72,2.117,73,2.862,74,1.247,75,2.634,76,1.35,77,1.468,78,1.35,79,2.117,80,0.602,81,2.441,82,1.815,83,1.815,84,1.815,85,2.117,86,2.117,87,0.089,88,1.251,89,0.777,90,2.117,91,2.478,92,3.171,93,2.117,94,2.117,95,1.617,96,2.214,97,2.117,98,2.117,99,2.117,100,2.117,101,4.132,102,2.117,103,2.117,104,2.117,105,2.117,106,2.117,107,2.117,108,3.338,109,1.468,110,2.117,111,2.117,112,2.117,113,2.117,114,2.117,115,2.117,116,2.117,117,1.815]],["title/classes/AdminDto.html",[67,2.327,87,0.154]],["body/classes/AdminDto.html",[3,0.154,4,0.132,5,0.132,7,0.222,8,0.895,9,1.526,10,4.361,11,3.641,12,3.96,13,3.96,14,1.326,15,3.641,16,3.96,17,0.733,18,0.544,19,0.019,20,2.167,21,0.154,22,0.01,23,0.013,24,0.01,44,0.848,67,3.2,87,0.155,89,2.744,118,0.855,119,3.157,120,3.682,121,3.682,122,3.682,123,3.682,124,3.682,125,3.682,126,3.682]],["title/modules/AdminModule.html",[127,1.491,128,2.327]],["body/modules/AdminModule.html",[1,2.462,3,0.174,4,0.149,5,0.149,19,0.019,21,0.174,22,0.011,23,0.014,24,0.011,26,4.214,27,2.109,74,1.635,80,1.185,81,4.336,82,3.574,87,0.175,127,2.227,128,4.458,129,2.021,130,2.644,131,3.574,132,3.574,133,3.574,134,3.004,135,2.296,136,2.296,137,4.168,138,3.222,139,3.781,140,2.462,141,1.702,142,4.168,143,4.164,144,4.168,145,2.462,146,2.657,147,2.657]],["title/injectables/AdminService.html",[81,2.157,148,1.412]],["body/injectables/AdminService.html",[1,1.164,3,0.082,4,0.071,5,0.071,7,0.119,9,1.27,11,1.256,12,3.123,13,1.366,14,1.487,16,1.366,17,0.713,18,0.475,19,0.02,20,1.701,21,0.082,22,0.01,23,0.008,24,0.005,30,1.287,31,3.242,32,2.703,34,2.703,35,2.703,36,2.703,37,2.703,38,2.703,39,2.703,44,0.758,46,2.771,47,2.346,48,2.703,49,2.414,50,1.529,54,2.703,57,2.702,62,2.703,65,2.703,67,3.517,70,2.703,73,1.689,74,1.204,80,0.56,81,1.863,83,1.689,84,1.689,87,0.083,89,0.723,91,1.441,92,2.702,96,2.146,141,0.804,148,1.22,149,1.085,150,1.689,151,2.407,152,3.153,153,3.153,154,2.01,155,1.97,156,2.481,157,1.97,158,3.153,159,2.407,160,3.123,161,1.97,162,3.862,163,1.97,164,3.153,165,1.97,166,1.97,167,3.153,168,1.97,169,3.153,170,1.97,171,3.153,172,1.97,173,3.153,174,1.97,175,1.97,176,1.366,177,1.017,178,1.256,179,1.97,180,1.164,181,1.97,182,2.033,183,1.97,184,1.97,185,3.153,186,3.153,187,1.689,188,1.97,189,1.97,190,1.97,191,1.689,192,1.689,193,1.97,194,1.366,195,1.97,196,1.689,197,1.256,198,2.01,199,1.256,200,1.256,201,1.256,202,1.256,203,1.97]],["title/controllers/AppController.html",[25,1.412,204,2.532]],["body/controllers/AppController.html",[3,0.197,4,0.169,5,0.169,7,0.285,17,0.601,19,0.019,21,0.197,22,0.012,23,0.015,24,0.012,25,2.284,27,1.826,30,2.411,42,2.435,44,0.59,49,1.927,74,1.442,80,1.341,87,0.199,88,2.788,89,1.731,96,1.927,204,4.094,205,4.046,206,5.789,207,4.719,208,3.807,209,4.046,210,4.719]],["title/modules/AppModule.html",[127,1.491,211,2.532]],["body/modules/AppModule.html",[3,0.132,4,0.114,5,0.114,19,0.02,21,0.132,22,0.008,23,0.012,24,0.008,27,1.751,74,1.729,80,0.902,87,0.134,127,1.848,128,4.029,129,1.539,130,2.195,134,2.494,135,1.749,136,1.749,138,2.674,140,1.876,141,1.296,145,2.674,204,3.658,208,3.735,209,2.722,211,5.003,212,2.722,213,2.722,214,2.722,215,4.029,216,3.735,217,4.029,218,3.735,219,3.175,220,3.175,221,2.024,222,3.175,223,1.749,224,3.175,225,3.175,226,2.722,227,3.175,228,3.175,229,3.175,230,3.175,231,3.175,232,3.175,233,3.175,234,3.175,235,3.175,236,3.175,237,3.175,238,3.175,239,3.175,240,3.175,241,3.175,242,3.658,243,3.175,244,3.175]],["title/injectables/AppService.html",[148,1.412,208,2.157]],["body/injectables/AppService.html",[3,0.207,4,0.177,5,0.177,7,0.299,17,0.619,19,0.019,21,0.207,22,0.013,23,0.016,24,0.013,30,2.484,44,0.619,49,2.022,74,1.21,80,1.407,87,0.208,96,2.022,148,2.353,149,2.728,206,5.888,208,3.594,245,4.246,246,4.951,247,4.951,248,4.951]],["title/classes/AproveDto.html",[41,2.532,87,0.154]],["body/classes/AproveDto.html",[3,0.218,4,0.187,5,0.187,7,0.316,8,1.122,18,0.42,19,0.019,20,2.715,21,0.218,22,0.014,23,0.016,24,0.014,41,4.362,44,0.654,87,0.22,118,1.215,162,5.783,249,4.487,250,5.232]],["title/classes/CustomAttributes.html",[87,0.154,251,2.011]],["body/classes/CustomAttributes.html",[3,0.196,4,0.168,5,0.168,7,0.284,8,1.05,9,1.483,17,0.686,18,0.516,19,0.019,20,2.541,21,0.196,22,0.012,23,0.015,24,0.012,44,0.804,87,0.198,118,1.091,251,3.244,252,4.029,253,4.099,254,4.099,255,3.799,256,4.699,257,4.699,258,4.699]],["title/classes/CustomAttributesDto.html",[87,0.154,259,2.532]],["body/classes/CustomAttributesDto.html",[3,0.201,4,0.173,5,0.173,7,0.291,8,1.067,17,0.692,18,0.522,19,0.019,20,2.583,21,0.201,22,0.013,23,0.016,24,0.013,44,0.813,87,0.203,118,1.119,253,4.147,254,4.147,255,3.844,259,4.149,260,4.134,261,4.822,262,4.822,263,4.822]],["title/classes/ForeignNames.html",[87,0.154,264,2.011]],["body/classes/ForeignNames.html",[3,0.206,4,0.176,5,0.176,7,0.297,8,1.082,9,1.436,17,0.698,18,0.487,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,44,0.758,47,2.542,87,0.207,118,1.144,264,3.342,265,4.227,266,5.017,267,4.929,268,4.929]],["title/classes/ForeignNamesDto.html",[87,0.154,269,2.532]],["body/classes/ForeignNamesDto.html",[3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.767,47,2.562,87,0.211,118,1.165,266,5.057,269,4.253,270,4.303,271,5.019,272,5.019]],["title/classes/Images.html",[87,0.154,273,2.011]],["body/classes/Images.html",[3,0.206,4,0.176,5,0.176,7,0.297,8,1.082,9,1.436,14,1.526,17,0.698,18,0.487,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.144,273,3.342,274,4.227,275,4.188,276,4.929,277,4.929]],["title/classes/ImagesDto.html",[87,0.154,278,2.532]],["body/classes/ImagesDto.html",[3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,14,1.538,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.767,87,0.211,118,1.165,275,4.222,278,4.253,279,4.303,280,5.019,281,5.019]],["title/interfaces/Login.html",[0,1.412,282,2.157]],["body/interfaces/Login.html",[0,1.907,2,2.715,3,0.206,4,0.176,5,0.176,7,0.297,8,1.082,9,1.436,17,0.729,18,0.487,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,282,3.584,283,4.227,284,3.538,285,3.325]],["title/controllers/LoginController.html",[25,1.412,221,2.327]],["body/controllers/LoginController.html",[3,0.125,4,0.107,5,0.107,7,0.18,9,1.067,14,1.006,18,0.24,19,0.02,21,0.125,22,0.013,23,0.011,24,0.008,25,1.155,27,1.155,29,1.903,30,1.769,31,3.047,42,2.885,44,0.699,46,2.329,47,1.972,49,2.283,50,1.448,57,2.829,74,1.45,75,1.903,76,1.903,78,3.249,80,0.849,87,0.126,88,1.764,89,1.589,91,1.365,92,2.713,96,2.283,180,1.764,182,1.541,197,1.903,198,2.761,199,1.903,200,1.903,201,1.903,202,1.903,221,2.761,223,2.808,282,3.303,285,2.1,286,2.561,287,3.714,288,4.332,289,4.794,290,2.561,291,3.307,292,2.986,293,2.986,294,4.332,295,2.986,296,2.986,297,2.561,298,3.564,299,2.986,300,3.714,301,2.561,302,2.561,303,2.561,304,2.808,305,2.986,306,2.986,307,2.986,308,2.986,309,4.332,310,2.986,311,2.986,312,2.28,313,2.28,314,2.986,315,2.986,316,2.986,317,2.986,318,2.986,319,2.986,320,2.986]],["title/classes/LoginDto.html",[87,0.154,298,2.327]],["body/classes/LoginDto.html",[3,0.2,4,0.172,5,0.172,7,0.29,8,1.064,9,1.422,17,0.691,18,0.479,19,0.018,21,0.2,22,0.012,23,0.015,24,0.012,44,0.746,87,0.202,89,2.613,118,1.115,284,3.35,285,3.149,298,3.804,321,4.117,322,4.801,323,4.801]],["title/modules/LoginModule.html",[127,1.491,215,2.327]],["body/modules/LoginModule.html",[3,0.165,4,0.141,5,0.141,19,0.019,21,0.165,22,0.01,23,0.014,24,0.01,27,2.034,74,1.651,80,1.121,87,0.166,127,2.147,129,1.913,130,2.55,134,2.897,135,2.173,136,2.173,138,3.107,139,3.646,140,2.331,141,1.611,145,3.107,146,2.515,147,2.515,215,4.523,218,3.993,221,3.77,223,4.009,282,2.331,302,3.382,324,3.382,325,3.945,326,3.382,327,3.382,328,3.945,329,3.945,330,3.945,331,4.015,332,3.945]],["title/injectables/LoginService.html",[148,1.412,223,2.011]],["body/injectables/LoginService.html",[3,0.114,4,0.098,5,0.098,7,0.165,9,1.198,14,0.941,17,0.663,18,0.459,19,0.02,21,0.114,22,0.007,23,0.011,24,0.007,30,1.655,31,3.2,44,0.75,46,2.615,47,2.213,49,2.336,50,1.323,57,2.74,74,1.398,80,0.776,87,0.115,89,1.001,91,1.853,92,2.615,96,2.186,141,1.114,148,1.568,149,1.503,154,2.584,156,2.95,176,2.811,177,1.408,178,1.739,180,1.612,182,2.092,194,1.892,196,2.339,223,2.233,282,2.858,285,3.093,287,3.476,289,4.591,290,3.476,297,3.476,298,3.413,300,2.339,301,2.339,303,2.339,313,3.095,333,2.339,334,4.054,335,4.054,336,2.728,337,2.728,338,4.054,339,4.054,340,2.728,341,2.728,342,2.728,343,2.728,344,4.054,345,2.728,346,2.339,347,2.083,348,2.083,349,2.728,350,2.728,351,2.728,352,2.728,353,2.728,354,2.728,355,2.728,356,4.054,357,4.054,358,2.728]],["title/classes/LogisticsData.html",[87,0.154,359,2.327]],["body/classes/LogisticsData.html",[3,0.196,4,0.168,5,0.168,7,0.284,8,1.05,9,1.483,17,0.686,18,0.516,19,0.019,21,0.196,22,0.012,23,0.015,24,0.012,44,0.804,87,0.198,118,1.091,253,4.099,254,4.099,255,3.799,359,3.753,360,4.029,361,4.699,362,4.699,363,3.753,364,4.699]],["title/classes/LogisticsDataDto.html",[87,0.154,365,2.532]],["body/classes/LogisticsDataDto.html",[3,0.201,4,0.173,5,0.173,7,0.291,8,1.067,17,0.692,18,0.522,19,0.019,21,0.201,22,0.013,23,0.016,24,0.013,44,0.813,87,0.203,118,1.119,253,4.147,254,4.147,255,3.844,363,3.814,365,4.149,366,4.134,367,4.822,368,4.822,369,4.822]],["title/interfaces/Product.html",[0,1.412,370,2.011]],["body/interfaces/Product.html",[0,1.942,2,2.765,3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,14,1.602,17,0.733,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,370,3.379,371,4.303,372,4.398]],["title/classes/ProductClass.html",[87,0.154,373,2.157]],["body/classes/ProductClass.html",[3,0.206,4,0.176,5,0.176,7,0.297,8,1.082,9,1.436,14,1.526,17,0.698,18,0.487,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.144,372,4.188,373,3.584,374,4.227,375,4.929,376,4.929]],["title/classes/ProductClassDto.html",[87,0.154,377,1.884]],["body/classes/ProductClassDto.html",[3,0.2,4,0.172,5,0.172,7,0.29,8,1.064,9,1.422,14,1.508,17,0.691,18,0.479,19,0.018,21,0.2,22,0.012,23,0.015,24,0.012,44,0.746,87,0.202,89,2.613,118,1.115,372,4.139,377,3.079,378,4.117,379,4.801,380,4.801]],["title/classes/ProductClassDto-1.html",[87,0.128,377,1.571,381,3.045]],["body/classes/ProductClassDto-1.html",[3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,14,1.538,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.767,87,0.211,118,1.165,377,3.164,382,4.303,383,6.623,384,5.019,385,5.019]],["title/controllers/ProductController.html",[25,1.412,386,2.532]],["body/controllers/ProductController.html",[3,0.098,4,0.084,5,0.084,7,0.142,9,1.185,14,1.314,17,0.636,18,0.454,19,0.02,21,0.098,22,0.014,23,0.009,24,0.006,25,0.908,27,0.908,29,1.496,30,1.477,31,3.011,42,3.042,44,0.737,46,2.586,47,2.189,49,2.408,50,1.754,52,1.627,57,2.782,74,1.308,75,3.161,76,1.496,77,1.627,78,2.813,80,0.667,87,0.099,88,1.386,89,0.861,91,1.653,92,2.694,95,1.792,96,2.31,109,1.627,117,2.012,156,1.293,177,1.211,291,2.761,370,3.441,377,3.443,386,2.508,387,2.012,388,2.346,389,3.101,390,3.784,391,4.252,392,3.101,393,3.784,394,3.101,395,3.06,396,2.012,397,2.346,398,2.012,399,3.616,400,2.346,401,3.784,402,2.346,403,2.012,404,2.346,405,2.346,406,3.616,407,2.346,408,2.012,409,2.761,410,2.346,411,1.627,412,3.616,413,2.346,414,2.431,415,2.012,416,2.012,417,2.012,418,2.346,419,2.346,420,2.346,421,2.346,422,2.346,423,2.346,424,2.346,425,2.346,426,2.346,427,2.012,428,2.346,429,3.616,430,2.346,431,2.346,432,2.346]],["title/modules/ProductModule.html",[127,1.491,216,2.157]],["body/modules/ProductModule.html",[3,0.174,4,0.149,5,0.149,19,0.019,21,0.174,22,0.011,23,0.014,24,0.011,27,2.109,74,1.635,80,1.185,87,0.175,127,2.227,129,2.021,130,2.644,134,3.004,135,2.296,136,2.296,138,3.222,139,3.781,140,2.462,141,1.702,145,2.462,146,2.657,147,2.657,216,4.132,370,2.296,386,4.214,414,4.043,415,3.574,433,3.574,434,3.574,435,3.574,436,4.168,437,4.168,438,4.164,439,4.168]],["title/injectables/ProductService.html",[148,1.412,414,2.011]],["body/injectables/ProductService.html",[3,0.09,4,0.077,5,0.077,7,0.13,9,1.238,14,1.519,17,0.699,18,0.475,19,0.02,21,0.09,22,0.006,23,0.009,24,0.006,30,1.38,31,3.242,44,0.76,46,2.702,47,2.408,49,2.414,50,2.024,57,2.702,74,1.256,80,0.611,87,0.142,89,0.789,91,1.907,92,2.609,95,1.642,96,2.331,141,0.878,148,1.307,149,1.185,151,2.58,154,2.154,156,2.606,159,2.58,160,3.28,177,1.109,178,1.371,180,1.27,182,2.154,197,1.371,198,2.154,199,1.371,200,1.371,201,1.371,202,1.371,370,3.145,372,1.371,377,3.211,389,3.579,390,2.897,391,4.056,392,2.897,393,2.897,394,2.897,395,2.894,396,1.844,398,2.897,401,2.897,403,2.897,408,2.897,411,1.491,414,1.861,416,1.844,417,1.844,440,1.844,441,2.15,442,2.15,443,3.379,444,2.15,445,2.15,446,2.15,447,2.15,448,2.15,449,3.379,450,2.15,451,2.15,452,2.15,453,2.15,454,2.897,455,2.15,456,1.844,457,2.15,458,3.379,459,2.15,460,2.15,461,2.15,462,1.043,463,2.15,464,2.15,465,1.844,466,2.15,467,1.844]],["title/classes/Products.html",[87,0.154,462,1.77]],["body/classes/Products.html",[3,0.11,4,0.094,5,0.094,7,0.159,8,0.705,9,1.559,14,1.101,15,3.022,17,0.722,18,0.567,19,0.019,20,1.706,21,0.11,22,0.007,23,0.01,24,0.007,44,0.882,74,1.446,87,0.111,118,0.612,251,3.262,264,3.262,273,3.262,359,3.022,363,2.519,373,3.498,462,1.917,468,2.261,469,3.62,470,3.62,471,3.287,472,3.62,473,3.62,474,3.62,475,3.62,476,4.74,477,3.62,478,3.262,479,3.287,480,2.637,481,2.637,482,2.637,483,2.637,484,2.637,485,2.637,486,2.637,487,2.637,488,2.637,489,2.637,490,2.637,491,2.637,492,2.637,493,2.637,494,2.637,495,2.637,496,2.637,497,2.637,498,2.637,499,2.637,500,2.637,501,2.637,502,2.637]],["title/classes/ProductsArray.html",[87,0.154,503,2.532]],["body/classes/ProductsArray.html",[3,0.211,4,0.181,5,0.181,7,0.306,8,1.1,9,1.291,18,0.407,19,0.019,21,0.211,22,0.013,23,0.016,24,0.013,44,0.633,74,1.237,87,0.213,118,1.176,462,3.498,503,4.277,504,4.343,505,5.065,506,5.065]],["title/classes/ProductsArrayDto.html",[87,0.154,507,2.327]],["body/classes/ProductsArrayDto.html",[3,0.193,4,0.165,5,0.165,7,0.279,8,1.039,18,0.512,19,0.019,21,0.193,22,0.012,23,0.015,24,0.012,42,2.384,44,0.578,74,1.559,87,0.269,118,1.073,242,3.204,462,3.094,507,3.714,508,3.962,509,3.959,510,3.962,511,3.962,512,4.62,513,3.528,514,4.996,515,3.528,516,4.62,517,3.962]],["title/controllers/ProductsController.html",[25,1.412,518,2.532]],["body/controllers/ProductsController.html",[3,0.103,4,0.088,5,0.088,7,0.149,9,1.147,14,1.34,17,0.645,18,0.44,19,0.02,21,0.103,22,0.012,23,0.01,24,0.006,25,0.954,27,0.954,29,1.572,30,1.534,31,3.211,42,2.978,44,0.722,46,2.503,47,2.119,49,2.357,50,1.196,52,1.71,57,2.827,74,1.511,75,2.395,76,1.572,77,1.71,78,2.901,80,0.701,87,0.104,88,1.457,89,0.905,91,1.127,92,2.637,96,2.237,109,1.71,291,2.869,395,2.606,409,2.869,411,1.71,462,1.822,503,1.71,507,3.244,509,3.546,518,2.606,519,2.115,520,3.222,521,3.222,522,3.222,523,4.364,524,3.222,525,2.115,526,2.467,527,5.304,528,2.115,529,3.758,530,2.467,531,2.115,532,2.467,533,2.467,534,2.115,535,2.467,536,3.758,537,2.467,538,2.115,539,2.115,540,2.689,541,2.115,542,2.115,543,2.115,544,2.467,545,2.115,546,2.115,547,2.467,548,2.467,549,2.467,550,2.467,551,2.467,552,2.467,553,2.467,554,2.467,555,2.467,556,2.467,557,2.467,558,2.467,559,3.758,560,2.467,561,2.467,562,2.467]],["title/classes/ProductsDto.html",[87,0.154,509,2.157]],["body/classes/ProductsDto.html",[3,0.105,4,0.09,5,0.09,7,0.152,8,0.681,14,1.07,15,2.938,17,0.708,18,0.577,19,0.02,20,1.647,21,0.105,22,0.007,23,0.01,24,0.007,42,2.852,44,0.87,74,1.521,87,0.194,118,0.584,242,3.566,251,2.539,259,3.566,264,2.539,269,3.566,273,2.539,278,3.566,363,2.432,365,3.566,373,2.723,377,2.378,470,3.519,471,3.196,472,3.519,473,3.519,474,3.519,475,3.519,477,3.519,478,2.539,479,3.196,509,2.255,510,4.41,511,4.41,513,1.922,514,4.988,515,1.922,517,4.41,563,2.158,564,3.952,565,2.517,566,2.517,567,2.517,568,2.517,569,2.517,570,2.517,571,2.517,572,2.517,573,2.517,574,2.517,575,2.517,576,2.517,577,2.517,578,2.517,579,3.566,580,2.517,581,2.517,582,2.517,583,2.517,584,2.517,585,2.517,586,2.517,587,2.517,588,2.517]],["title/modules/ProductsModule.html",[127,1.491,217,2.327]],["body/modules/ProductsModule.html",[3,0.142,4,0.122,5,0.122,19,0.02,21,0.142,22,0.009,23,0.012,24,0.009,27,1.838,74,1.735,80,0.966,87,0.143,127,1.94,129,1.648,130,2.303,134,2.617,135,1.873,136,1.873,138,2.807,140,2.008,141,1.388,145,2.807,146,4.228,147,4.228,216,3.818,217,4.314,251,1.873,264,1.873,273,1.873,359,2.167,462,1.648,478,1.873,518,3.797,540,3.818,541,2.915,589,2.915,590,3.399,591,2.915,592,3.399,593,3.399,594,3.399,595,3.627,596,3.399,597,3.627,598,3.399,599,3.627,600,3.399,601,3.627,602,3.399,603,4.181,604,3.399,605,3.627,606,3.399,607,3.627,608,3.399]],["title/injectables/ProductsService.html",[148,1.412,540,2.157]],["body/injectables/ProductsService.html",[3,0.074,4,0.063,5,0.063,7,0.107,9,1.153,14,1.521,17,0.673,18,0.442,19,0.02,20,1.825,21,0.074,22,0.012,23,0.007,24,0.005,30,1.18,31,3.149,44,0.712,46,2.516,47,2.129,49,2.248,50,0.858,57,2.603,74,1.345,80,0.503,87,0.074,89,1.06,91,2.286,92,2.928,96,1.903,141,0.722,148,1.118,149,0.974,151,2.206,154,1.842,156,2.329,159,2.206,160,2.932,176,1.226,177,0.912,178,1.127,180,1.707,182,2.405,191,1.516,192,1.516,194,2.003,197,1.127,198,1.842,199,1.127,200,1.127,201,1.127,202,1.127,242,3.232,255,1.045,312,1.35,347,2.206,348,1.35,370,2.907,395,2.003,411,2.003,414,2.907,454,2.477,456,1.516,462,1.401,465,1.516,467,1.516,507,2.695,509,3.118,520,2.477,521,2.477,522,2.477,523,3.626,524,2.477,525,2.477,527,2.477,528,2.477,531,2.477,534,2.477,539,1.516,540,1.707,542,1.516,543,1.516,545,1.516,546,1.516,609,1.516,610,4.661,611,1.769,612,1.769,613,2.889,614,1.769,615,1.769,616,1.769,617,1.769,618,1.769,619,1.769,620,2.889,621,4.661,622,4.229,623,1.769,624,1.516,625,4.661,626,3.229,627,1.769,628,1.769,629,1.769,630,1.769,631,2.889,632,3.14,633,2.477,634,1.769,635,1.769,636,2.889,637,2.889,638,2.889,639,2.889,640,2.889,641,2.889,642,1.516,643,1.769,644,1.769,645,1.769,646,1.769,647,1.769,648,1.769,649,3.663,650,1.769,651,1.769,652,1.769]],["title/interfaces/Register.html",[0,1.412,653,2.157]],["body/interfaces/Register.html",[0,1.532,2,2.181,3,0.165,4,0.142,5,0.142,7,0.239,8,0.94,9,1.542,17,0.766,18,0.554,19,0.019,21,0.165,22,0.01,23,0.014,24,0.01,284,3.26,285,3.064,469,4.824,653,3.114,654,3.395,655,4.824,656,4.824,657,4.824,658,4.824]],["title/controllers/RegisterController.html",[25,1.412,659,2.532]],["body/controllers/RegisterController.html",[3,0.104,4,0.089,5,0.089,7,0.15,9,1.151,14,1.345,17,0.647,18,0.41,19,0.02,21,0.104,22,0.016,23,0.01,24,0.006,25,0.963,27,0.963,29,1.587,30,1.545,31,3.052,42,2.838,44,0.688,46,2.513,47,2.128,49,2.246,52,1.726,57,2.835,74,1.471,75,2.917,76,1.587,77,1.726,78,2.917,80,0.707,87,0.105,88,1.47,89,0.913,91,2.092,92,2.751,96,2.088,109,2.624,156,1.371,177,1.284,284,1.284,285,2.219,304,2.521,409,2.889,427,3.244,626,4.736,653,2.235,659,2.624,660,2.134,661,3.244,662,3.244,663,3.244,664,2.917,665,3.924,666,2.134,667,2.489,668,2.489,669,2.134,670,3.783,671,2.489,672,2.134,673,3.259,674,2.489,675,3.244,676,2.134,677,3.259,678,3.783,679,2.489,680,2.134,681,3.259,682,3.783,683,2.489,684,2.134,685,2.134,686,2.134,687,2.134,688,2.134,689,2.489,690,2.489,691,2.489,692,4.577,693,2.134,694,2.489,695,2.489,696,2.489,697,2.489,698,2.489,699,2.489]],["title/classes/RegisterDto.html",[87,0.154,673,2.327]],["body/classes/RegisterDto.html",[3,0.172,4,0.147,5,0.147,7,0.249,8,0.965,9,1.534,17,0.745,18,0.549,19,0.019,21,0.172,22,0.011,23,0.014,24,0.011,44,0.855,87,0.173,118,0.957,284,3.119,285,2.931,655,4.615,656,4.615,657,4.615,658,4.615,673,3.45,700,3.534,701,4.121,702,4.121,703,4.121,704,4.121,705,4.121,706,4.121]],["title/modules/RegisterModule.html",[127,1.491,218,2.157]],["body/modules/RegisterModule.html",[3,0.174,4,0.149,5,0.149,19,0.019,21,0.174,22,0.011,23,0.014,24,0.011,27,2.109,74,1.635,80,1.185,87,0.175,127,2.227,129,2.021,130,2.644,134,3.004,135,2.296,136,2.296,138,3.222,139,3.781,140,2.462,141,1.702,145,2.462,146,2.657,147,2.657,218,4.132,304,4.043,653,2.462,659,4.214,688,3.574,707,3.574,708,3.574,709,3.574,710,4.168,711,4.168,712,4.164,713,4.168]],["title/injectables/RegisterService.html",[148,1.412,304,2.011]],["body/injectables/RegisterService.html",[3,0.068,4,0.058,5,0.058,7,0.098,9,1.114,14,1.034,17,0.678,18,0.427,19,0.02,20,0.702,21,0.068,22,0.004,23,0.007,24,0.004,30,1.101,31,3.045,44,0.665,46,2.432,47,2.059,49,2.077,50,0.788,57,2.195,74,1.349,80,0.462,87,0.068,89,0.596,91,2.601,92,2.867,96,1.64,141,0.664,148,1.043,149,0.896,154,1.718,156,2.213,160,2.786,176,1.127,177,0.839,178,1.036,180,0.96,182,2.937,187,2.311,194,3.33,197,2.561,198,1.718,199,1.036,200,1.036,201,1.036,202,1.036,284,2.937,285,2.832,304,1.485,312,1.241,313,4.346,346,1.394,347,3.401,348,1.241,469,1.241,538,1.394,626,3.667,632,1.394,633,1.394,642,3.819,653,2.373,661,2.311,662,2.311,663,2.311,664,1.718,665,2.311,666,2.311,669,2.311,672,2.311,673,2.561,675,4.361,676,2.311,677,2.561,680,2.311,681,2.561,684,1.394,685,1.394,686,1.394,687,1.394,693,1.394,714,1.241,715,2.695,716,2.695,717,1.626,718,1.626,719,2.695,720,1.626,721,1.626,722,2.695,723,1.626,724,1.626,725,1.626,726,1.626,727,2.695,728,1.626,729,1.626,730,1.626,731,1.626,732,1.626,733,1.394,734,1.626,735,1.127,736,1.394,737,2.636,738,1.394,739,1.626,740,2.695,741,1.626,742,1.626,743,2.695,744,4.802,745,1.626,746,1.626,747,1.626,748,1.626,749,1.626,750,1.626,751,4.802,752,1.626,753,1.626,754,1.626,755,2.695,756,1.626,757,2.695,758,1.626,759,2.695,760,2.695,761,1.626,762,2.695,763,1.626,764,2.695,765,1.626,766,2.695,767,1.626,768,1.626]],["title/classes/Thumbnail.html",[87,0.154,478,2.011]],["body/classes/Thumbnail.html",[3,0.206,4,0.176,5,0.176,7,0.297,8,1.082,9,1.436,14,1.526,17,0.698,18,0.487,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.144,275,4.188,478,3.342,769,4.227,770,4.929,771,4.929]],["title/classes/ThumbnailDto.html",[87,0.154,579,2.532]],["body/classes/ThumbnailDto.html",[3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,14,1.538,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.767,87,0.211,118,1.165,275,4.222,579,4.253,772,4.303,773,5.019,774,5.019]],["title/interfaces/UpdatePassword.html",[0,1.412,664,2.327]],["body/interfaces/UpdatePassword.html",[0,2.034,2,2.896,3,0.219,4,0.188,5,0.188,7,0.317,8,1.125,17,0.688,18,0.422,19,0.018,21,0.219,22,0.014,23,0.016,24,0.014,664,4.021,775,4.508,776,6.009]],["title/classes/UpdatePasswordDto.html",[87,0.154,677,2.327]],["body/classes/UpdatePasswordDto.html",[3,0.218,4,0.187,5,0.187,7,0.316,8,1.122,17,0.64,18,0.42,19,0.019,21,0.218,22,0.014,23,0.016,24,0.014,44,0.654,87,0.22,118,1.215,677,4.009,776,5.783,777,4.487,778,5.232]],["title/interfaces/UpdateUsernameDto.html",[0,1.412,681,2.327]],["body/interfaces/UpdateUsernameDto.html",[0,1.942,2,2.765,3,0.209,4,0.18,5,0.18,7,0.303,8,1.094,17,0.733,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,284,3.56,681,3.909,779,4.303,780,6.899]],["title/coverage.html",[781,3.811]],["body/coverage.html",[0,2.099,1,1.253,5,0.076,6,1.819,18,0.17,19,0.02,22,0.006,23,0.009,24,0.006,25,2.099,26,1.471,28,1.819,41,1.471,67,1.352,81,1.253,87,0.295,119,1.819,143,1.62,148,2.099,150,1.819,182,1.095,204,1.471,205,1.819,208,1.253,221,1.352,223,1.169,245,1.819,249,1.819,251,1.169,252,1.819,259,1.471,260,1.819,264,1.169,265,1.819,269,1.471,270,1.819,273,1.169,274,1.819,278,1.471,279,1.819,282,1.253,283,1.819,286,1.819,298,1.352,304,1.169,321,1.819,331,1.62,333,1.819,359,1.352,360,1.819,365,1.471,366,1.819,370,1.169,371,1.819,373,1.253,374,1.819,377,1.725,378,1.819,382,1.819,386,1.471,387,1.819,414,1.169,438,1.62,440,1.819,462,1.029,468,1.819,478,1.169,503,1.471,504,1.819,507,1.352,508,1.819,509,1.253,518,1.471,519,1.819,540,1.253,563,1.819,579,1.471,595,1.62,597,1.62,599,1.62,601,1.62,603,1.62,605,1.62,607,1.62,609,1.819,653,1.253,654,1.819,659,1.471,660,1.819,664,1.352,673,1.352,677,1.352,681,1.352,700,1.819,712,1.62,714,3.159,735,1.471,737,1.62,769,1.819,772,1.819,775,1.819,777,1.819,779,1.819,781,1.62,782,2.121,783,2.121,784,2.121,785,7.506,786,5.108,787,2.121,788,5.68,789,1.819,790,6.521,791,6.603,792,6.521,793,2.121,794,4.137,795,1.819,796,1.819,797,2.121,798,1.819,799,3.343,800,1.819,801,4.695,802,2.121,803,2.121,804,1.819,805,1.819,806,1.819,807,1.819,808,1.819,809,1.819,810,1.819,811,2.121,812,2.121,813,1.819,814,2.121,815,2.121]],["title/dependencies.html",[130,2.13,816,3.045]],["body/dependencies.html",[19,0.02,22,0.012,23,0.015,24,0.012,80,1.302,87,0.244,130,2.222,141,1.871,177,2.364,226,3.929,513,3.499,515,3.499,733,3.929,735,3.177,817,4.582,818,4.582,819,6.357,820,4.582,821,4.582,822,4.582,823,4.582,824,4.582,825,4.582,826,4.582,827,4.582,828,4.582,829,4.582,830,4.582,831,3.929,832,4.582,833,4.582,834,4.582,835,4.582,836,4.582,837,4.582,838,4.582,839,4.582,840,4.582]],["title/miscellaneous/functions.html",[841,2.111,842,3.767]],["body/miscellaneous/functions.html",[7,0.34,19,0.017,22,0.015,23,0.017,24,0.015,796,4.829,798,5.965,841,3.905,842,4.829,843,5.632]],["title/index.html",[7,0.184,844,3.045,845,3.045]],["body/index.html",[4,0.141,19,0.019,22,0.01,23,0.014,24,0.01,471,2.735,479,2.735,781,3.012,831,5.072,846,3.945,847,3.945,848,5.258,849,3.945,850,3.945,851,3.945,852,3.945,853,3.945,854,3.945,855,3.945,856,3.945,857,3.945,858,3.945,859,6.9,860,3.945,861,3.945,862,3.945,863,6.759,864,3.945,865,3.945,866,5.258,867,3.945,868,3.945,869,3.945,870,5.258,871,5.258,872,3.945,873,3.945,874,3.945,875,5.258,876,5.258,877,3.945,878,3.945,879,3.945,880,3.945,881,3.945,882,3.382,883,3.945,884,3.945,885,3.945,886,3.945,887,3.945,888,3.945,889,3.945,890,3.945,891,3.945,892,3.945,893,3.945,894,3.945,895,3.945,896,3.945,897,3.945,898,3.945,899,3.945,900,3.945]],["title/modules.html",[129,2.42]],["body/modules.html",[19,0.016,22,0.013,23,0.016,24,0.013,128,3.214,129,2.445,211,3.496,215,3.214,216,2.979,217,3.214,218,2.979,882,6.179,901,7.207,902,7.207,903,7.207]],["title/overview.html",[904,4.279]],["body/overview.html",[2,1.89,19,0.019,22,0.009,23,0.012,24,0.009,27,1.327,81,3.929,118,0.797,128,4.132,129,1.664,130,2.318,131,2.942,132,2.942,133,2.942,134,2.634,135,1.89,136,1.89,149,1.89,208,3.251,211,5.003,212,2.942,213,2.942,214,2.942,215,4.324,216,3.929,217,4.239,218,3.929,223,3.664,304,3.664,324,2.942,326,2.942,327,2.942,414,3.664,433,2.942,434,2.942,435,2.942,540,3.251,589,2.942,591,2.942,707,2.942,708,2.942,709,2.942,904,2.942,905,5.952,906,3.431]],["title/miscellaneous/variables.html",[841,2.111,907,3.767]],["body/miscellaneous/variables.html",[7,0.161,10,2.043,11,1.705,12,1.855,13,1.855,14,1.382,15,2.547,16,1.855,17,0.761,18,0.215,19,0.019,20,2.064,22,0.007,23,0.01,24,0.007,47,1.035,143,3.051,182,3.456,251,1.474,253,2.547,254,2.547,255,4.123,264,1.474,266,2.043,273,1.474,275,2.547,284,2.061,285,1.937,331,3.051,363,3.048,372,2.547,373,1.581,438,3.051,470,2.043,471,1.855,472,2.043,473,2.043,474,2.043,475,2.043,477,2.043,478,1.474,479,1.855,564,2.294,595,3.651,597,3.651,599,3.651,601,3.651,603,3.651,605,3.051,607,3.651,624,5.88,655,2.043,656,2.043,657,2.043,658,2.043,712,3.051,714,2.043,735,2.77,736,2.294,737,3.051,738,2.294,789,2.294,795,2.294,800,2.294,804,2.294,805,2.294,806,2.294,807,2.294,808,2.294,809,2.294,810,2.294,813,2.294,841,1.855,907,2.294,908,2.676,909,3.995,910,2.676,911,2.676,912,2.676,913,2.676,914,2.676,915,2.676,916,2.676,917,2.676,918,2.676,919,2.676,920,6.698]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":381,"title":{"classes/ProductClassDto-1.html":{}},"body":{}}],["12",{"_index":738,"title":{},"body":{"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["172.17.0.1",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["2.4.2",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":906,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["5.13.2",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":905,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":469,"title":{},"body":{"classes/Products.html":{},"interfaces/Register.html":{},"injectables/RegisterService.html":{}}}],["action",{"_index":160,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["active",{"_index":470,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["added",{"_index":95,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addlogs",{"_index":151,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["addlogs(id",{"_index":159,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["addproduct",{"_index":389,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproduct(@body",{"_index":419,"title":{},"body":{"controllers/ProductController.html":{}}}],["addproduct(product",{"_index":396,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproductclasslist",{"_index":390,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproductclasslist(productclasslist",{"_index":398,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["admin",{"_index":1,"title":{"interfaces/Admin.html":{}},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":142,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":82,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":26,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["admindto",{"_index":67,"title":{"classes/AdminDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["adminmodel",{"_index":158,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminmodule",{"_index":128,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":143,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminservice",{"_index":81,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["allproductclasses",{"_index":391,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["already",{"_index":632,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["amazing",{"_index":883,"title":{},"body":{"index.html":{}}}],["anycontactdata",{"_index":10,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":861,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":204,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":854,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":208,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprove",{"_index":162,"title":{},"body":{"injectables/AdminService.html":{},"classes/AproveDto.html":{}}}],["aprovecomment",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["aprovecomment(@param('id",{"_index":110,"title":{},"body":{"controllers/AdminController.html":{}}}],["aprovecomment(commentid",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["aproved",{"_index":11,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["aprovedto",{"_index":41,"title":{"classes/AproveDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AproveDto.html":{},"coverage.html":{}}}],["array",{"_index":191,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductsService.html":{}}}],["async",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["author",{"_index":893,"title":{},"body":{"index.html":{}}}],["await",{"_index":92,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["backers",{"_index":884,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":735,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare",{"_index":758,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.compare(password",{"_index":752,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.compare(updatedata.password",{"_index":765,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.hash",{"_index":763,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.hash(userdata.password",{"_index":741,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcryptjs",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["boolean",{"_index":20,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["boolean=false",{"_index":637,"title":{},"body":{"injectables/ProductsService.html":{}}}],["bootstrap",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":903,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":901,"title":{},"body":{"modules.html":{}}}],["building",{"_index":849,"title":{},"body":{"index.html":{}}}],["called",{"_index":98,"title":{},"body":{"controllers/AdminController.html":{}}}],["cet",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["check",{"_index":631,"title":{},"body":{"injectables/ProductsService.html":{}}}],["class",{"_index":87,"title":{"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":131,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":132,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":133,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":324,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_exports",{"_index":326,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":325,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_providers",{"_index":327,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":433,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":435,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":434,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":589,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":590,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":591,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_registermodule",{"_index":707,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_exports",{"_index":709,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_providers",{"_index":708,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["comment",{"_index":12,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["commentexist",{"_index":152,"title":{},"body":{"injectables/AdminService.html":{}}}],["commentexist(result",{"_index":164,"title":{},"body":{"injectables/AdminService.html":{}}}],["commentid",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["config",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["config/address",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":312,"title":{},"body":{"controllers/LoginController.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["console.log('comment",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["console.log(`product",{"_index":461,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":91,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["constructor(adminmodel",{"_index":155,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(loginmodel",{"_index":336,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["constructor(productmodel",{"_index":441,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(productsmodel",{"_index":611,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(registermodel",{"_index":717,"title":{},"body":{"injectables/RegisterService.html":{}}}],["controller",{"_index":25,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":86,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('login",{"_index":306,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('productclasses",{"_index":418,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('products",{"_index":549,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('register",{"_index":689,"title":{},"body":{"controllers/RegisterController.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["countrycode",{"_index":266,"title":{},"body":{"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":781,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":621,"title":{},"body":{"injectables/ProductsService.html":{}}}],["created",{"_index":636,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproduct",{"_index":520,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":550,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(inputdata",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproducts",{"_index":521,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproducts(@body",{"_index":552,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproducts(inputdata",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["current_product",{"_index":463,"title":{},"body":{"injectables/ProductService.html":{}}}],["customattributes",{"_index":251,"title":{"classes/CustomAttributes.html":{}},"body":{"classes/CustomAttributes.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customattributes.interface",{"_index":502,"title":{},"body":{"classes/Products.html":{}}}],["customattributes.interface.dto",{"_index":588,"title":{},"body":{"classes/ProductsDto.html":{}}}],["customattributesdto",{"_index":259,"title":{"classes/CustomAttributesDto.html":{}},"body":{"classes/CustomAttributesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["customattributesschema",{"_index":595,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":640,"title":{},"body":{"injectables/ProductsService.html":{}}}],["date",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["date().tolocalestring('hu",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["dateadded",{"_index":13,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["datecomment",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["dateofbirth",{"_index":655,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"controllers/RegisterController.html":{}}}],["default",{"_index":624,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["delete",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["delete(':id",{"_index":409,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["deletecomment",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{}}}],["deletecomment(@query",{"_index":113,"title":{},"body":{"controllers/AdminController.html":{}}}],["deletecomment(input",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{}}}],["deleted",{"_index":562,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":522,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('id",{"_index":560,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":531,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteuser",{"_index":661,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["deleteuser(@param('id",{"_index":696,"title":{},"body":{"controllers/RegisterController.html":{}}}],["deleteuser(id",{"_index":666,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dependencies",{"_index":130,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":471,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":862,"title":{},"body":{"index.html":{}}}],["docker",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["documentation",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["dto/admin.interface.dto",{"_index":83,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["dto/aprove.interface.dto",{"_index":85,"title":{},"body":{"controllers/AdminController.html":{}}}],["dto/login.interface.dto",{"_index":301,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["dto/product.interface.dto",{"_index":416,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/products.array.interface.dto",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/products.interface.dto",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/products.with.product.class.interface.dto",{"_index":546,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/register.interface.dto",{"_index":684,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dto/update.password.interface.dto",{"_index":685,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dto/update.username.interface.dto",{"_index":686,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["e2e",{"_index":872,"title":{},"body":{"index.html":{}}}],["each",{"_index":517,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["eancode",{"_index":472,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["eanpackagecode",{"_index":473,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":850,"title":{},"body":{"index.html":{}}}],["email",{"_index":656,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":768,"title":{},"body":{"injectables/RegisterService.html":{}}}],["exist",{"_index":641,"title":{},"body":{"injectables/ProductsService.html":{}}}],["exists",{"_index":633,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/RegisterModule.html":{}}}],["express",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":625,"title":{},"body":{"injectables/ProductsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["find",{"_index":353,"title":{},"body":{"injectables/LoginService.html":{}}}],["find/update",{"_index":643,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyusername",{"_index":334,"title":{},"body":{"injectables/LoginService.html":{}}}],["findbyusername(username",{"_index":339,"title":{},"body":{"injectables/LoginService.html":{}}}],["findcommentbyid",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbyid(@param('id",{"_index":102,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbyid(id",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbynickname",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbynickname(@query",{"_index":97,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbynickname(inputnick",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbynickname(nickaname",{"_index":167,"title":{},"body":{"injectables/AdminService.html":{}}}],["findcommentsbydate",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentsbydate(@param('datecomment",{"_index":104,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentsbydate(datecomment",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findproductbyid",{"_index":392,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyid(@param('id",{"_index":424,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbyid(id",{"_index":403,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyname",{"_index":393,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyname(name",{"_index":449,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductbyname(product",{"_index":405,"title":{},"body":{"controllers/ProductController.html":{}}}],["finduser",{"_index":287,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["finduser(@param('id",{"_index":315,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduser(id",{"_index":290,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["finduserbyusername",{"_index":288,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduserbyusername(@param('username",{"_index":317,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduserbyusername(username",{"_index":293,"title":{},"body":{"controllers/LoginController.html":{}}}],["firstname",{"_index":657,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["foreignnames",{"_index":264,"title":{"classes/ForeignNames.html":{}},"body":{"classes/ForeignNames.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foreignnames.interface",{"_index":497,"title":{},"body":{"classes/Products.html":{}}}],["foreignnames.interface.dto",{"_index":583,"title":{},"body":{"classes/ProductsDto.html":{}}}],["foreignnamesdto",{"_index":269,"title":{"classes/ForeignNamesDto.html":{}},"body":{"classes/ForeignNamesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["foreignnamesschema",{"_index":597,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{}}}],["framework",{"_index":848,"title":{},"body":{"index.html":{}}}],["function",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":842,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":291,"title":{},"body":{"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{}}}],["get('filterbydate/:datecomment",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('filterbyid/:id",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('filterbynickname",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('findbyusername/:username",{"_index":294,"title":{},"body":{"controllers/LoginController.html":{}}}],["get('isregistered/:username",{"_index":670,"title":{},"body":{"controllers/RegisterController.html":{}}}],["getallproducts",{"_index":523,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["gethello",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproduct",{"_index":524,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproduct(@param('id",{"_index":554,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproduct(id",{"_index":534,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getting",{"_index":844,"title":{"index.html":{}},"body":{}}],["grow",{"_index":879,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":742,"title":{},"body":{"injectables/RegisterService.html":{}}}],["hello",{"_index":247,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":890,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/admin/filterbynickname?nickname=visitornick",{"_index":99,"title":{},"body":{"controllers/AdminController.html":{}}}],["http://localhost:3000/admin?id=id",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{}}}],["httpcode",{"_index":346,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["httpexception",{"_index":347,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpexception('old",{"_index":761,"title":{},"body":{"injectables/RegisterService.html":{}}}],["httpexception('please",{"_index":767,"title":{},"body":{"injectables/RegisterService.html":{}}}],["https://nestjs.com",{"_index":897,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":348,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpstatus.bad_request",{"_index":642,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpstatus.not_found",{"_index":749,"title":{},"body":{"injectables/RegisterService.html":{}}}],["hu",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["imagename",{"_index":275,"title":{},"body":{"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":273,"title":{"classes/Images.html":{}},"body":{"classes/Images.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["images.interface",{"_index":500,"title":{},"body":{"classes/Products.html":{}}}],["images.interface.dto",{"_index":586,"title":{},"body":{"classes/ProductsDto.html":{}}}],["imagesdto",{"_index":278,"title":{"classes/ImagesDto.html":{}},"body":{"classes/ImagesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["imagesschema",{"_index":599,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{}}}],["imports",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["injectable",{"_index":148,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["injectables",{"_index":149,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"overview.html":{}}}],["injectmodel",{"_index":178,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["injectmodel('admin",{"_index":179,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel('login",{"_index":349,"title":{},"body":{"injectables/LoginService.html":{}}}],["injectmodel('product",{"_index":453,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel('products",{"_index":629,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectmodel('register",{"_index":739,"title":{},"body":{"injectables/RegisterService.html":{}}}],["input",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{}}}],["input.aprove",{"_index":112,"title":{},"body":{"controllers/AdminController.html":{}}}],["inputdata",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["inputdata.products",{"_index":645,"title":{},"body":{"injectables/ProductsService.html":{}}}],["inputnick",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{}}}],["installation",{"_index":858,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":860,"title":{},"body":{"index.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{}},"body":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{},"overview.html":{}}}],["interfaces/admin.interface",{"_index":84,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["interfaces/login.interface",{"_index":303,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["interfaces/product.interface",{"_index":417,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["interfaces/products.interface",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["interfaces/products.with.classes.interface",{"_index":548,"title":{},"body":{"controllers/ProductsController.html":{}}}],["interfaces/productsarray.interface",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{}}}],["interfaces/register.interface",{"_index":687,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["ip",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["isregistered",{"_index":662,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["isregistered(@param('username",{"_index":694,"title":{},"body":{"controllers/RegisterController.html":{}}}],["isregistered(username",{"_index":669,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["join",{"_index":886,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":894,"title":{},"body":{"index.html":{}}}],["key",{"_index":253,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":658,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":732,"title":{},"body":{"injectables/RegisterService.html":{}}}],["license",{"_index":900,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":876,"title":{},"body":{"index.html":{}}}],["likes",{"_index":474,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["listallusers",{"_index":289,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["localhost:3000/productclasses",{"_index":422,"title":{},"body":{"controllers/ProductController.html":{}}}],["logged",{"_index":314,"title":{},"body":{"controllers/LoginController.html":{}}}],["login",{"_index":282,"title":{"interfaces/Login.html":{}},"body":{"interfaces/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["login(@body",{"_index":307,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(logininfo",{"_index":297,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.controller",{"_index":330,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.service",{"_index":302,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login/login.controller",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.module",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.service",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["logincontroller",{"_index":221,"title":{"controllers/LoginController.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["logindto",{"_index":298,"title":{"classes/LoginDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["logininfo",{"_index":300,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logininfo.password",{"_index":310,"title":{},"body":{"controllers/LoginController.html":{}}}],["logininfo.username",{"_index":309,"title":{},"body":{"controllers/LoginController.html":{}}}],["loginmodel",{"_index":338,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodule",{"_index":215,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginschema",{"_index":331,"title":{},"body":{"modules/LoginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginservice",{"_index":223,"title":{"injectables/LoginService.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["logisticdata",{"_index":475,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["logisticsdata",{"_index":359,"title":{"classes/LogisticsData.html":{}},"body":{"classes/LogisticsData.html":{},"classes/Products.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["logisticsdata.interface",{"_index":501,"title":{},"body":{"classes/Products.html":{}}}],["logisticsdata.interface.dto",{"_index":587,"title":{},"body":{"classes/ProductsDto.html":{}}}],["logisticsdatadto",{"_index":365,"title":{"classes/LogisticsDataDto.html":{}},"body":{"classes/LogisticsDataDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["logisticsdataschema",{"_index":601,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["miscellaneous",{"_index":841,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":875,"title":{},"body":{"index.html":{}}}],["mode",{"_index":866,"title":{},"body":{"index.html":{}}}],["model",{"_index":156,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["module",{"_index":127,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["modules",{"_index":129,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":177,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":140,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["mongoosemodule.forroot(config.mongodburi",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":889,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":895,"title":{},"body":{"index.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":831,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestframework",{"_index":899,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":80,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":141,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newloginuser",{"_index":350,"title":{},"body":{"injectables/LoginService.html":{}}}],["newloginuser.save",{"_index":352,"title":{},"body":{"injectables/LoginService.html":{}}}],["newpasshashed",{"_index":762,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newpassword",{"_index":776,"title":{},"body":{"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{}}}],["newproduct",{"_index":454,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["newproduct.save",{"_index":456,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["newuser",{"_index":745,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newuser.save",{"_index":747,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newusername",{"_index":780,"title":{},"body":{"interfaces/UpdateUsernameDto.html":{}}}],["newvisitor",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{}}}],["newvisitor.save",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["nickaname",{"_index":169,"title":{},"body":{"injectables/AdminService.html":{}}}],["node.js",{"_index":847,"title":{},"body":{"index.html":{}}}],["note",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["notfoundexception",{"_index":176,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["notfoundexception('comment",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{}}}],["notfoundexception(`product",{"_index":644,"title":{},"body":{"injectables/ProductsService.html":{}}}],["npm",{"_index":859,"title":{},"body":{"index.html":{}}}],["number",{"_index":363,"title":{},"body":{"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":729,"title":{},"body":{"injectables/RegisterService.html":{}}}],["objects",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductsService.html":{}}}],["observable",{"_index":730,"title":{},"body":{"injectables/RegisterService.html":{}}}],["one",{"_index":354,"title":{},"body":{"injectables/LoginService.html":{}}}],["open",{"_index":877,"title":{},"body":{"index.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/CustomAttributes.html":{},"classes/ForeignNames.html":{},"classes/Images.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["overview",{"_index":904,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":816,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["param('id",{"_index":427,"title":{},"body":{"controllers/ProductController.html":{},"controllers/RegisterController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["passhashed",{"_index":740,"title":{},"body":{"injectables/RegisterService.html":{}}}],["password",{"_index":284,"title":{},"body":{"interfaces/Login.html":{},"classes/LoginDto.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/variables.html":{}}}],["passwordsequal",{"_index":751,"title":{},"body":{"injectables/RegisterService.html":{}}}],["patch",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["patch(':id",{"_index":412,"title":{},"body":{"controllers/ProductController.html":{}}}],["patch('aprove/:id",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('update/:id",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('updatepassword/:id",{"_index":678,"title":{},"body":{"controllers/RegisterController.html":{}}}],["patch('updateusername/:id",{"_index":682,"title":{},"body":{"controllers/RegisterController.html":{}}}],["please",{"_index":887,"title":{},"body":{"index.html":{}}}],["post",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["post('addcomment",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('addproductclasslist",{"_index":399,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('createproducts",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('findbyname",{"_index":406,"title":{},"body":{"controllers/ProductController.html":{}}}],["prefix",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["product",{"_index":370,"title":{"interfaces/Product.html":{}},"body":{"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["product.controller",{"_index":437,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.service",{"_index":415,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["productclass",{"_index":373,"title":{"classes/ProductClass.html":{}},"body":{"classes/ProductClass.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productclass.interface",{"_index":498,"title":{},"body":{"classes/Products.html":{}}}],["productclassdto",{"_index":377,"title":{"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{}},"body":{"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["productclasses",{"_index":388,"title":{},"body":{"controllers/ProductController.html":{}}}],["productclasslist",{"_index":401,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productclassschema",{"_index":603,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productcode",{"_index":15,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["productcontroller",{"_index":386,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productexist",{"_index":610,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productexist(id",{"_index":620,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productgroupname",{"_index":383,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["production",{"_index":868,"title":{},"body":{"index.html":{}}}],["productmodel",{"_index":443,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":216,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productname",{"_index":564,"title":{},"body":{"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["productnane",{"_index":476,"title":{},"body":{"classes/Products.html":{}}}],["products",{"_index":462,"title":{"classes/Products.html":{}},"body":{"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["products.controller",{"_index":594,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.interface",{"_index":506,"title":{},"body":{"classes/ProductsArray.html":{}}}],["products.interface.dto",{"_index":516,"title":{},"body":{"classes/ProductsArrayDto.html":{}}}],["products.push(newproduct.save",{"_index":465,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["productsarray",{"_index":503,"title":{"classes/ProductsArray.html":{}},"body":{"classes/ProductsArray.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["productsarraydto",{"_index":507,"title":{"classes/ProductsArrayDto.html":{}},"body":{"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productschema",{"_index":438,"title":{},"body":{"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":518,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsdto",{"_index":509,"title":{"classes/ProductsDto.html":{}},"body":{"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productservice",{"_index":414,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productsmodel",{"_index":613,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsmodule",{"_index":217,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsschema",{"_index":605,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productsservice",{"_index":540,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productswithclasses",{"_index":547,"title":{},"body":{"controllers/ProductsController.html":{}}}],["productswithproductclassdto",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["progressive",{"_index":846,"title":{},"body":{"index.html":{}}}],["project",{"_index":878,"title":{},"body":{"index.html":{}}}],["promise",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["promise.all(products",{"_index":467,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["promise.all(promises",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["promises",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["prompt",{"_index":254,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"interfaces/Register.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["put",{"_index":538,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/RegisterService.html":{}}}],["put(':id",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query",{"_index":79,"title":{},"body":{"controllers/AdminController.html":{}}}],["read",{"_index":888,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":89,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/ProductClassDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["reflect",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":653,"title":{"interfaces/Register.html":{}},"body":{"interfaces/Register.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["register.controller",{"_index":711,"title":{},"body":{"modules/RegisterModule.html":{}}}],["register.service",{"_index":688,"title":{},"body":{"controllers/RegisterController.html":{},"modules/RegisterModule.html":{}}}],["register/register.module",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["registercontroller",{"_index":659,"title":{"controllers/RegisterController.html":{}},"body":{"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"coverage.html":{}}}],["registerdto",{"_index":673,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registered",{"_index":693,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["registerlogs",{"_index":715,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registerlogs(userdata",{"_index":722,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registermodel",{"_index":719,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registermodule",{"_index":218,"title":{"modules/RegisterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["registerschema",{"_index":712,"title":{},"body":{"modules/RegisterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerservice",{"_index":304,"title":{"injectables/RegisterService.html":{}},"body":{"controllers/LoginController.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":663,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["registeruser(@body",{"_index":690,"title":{},"body":{"controllers/RegisterController.html":{}}}],["registeruser(userdata",{"_index":672,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["removecomment",{"_index":153,"title":{},"body":{"injectables/AdminService.html":{}}}],["removecomment(id",{"_index":171,"title":{},"body":{"injectables/AdminService.html":{}}}],["removed",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{}}}],["removeproduct",{"_index":394,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["removeproduct(@param('id",{"_index":430,"title":{},"body":{"controllers/ProductController.html":{}}}],["removeproduct(id",{"_index":408,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["repository",{"_index":857,"title":{},"body":{"index.html":{}}}],["require('bcrypt",{"_index":736,"title":{},"body":{"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["result",{"_index":22,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":24,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":96,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["rimraf",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":863,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":733,"title":{},"body":{"injectables/RegisterService.html":{},"dependencies.html":{}}}],["saltrounds",{"_index":737,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scalable",{"_index":851,"title":{},"body":{"index.html":{}}}],["schema",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["schemas/admin.schema",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{}}}],["schemas/customattributes.schema",{"_index":596,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/foreignnames.schema",{"_index":598,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/images.schema",{"_index":600,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/login.schema",{"_index":332,"title":{},"body":{"modules/LoginModule.html":{}}}],["schemas/logisticsdata.schema",{"_index":602,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/product.schema",{"_index":439,"title":{},"body":{"modules/ProductModule.html":{}}}],["schemas/productclass.schema",{"_index":604,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/products.schema",{"_index":606,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/register.schema",{"_index":713,"title":{},"body":{"modules/RegisterModule.html":{}}}],["schemas/thumbnail.schema",{"_index":608,"title":{},"body":{"modules/ProductsModule.html":{}}}],["server",{"_index":852,"title":{},"body":{"index.html":{}}}],["set",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/RegisterService.html":{}}}],["side",{"_index":853,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"index.html":{}}}],["sponsors",{"_index":881,"title":{},"body":{"index.html":{}}}],["src/.../admin.schema.ts",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customattributes.schema.ts",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../foreignnames.schema.ts",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.schema.ts",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logisticsdata.schema.ts",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":843,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../productclass.schema.ts",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.schema.ts",{"_index":917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.schema.ts",{"_index":918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.service.ts",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../thumbnail.schema.ts",{"_index":919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/admin/admin.controller.ts",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.controller.ts:12",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:19",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:27",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:34",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:41",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:48",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:55",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":137,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":150,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/admin.service.ts:14",{"_index":175,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:19",{"_index":166,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:23",{"_index":168,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:27",{"_index":163,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:34",{"_index":170,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:39",{"_index":174,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:43",{"_index":172,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:47",{"_index":165,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:53",{"_index":161,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:9",{"_index":157,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/dto/admin.interface.dto.ts",{"_index":119,"title":{},"body":{"classes/AdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/admin.interface.dto.ts:2",{"_index":124,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:3",{"_index":125,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:4",{"_index":123,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:5",{"_index":122,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:6",{"_index":126,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:7",{"_index":120,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:8",{"_index":121,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/aprove.interface.dto.ts",{"_index":249,"title":{},"body":{"classes/AproveDto.html":{},"coverage.html":{}}}],["src/admin/dto/aprove.interface.dto.ts:2",{"_index":250,"title":{},"body":{"classes/AproveDto.html":{}}}],["src/admin/interfaces/admin.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Admin.html":{},"coverage.html":{}}}],["src/admin/schemas/admin.schema.ts",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":245,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["src/login/dto/login.interface.dto.ts",{"_index":321,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/login/dto/login.interface.dto.ts:2",{"_index":323,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/dto/login.interface.dto.ts:3",{"_index":322,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/interfaces/login.interface.ts",{"_index":283,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/login/login.controller.ts",{"_index":286,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/login/login.controller.ts:13",{"_index":299,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:26",{"_index":292,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:31",{"_index":295,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:37",{"_index":296,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.module.ts",{"_index":328,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/login/login.service.ts",{"_index":333,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/login/login.service.ts:13",{"_index":343,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:18",{"_index":341,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:23",{"_index":340,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:27",{"_index":345,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:39",{"_index":342,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:8",{"_index":337,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/schemas/login.schema.ts",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dto/product.interface.dto",{"_index":584,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/product/dto/product.interface.dto.ts",{"_index":378,"title":{},"body":{"classes/ProductClassDto.html":{},"coverage.html":{}}}],["src/product/dto/product.interface.dto.ts:2",{"_index":379,"title":{},"body":{"classes/ProductClassDto.html":{}}}],["src/product/dto/product.interface.dto.ts:3",{"_index":380,"title":{},"body":{"classes/ProductClassDto.html":{}}}],["src/product/interfaces/product.interface.ts",{"_index":371,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":387,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:12",{"_index":397,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:19",{"_index":402,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:25",{"_index":404,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:30",{"_index":407,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:37",{"_index":413,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":410,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":400,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module",{"_index":593,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/product/product.module.ts",{"_index":436,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service",{"_index":628,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/product/product.service.ts",{"_index":440,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:13",{"_index":445,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:20",{"_index":447,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":448,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":450,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:32",{"_index":452,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:40",{"_index":451,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:46",{"_index":444,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":446,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:8",{"_index":442,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/schemas/product.schema.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/dto/customattributes.interface.dto.ts",{"_index":260,"title":{},"body":{"classes/CustomAttributesDto.html":{},"coverage.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:2",{"_index":261,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:3",{"_index":262,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:4",{"_index":263,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts",{"_index":270,"title":{},"body":{"classes/ForeignNamesDto.html":{},"coverage.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts:2",{"_index":271,"title":{},"body":{"classes/ForeignNamesDto.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts:3",{"_index":272,"title":{},"body":{"classes/ForeignNamesDto.html":{}}}],["src/products/dto/images.interface.dto.ts",{"_index":279,"title":{},"body":{"classes/ImagesDto.html":{},"coverage.html":{}}}],["src/products/dto/images.interface.dto.ts:2",{"_index":280,"title":{},"body":{"classes/ImagesDto.html":{}}}],["src/products/dto/images.interface.dto.ts:3",{"_index":281,"title":{},"body":{"classes/ImagesDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts",{"_index":366,"title":{},"body":{"classes/LogisticsDataDto.html":{},"coverage.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:2",{"_index":367,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:3",{"_index":368,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:4",{"_index":369,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/productclass.interface.dto.ts",{"_index":382,"title":{},"body":{"classes/ProductClassDto-1.html":{},"coverage.html":{}}}],["src/products/dto/productclass.interface.dto.ts:2",{"_index":384,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["src/products/dto/productclass.interface.dto.ts:3",{"_index":385,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["src/products/dto/products.array.interface.dto.ts",{"_index":508,"title":{},"body":{"classes/ProductsArrayDto.html":{},"coverage.html":{}}}],["src/products/dto/products.array.interface.dto.ts:9",{"_index":512,"title":{},"body":{"classes/ProductsArrayDto.html":{}}}],["src/products/dto/products.interface.dto.ts",{"_index":563,"title":{},"body":{"classes/ProductsDto.html":{},"coverage.html":{}}}],["src/products/dto/products.interface.dto.ts:12",{"_index":571,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:13",{"_index":576,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:14",{"_index":577,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:18",{"_index":570,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:20",{"_index":575,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:21",{"_index":565,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:25",{"_index":581,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:29",{"_index":572,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:31",{"_index":582,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:32",{"_index":568,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:33",{"_index":569,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:37",{"_index":574,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:39",{"_index":578,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:43",{"_index":566,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:45",{"_index":573,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:46",{"_index":567,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts",{"_index":772,"title":{},"body":{"classes/ThumbnailDto.html":{},"coverage.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts:2",{"_index":773,"title":{},"body":{"classes/ThumbnailDto.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts:3",{"_index":774,"title":{},"body":{"classes/ThumbnailDto.html":{}}}],["src/products/interfaces/customattributes.interface.ts",{"_index":252,"title":{},"body":{"classes/CustomAttributes.html":{},"coverage.html":{}}}],["src/products/interfaces/customattributes.interface.ts:2",{"_index":256,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/customattributes.interface.ts:3",{"_index":257,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/customattributes.interface.ts:4",{"_index":258,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/foreignnames.interface.ts",{"_index":265,"title":{},"body":{"classes/ForeignNames.html":{},"coverage.html":{}}}],["src/products/interfaces/foreignnames.interface.ts:2",{"_index":267,"title":{},"body":{"classes/ForeignNames.html":{}}}],["src/products/interfaces/foreignnames.interface.ts:3",{"_index":268,"title":{},"body":{"classes/ForeignNames.html":{}}}],["src/products/interfaces/images.interface.ts",{"_index":274,"title":{},"body":{"classes/Images.html":{},"coverage.html":{}}}],["src/products/interfaces/images.interface.ts:2",{"_index":276,"title":{},"body":{"classes/Images.html":{}}}],["src/products/interfaces/images.interface.ts:3",{"_index":277,"title":{},"body":{"classes/Images.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts",{"_index":360,"title":{},"body":{"classes/LogisticsData.html":{},"coverage.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:2",{"_index":361,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:3",{"_index":362,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:4",{"_index":364,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/productclass.interface.ts",{"_index":374,"title":{},"body":{"classes/ProductClass.html":{},"coverage.html":{}}}],["src/products/interfaces/productclass.interface.ts:2",{"_index":375,"title":{},"body":{"classes/ProductClass.html":{}}}],["src/products/interfaces/productclass.interface.ts:3",{"_index":376,"title":{},"body":{"classes/ProductClass.html":{}}}],["src/products/interfaces/products.interface.ts",{"_index":468,"title":{},"body":{"classes/Products.html":{},"coverage.html":{}}}],["src/products/interfaces/products.interface.ts:10",{"_index":487,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:11",{"_index":492,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:12",{"_index":493,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:13",{"_index":486,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:14",{"_index":491,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:15",{"_index":481,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:16",{"_index":495,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:17",{"_index":488,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:18",{"_index":496,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:19",{"_index":484,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:20",{"_index":485,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:21",{"_index":490,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:22",{"_index":494,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:23",{"_index":482,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:24",{"_index":489,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:25",{"_index":483,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:9",{"_index":480,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/productsarray.interface.ts",{"_index":504,"title":{},"body":{"classes/ProductsArray.html":{},"coverage.html":{}}}],["src/products/interfaces/productsarray.interface.ts:5",{"_index":505,"title":{},"body":{"classes/ProductsArray.html":{}}}],["src/products/interfaces/thumbnail.interface.ts",{"_index":769,"title":{},"body":{"classes/Thumbnail.html":{},"coverage.html":{}}}],["src/products/interfaces/thumbnail.interface.ts:2",{"_index":770,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/products/interfaces/thumbnail.interface.ts:3",{"_index":771,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/products/products.controller.ts",{"_index":519,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:15",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:20",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:25",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:30",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:35",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:42",{"_index":532,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":592,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":609,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:12",{"_index":612,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:17",{"_index":615,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:25",{"_index":623,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:40",{"_index":616,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:51",{"_index":619,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:57",{"_index":618,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:61",{"_index":627,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:66",{"_index":614,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:73",{"_index":617,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/schemas/customattributes.schema.ts",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/foreignnames.schema.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/images.schema.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/logisticsdata.schema.ts",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/productclass.schema.ts",{"_index":808,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/products.schema.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/thumbnail.schema.ts",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/register/dto/register.interface.dto.ts",{"_index":700,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/register/dto/register.interface.dto.ts:2",{"_index":703,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:3",{"_index":704,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:4",{"_index":701,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:5",{"_index":706,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:6",{"_index":705,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:7",{"_index":702,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/update.password.interface.dto.ts",{"_index":777,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/register/dto/update.password.interface.dto.ts:2",{"_index":778,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["src/register/dto/update.username.interface.dto.ts",{"_index":779,"title":{},"body":{"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["src/register/interfaces/register.interface.ts",{"_index":654,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/register/interfaces/update.password.interface.ts",{"_index":775,"title":{},"body":{"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["src/register/register.controller.ts",{"_index":660,"title":{},"body":{"controllers/RegisterController.html":{},"coverage.html":{}}}],["src/register/register.controller.ts:14",{"_index":674,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:21",{"_index":671,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:26",{"_index":667,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:31",{"_index":679,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:40",{"_index":683,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.module",{"_index":329,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/register/register.module.ts",{"_index":710,"title":{},"body":{"modules/RegisterModule.html":{}}}],["src/register/register.service",{"_index":305,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/register/register.service.ts",{"_index":714,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/register/register.service.ts:15",{"_index":718,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:20",{"_index":724,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:38",{"_index":723,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:45",{"_index":721,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:58",{"_index":728,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:69",{"_index":720,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:73",{"_index":725,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:92",{"_index":726,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/schemas/register.schema.ts",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":864,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":867,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":869,"title":{},"body":{"index.html":{}}}],["started",{"_index":845,"title":{"index.html":{}},"body":{}}],["starter",{"_index":856,"title":{},"body":{"index.html":{}}}],["statements",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":891,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":882,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":902,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":731,"title":{},"body":{"injectables/RegisterService.html":{}}}],["table",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":477,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":871,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":874,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":873,"title":{},"body":{"index.html":{}}}],["tests",{"_index":870,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":880,"title":{},"body":{"index.html":{}}}],["this.addlogs(inputdata.id",{"_index":635,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.addlogs(newproduct.id",{"_index":466,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.addlogs(product.id",{"_index":648,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.adminmodel(visitordata",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.find",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findone",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findoneandremove",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findoneandupdate",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.addlogs(commentid",{"_index":108,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.addlogs(input.id",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.addlogs(visitordata.id",{"_index":94,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.aprovecomment(commentid",{"_index":111,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.commentexist(result",{"_index":101,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentbyid(id",{"_index":103,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentbynickname(inputnick.nickname",{"_index":100,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentsbydate(datecomment",{"_index":105,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.removecomment(input.id",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updatecomment(commentid",{"_index":107,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.visitorreview(visitordata",{"_index":93,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["this.isregistered(username",{"_index":750,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.loginmodel(logininfo",{"_index":351,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.find",{"_index":358,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.findbyid(id",{"_index":355,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.findone",{"_index":356,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginservice.findbyusername(username",{"_index":319,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.finduser(id",{"_index":316,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.listallusers",{"_index":320,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.login(logininfo",{"_index":311,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.userexist(username",{"_index":318,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.productexist(id",{"_index":649,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productexist(inputdata.id",{"_index":630,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productexist(product.id",{"_index":646,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel(current_product",{"_index":464,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel(product",{"_index":455,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find",{"_index":457,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findone",{"_index":458,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findoneandremove",{"_index":460,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findoneandupdate",{"_index":459,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.addlogs(id",{"_index":429,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addlogs(product.id",{"_index":421,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addproduct(product",{"_index":420,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addproductclasslist",{"_index":432,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.allproductclasses",{"_index":423,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductbyid(id",{"_index":425,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductbyname(product.title",{"_index":426,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.removeproduct(id",{"_index":431,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct(id",{"_index":428,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productsmodel(inputdata",{"_index":634,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel(product",{"_index":647,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.find",{"_index":650,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findone",{"_index":638,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findoneandremove({id",{"_index":652,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findoneandupdate({id",{"_index":651,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.addlogs(id",{"_index":559,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.createproduct(inputdata",{"_index":551,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.createproducts(inputdata",{"_index":553,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":561,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getallproducts",{"_index":556,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproduct(id",{"_index":555,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(id",{"_index":558,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.registermodel(userdata",{"_index":746,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findbyid(id)).toobject",{"_index":757,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findone",{"_index":743,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findoneandremove",{"_index":756,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findoneandupdate",{"_index":764,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registerservice.deleteuser(id",{"_index":697,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.isregistered(username",{"_index":695,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.registerlogs(result",{"_index":692,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.registeruser(userdata",{"_index":691,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.updatepassword(id",{"_index":698,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.updateusername(id",{"_index":699,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.validatelogin",{"_index":308,"title":{},"body":{"controllers/LoginController.html":{}}}],["throw",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["thumbnail",{"_index":478,"title":{"classes/Thumbnail.html":{}},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"classes/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["thumbnail.interface",{"_index":499,"title":{},"body":{"classes/Products.html":{}}}],["thumbnail.interface.dto",{"_index":585,"title":{},"body":{"classes/ProductsDto.html":{}}}],["thumbnaildto",{"_index":579,"title":{"classes/ThumbnailDto.html":{}},"body":{"classes/ProductsDto.html":{},"classes/ThumbnailDto.html":{},"coverage.html":{}}}],["thumbnailschema",{"_index":607,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timezone",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["title",{"_index":372,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"injectables/ProductService.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":892,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":513,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"dependencies.html":{}}}],["true",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{}}}],["true})@type(undefined",{"_index":511,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["twitter",{"_index":898,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcryptjs",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":855,"title":{},"body":{"index.html":{}}}],["unit",{"_index":479,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":50,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["updatecomment",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updatecomment(@param('id",{"_index":106,"title":{},"body":{"controllers/AdminController.html":{}}}],["updatecomment(commentid",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["updatecomment(id",{"_index":173,"title":{},"body":{"injectables/AdminService.html":{}}}],["updated",{"_index":109,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["updatedata",{"_index":626,"title":{},"body":{"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updatedata.newpassword",{"_index":759,"title":{},"body":{"injectables/RegisterService.html":{}}}],["updatedata.newusername",{"_index":766,"title":{},"body":{"injectables/RegisterService.html":{}}}],["updateorfind",{"_index":622,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatepassword",{"_index":664,"title":{"interfaces/UpdatePassword.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["updatepassword(id",{"_index":676,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updatepassworddto",{"_index":677,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["updateproduct",{"_index":395,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(@param('id",{"_index":557,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproduct(id",{"_index":411,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateusername",{"_index":665,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updateusername(id",{"_index":680,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updateusernamedto",{"_index":681,"title":{"interfaces/UpdateUsernameDto.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["usecreateindex",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":313,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["user).username",{"_index":754,"title":{},"body":{"injectables/RegisterService.html":{}}}],["user.password",{"_index":753,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userbyusername",{"_index":357,"title":{},"body":{"injectables/LoginService.html":{}}}],["userdata",{"_index":675,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["userdata._id",{"_index":748,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userdata.password",{"_index":760,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userdata.username",{"_index":744,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userexist",{"_index":335,"title":{},"body":{"injectables/LoginService.html":{}}}],["userexist(username",{"_index":344,"title":{},"body":{"injectables/LoginService.html":{}}}],["username",{"_index":285,"title":{},"body":{"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["useunifiedtopology",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":755,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatelogin",{"_index":716,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatelogin(username",{"_index":727,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatenested",{"_index":514,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["validatenested()@type(undefined",{"_index":580,"title":{},"body":{"classes/ProductsDto.html":{}}}],["validatenested({each",{"_index":510,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["validator",{"_index":515,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"dependencies.html":{}}}],["value",{"_index":255,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["variable",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":907,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visitordata",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["visitornick",{"_index":16,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["visitorreview",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["visitorreview(@body",{"_index":90,"title":{},"body":{"controllers/AdminController.html":{}}}],["visitorreview(visitordata",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["void",{"_index":668,"title":{},"body":{"controllers/RegisterController.html":{}}}],["want",{"_index":639,"title":{},"body":{"injectables/ProductsService.html":{}}}],["watch",{"_index":865,"title":{},"body":{"index.html":{}}}],["website",{"_index":896,"title":{},"body":{"index.html":{}}}],["world",{"_index":248,"title":{},"body":{"injectables/AppService.html":{}}}],["yargs",{"_index":734,"title":{},"body":{"injectables/RegisterService.html":{}}}],["you'd",{"_index":885,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Admin.html":{"url":"interfaces/Admin.html","title":"interface - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/interfaces/admin.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anyContactData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            aproved\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateAdded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            productCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorNick\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anyContactData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anyContactData:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aproved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aproved:         Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateAdded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateAdded:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productCode:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorNick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorNick:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Admin {\n    id?: String;\n    productCode?: String;\n    dateAdded?: String;\n    comment?: String;\n    visitorNick?: String;\n    anyContactData?: String;\n    aproved?: Boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                aproveComment\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                findCommentById\n                            \n                            \n                                    Async\n                                findCommentByNickname\n                            \n                            \n                                    Async\n                                findCommentsByDate\n                            \n                            \n                                    Async\n                                updateComment\n                            \n                            \n                                    Async\n                                visitorReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        aproveComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    aproveComment(commentId: string, input: AproveDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('aprove/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                AproveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(input)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterById/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentByNickname\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentByNickname(inputNick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterByNickname')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputNick\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentsByDate(dateComment: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterByDate/:dateComment')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateComment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComment(commentId: string, input: AdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        visitorReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    visitorReview(visitorData: AdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addComment')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visitorData\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { AdminDto } from './dto/admin.interface.dto';\nimport { Admin } from './interfaces/admin.interface';\nimport { AproveDto } from './dto/aprove.interface.dto';\n\n@Controller('admin')\nexport class AdminController {\n    constructor(private readonly adminService: AdminService) {}\n\n    @Post('addComment')\n    async visitorReview(@Body() visitorData: AdminDto): Promise {\n        const result = await this.adminService.visitorReview(visitorData);\n        await this.adminService.addLogs(visitorData.id, 'added');\n        return await result;\n    }\n\n    @Get('filterByNickname')\n    async findCommentByNickname(@Query() inputNick): Promise {\n        // should be called like this: http://localhost:3000/admin/filterByNickName?nickname=visitorNick\n        const result = await this.adminService.findCommentByNickname(inputNick.nickname);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Get('filterById/:id')\n    async findCommentById(@Param('id') id: string): Promise {\n        const result = await this.adminService.findCommentById(id);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Get('filterByDate/:dateComment')\n    async findCommentsByDate(@Param('dateComment') dateComment: string): Promise {\n        const result = await this.adminService.findCommentsByDate(dateComment);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Patch('update/:id')\n    async updateComment(@Param('id') commentId: string, @Body() input: AdminDto): Promise {\n        const result = await this.adminService.updateComment(commentId, input);\n        await this.adminService.addLogs(commentId, 'updated');\n        return await result;\n        \n    }\n    @Patch('aprove/:id')\n    async aproveComment(@Param('id') commentId: string, @Body() input: AproveDto) {\n        const result = await this.adminService.aproveComment(commentId, input.aprove);\n        await this.adminService.addLogs(commentId, 'aproved');\n        return await result;\n    }\n\n    @Delete()\n    async deleteComment(@Query() input) {\n        // http://localhost:3000/admin?id=ID\n        await this.adminService.removeComment(input.id);\n        await this.adminService.addLogs(input.id, 'removed');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminDto.html":{"url":"classes/AdminDto.html","title":"class - AdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/admin.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                anyContactData\n                            \n                            \n                                    Readonly\n                                    Optional\n                                aproved\n                            \n                            \n                                    Readonly\n                                    Optional\n                                comment\n                            \n                            \n                                    Readonly\n                                    Optional\n                                dateAdded\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                productCode\n                            \n                            \n                                    Readonly\n                                    Optional\n                                visitorNick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        anyContactData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        aproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        dateAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        visitorNick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AdminDto {\n    readonly id?: string;\n    readonly productCode?: string;\n    readonly dateAdded?: string;\n    readonly comment?: string;\n    readonly visitorNick?: string;\n    readonly anyContactData?: string;\n    readonly aproved?: Boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\nimport { AdminSchema } from \"./schemas/admin.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Admin', schema: AdminSchema}])],\n    controllers: [AdminController],\n    providers: [AdminService],\n    exports: [AdminService]\n})\nexport class AdminModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                aproveComment\n                            \n                            \n                                    Async\n                                commentExist\n                            \n                            \n                                    Async\n                                findCommentById\n                            \n                            \n                                    Async\n                                findCommentByNickname\n                            \n                            \n                                    Async\n                                findCommentsByDate\n                            \n                            \n                                    Async\n                                removeComment\n                            \n                            \n                                    Async\n                                updateComment\n                            \n                            \n                                    Async\n                                visitorReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        aproveComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    aproveComment(commentId: string, aprove: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aprove\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        commentExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentExist(result)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentByNickname\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentByNickname(nickaname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nickaname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentsByDate(dateComment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateComment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeComment(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComment(id: string, comment: AdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    comment\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        visitorReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    visitorReview(visitorData: AdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visitorData\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AdminDto } from './dto/admin.interface.dto';\nimport { Model } from 'mongoose';\nimport { Admin } from './interfaces/admin.interface';\nimport { InjectModel } from '@nestjs/mongoose';\n\n\n@Injectable()\nexport class AdminService {\n    constructor(\n        @InjectModel('Admin') private readonly adminModel: Model \n    ) {}\n\n    async visitorReview(visitorData: AdminDto): Promise {\n        const newVisitor = new this.adminModel(visitorData);\n        return await newVisitor.save();\n    }\n\n    async findCommentById(id: string) {\n        return await this.adminModel.findOne( {id: id});\n    }\n\n    async findCommentByNickname(nickaname: string): Promise {\n        return await this.adminModel.findOne( { visitorNick: nickaname } );\n    }\n\n    async aproveComment(commentId: string, aprove: boolean) {\n        return await this.adminModel.findOneAndUpdate(\n            {id: commentId},\n            {$set: { aproved: aprove }}\n        );\n    }\n\n    async findCommentsByDate(dateComment: string): Promise {\n        const promises = await this.adminModel.find({ dateAdded: dateComment });\n        return await Promise.all(promises);     // array of Promise objects\n    }\n\n    async updateComment(id: string, comment: AdminDto): Promise {\n        return await this.adminModel.findOneAndUpdate({ id: id }, comment);\n    }\n\n    async removeComment(id: string) {\n        await this.adminModel.findOneAndRemove({ id: id });\n    }\n\n    async commentExist(result) {\n        if (!result) {\n           throw new NotFoundException('Comment not found.');\n        }\n   }\n\n    async addLogs(id: string, action: string) {\n        var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n        await console.log('Comment ' + action + ': ' + date + ' --- id: ' + id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            RegisterModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LoginController } from './login/login.controller';\nimport { LoginService } from './login/login.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LoginModule } from './login/login.module';\nimport config from './config/address';\nimport { AdminModule } from './admin/admin.module';\nimport { ProductModule } from './product/product.module';\nimport { ProductsModule } from './products/products.module';\nimport { RegisterModule } from './register/register.module';\n\n@Module({\n    imports: [\n      LoginModule,\n      AdminModule,\n      ProductModule,\n      ProductsModule,\n      RegisterModule,\n      MongooseModule.forRoot(config.mongodbURI,     // note: using docker ip address: 172.17.0.1\n      { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true }),\n    ],\n  controllers: [AppController], \n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AproveDto.html":{"url":"classes/AproveDto.html","title":"class - AproveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AproveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/aprove.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aprove\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aprove\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/aprove.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AproveDto {\n    aprove: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomAttributes.html":{"url":"classes/CustomAttributes.html","title":"class - CustomAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/customAttributes.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                prompt\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomAttributes {\n    key?: String;\n    prompt?: String;\n    value?: Boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomAttributesDto.html":{"url":"classes/CustomAttributesDto.html","title":"class - CustomAttributesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomAttributesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/customAttributes.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                prompt\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomAttributesDto {\n    key: string;\n    prompt: string;\n    value: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignNames.html":{"url":"classes/ForeignNames.html","title":"class - ForeignNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/foreignNames.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                countryCode\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/foreignNames.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/foreignNames.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForeignNames {\n    countryCode?: String;\n    name?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignNamesDto.html":{"url":"classes/ForeignNamesDto.html","title":"class - ForeignNamesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignNamesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/foreignNames.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/foreignNames.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/foreignNames.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForeignNamesDto {\n    countryCode: string;\n    name: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Images.html":{"url":"classes/Images.html","title":"class - Images","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Images\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/images.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/images.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/images.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Images {\n    id?: String;\n    imageName?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagesDto.html":{"url":"classes/ImagesDto.html","title":"class - ImagesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/images.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/images.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/images.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImagesDto {\n    id: string;\n    imageName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/interfaces/login.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username?: String;\n    password?: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUser\n                            \n                            \n                                    Async\n                                findUserByUsername\n                            \n                            \n                                    Async\n                                listAllUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByUsername(username)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findByUsername/:username')\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginInfo: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { LoginDto } from './dto/login.interface.dto';\nimport { LoginService } from './login.service';\nimport { Login } from './interfaces/login.interface';\nimport { RegisterService } from 'src/register/register.service';\n\n@Controller('login')\nexport class LoginController {\n\tconstructor(private readonly loginService: LoginService,\n\t\t\tprivate readonly registerService: RegisterService) {}\n\n\t@Post()\n\tasync login(@Body() loginInfo: LoginDto): Promise {\n\t\tawait this.registerService.validateLogin(\n\t\t\tloginInfo.username, loginInfo.password\n\t\t)\n\t\tconst result = this.loginService.login(loginInfo);\n\t\tvar date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n\t\tconsole.log(\n\t\t\t`User: ${loginInfo.username} logged in at: ${date}`\n\t\t)\n\t\treturn await result;\n\t}\n\n\t@Get(':id')\n\tfindUser(@Param('id') id): Promise {\n\t\t\treturn this.loginService.findUser(id);\n\t}\n\n\t@Get('findByUsername/:username')\n\tasync findUserByUsername(@Param('username') username): Promise {\n\t\t\tawait this.loginService.userExist(username);\n\t\t\treturn await this.loginService.findByUsername(username);\n\t}\n\n\t@Get()\n\tasync listAllUsers() {\n\t\t\treturn await this.loginService.listAllUsers();\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/dto/login.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/dto/login.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/dto/login.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n    readonly username?: string;\n    readonly password?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nRegisterModule\n\nRegisterModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nRegisterModule->LoginModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { RegisterModule } from \"src/register/register.module\";\nimport { LoginController } from \"./login.controller\";\nimport { LoginService } from \"./login.service\";\nimport { LoginSchema } from \"./schemas/login.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Login', schema: LoginSchema}]), RegisterModule],\n    controllers: [LoginController],\n    providers: [LoginService],\n    exports: [LoginService]\n})\nexport class LoginModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                listAllUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                userExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginInfo: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    userExist(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCode, HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { LoginDto } from './dto/login.interface.dto';\nimport { Model } from 'mongoose';\nimport { Login } from './interfaces/login.interface';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    @InjectModel('Login') private readonly loginModel: Model\n  ) { }\n\n  async login(loginInfo: LoginDto): Promise {\n    const newLoginUser = new this.loginModel(loginInfo);\n    return await newLoginUser.save();\n  }\n\n  async findUser(id: string): Promise {\n    // find one user by id\n    return await this.loginModel.findById(id);\n  }\n\n  async findByUsername(username: string): Promise {\n    return await this.loginModel.findOne({ username: username });\n  }\n\n  async userExist(username: string) {\n    const userByUsername = await this.loginModel.findOne({\n      username: username\n    });\n\n    if (!userByUsername) {\n      throw new NotFoundException(\n        `User with username: ${username} cannot be found.`\n      );\n    }\n  }\n\n  async listAllUsers() {\n    return await this.loginModel.find();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogisticsData.html":{"url":"classes/LogisticsData.html","title":"class - LogisticsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogisticsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/logisticsData.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                prompt\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LogisticsData {\n    key?: String;\n    prompt?: String;\n    value?: Number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogisticsDataDto.html":{"url":"classes/LogisticsDataDto.html","title":"class - LogisticsDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogisticsDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/logisticsData.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                prompt\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LogisticsDataDto {\n    key: string;\n    prompt: string;\n    value: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interfaces/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n    id: String;\n    title: String\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClass.html":{"url":"classes/ProductClass.html","title":"class - ProductClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/productClass.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productClass.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productClass.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClass {\n    id?: String;\n    title?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClassDto.html":{"url":"classes/ProductClassDto.html","title":"class - ProductClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/product.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClassDto {\n    readonly id?: string;\n    readonly title?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClassDto-1.html":{"url":"classes/ProductClassDto-1.html","title":"class - ProductClassDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/productClass.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                productGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/productClass.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productGroupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/productClass.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClassDto {\n    id: string;\n    productGroupName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                productClasses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                    Async\n                                addProductClassList\n                            \n                            \n                                    Async\n                                allProductClasses\n                            \n                            \n                                findProductById\n                            \n                            \n                                findProductByName\n                            \n                            \n                                    Async\n                                removeProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductClassList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductClassList(productClassList: ProductClassDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addProductClassList')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productClassList\n                                    \n                                                ProductClassDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProductClasses\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProductClasses()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductById\n                        \n                    \n                \n            \n            \n                \nfindProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductByName\n                        \n                    \n                \n            \n            \n                \nfindProductByName(product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('findByName')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductClassDto } from './dto/product.interface.dto';\nimport { Product } from './interfaces/product.interface';\nimport { Model } from 'mongoose';\n\n@Controller('productClasses')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  addProduct(@Body() product: ProductClassDto): Promise {\n    const result = this.productService.addProduct(product);\n    this.productService.addLogs(product.id, 'added');\n    return result;\n  }\n\n  @Get()\n  async allProductClasses() {\n    // localhost:3000/productClasses\n    return await this.productService.allProductClasses();\n  }\n\n  @Get(':id')\n  findProductById(@Param('id') id: string): Promise {\n    return this.productService.findProductById(id);\n  }\n\n  @Post('findByName')\n  findProductByName(\n    @Body() product: ProductClassDto\n  ): Promise {\n    return this.productService.findProductByName(product.title);\n  }\n\n  @Patch(':id')\n  async updateProduct(\n    @Param('id') id: string, @Body() product: ProductClassDto\n  ): Promise {\n    const result = await this.productService.updateProduct(id, product);\n    await this.productService.addLogs(id, 'updated');\n    return await result;\n  }\n\n  @Delete(':id')\n  async removeProduct(@Param('id') id: string) {\n    await this.productService.removeProduct(id);\n    await this.productService.addLogs(id, 'removed');\n  }\n\n  @Post('addProductClassList')\n  async addProductClassList (\n    @Body() productClassList: ProductClassDto[]\n  ) {\n    return await this.productService.addProductClassList(\n      productClassList\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_exports\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ProductController } from \"./product.controller\";\nimport { ProductService } from \"./product.service\";\nimport { ProductSchema } from \"./schemas/product.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Product', schema: ProductSchema}])],\n    controllers: [ProductController],\n    providers: [ProductService],\n    exports: [ProductService]\n})\nexport class ProductModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                addProductClassList\n                            \n                            \n                                    Async\n                                allProductClasses\n                            \n                            \n                                    Async\n                                findProductById\n                            \n                            \n                                    Async\n                                findProductByName\n                            \n                            \n                                    Async\n                                removeProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(product: ProductClassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductClassList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductClassList(productClassList: ProductClassDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productClassList\n                                    \n                                                ProductClassDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProductClasses\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProductClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, product: ProductClassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProductClassDto } from './dto/product.interface.dto'\nimport { Product } from './interfaces/product.interface';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel('Product') private readonly productModel: Model) \n  {}\n\n  async addProduct(\n    product: ProductClassDto\n  ): Promise {\n    const newProduct = new this.productModel(product);\n    return await newProduct.save();\n  }\n\n  async allProductClasses() {\n    return await this.productModel.find({});\n  }\n\n  async findProductById(id: string): Promise {\n    return await this.productModel.findOne( {id: id} );\n  }\n\n  async findProductByName(name: string): Promise {\n    return await this.productModel.findOne( {title: name} );\n  }\n\n  async updateProduct(\n    id: string, product: ProductClassDto\n  ): Promise {\n    return await this.productModel.findOneAndUpdate(\n      { id: id }, product\n    );\n  }\n\n  async removeProduct(id: string) {\n    return await this.productModel.findOneAndRemove(\n      { id: id }\n    );\n  }\n\n  async addLogs(id: string, action: string) {\n    var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n    console.log(`Product class with id ${id} ${action} at: ${date}`);\n  }\n\n  async addProductClassList(productClassList: ProductClassDto[]) {\n    const products = [];\n    for (let current_product of productClassList) {\n      const newProduct = new this.productModel(current_product);\n      products.push(newProduct.save());\n      this.addLogs(newProduct.id, 'added');\n    }\n    return await Promise.all(products);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Products.html":{"url":"classes/Products.html","title":"class - Products","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Products\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/products.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                active\n                            \n                            \n                                    Optional\n                                customAttributes\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                eANCode\n                            \n                            \n                                    Optional\n                                eANPackageCode\n                            \n                            \n                                    Optional\n                                foreignNames\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                likes\n                            \n                            \n                                    Optional\n                                logisticData\n                            \n                            \n                                    Optional\n                                productClass\n                            \n                            \n                                    Optional\n                                productCode\n                            \n                            \n                                    Optional\n                                productNane\n                            \n                            \n                                    Optional\n                                tags\n                            \n                            \n                                    Optional\n                                thumbnail\n                            \n                            \n                                    Optional\n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomAttributes[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        eANCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        eANPackageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        foreignNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForeignNames[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Images[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        logisticData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogisticsData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductClass\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productNane\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thumbnail\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForeignNames } from \"./foreignNames.interface\";\nimport { ProductClass } from \"./productClass.interface\";\nimport { Thumbnail } from \"./thumbnail.interface\";\nimport { Images } from \"./images.interface\";\nimport { LogisticsData } from \"./logisticsData.interface\";\nimport { CustomAttributes } from \"./customAttributes.interface\";\n\nexport class Products {\n    _id?: String;\n    id?: String;\n    productCode?: String;\n    productNane?: String;\n    foreignNames?: ForeignNames[];\n    productClass?: ProductClass;\n    active?: Boolean;\n    thumbnail?: Thumbnail;\n    images?: Images[];\n    unit?: String;\n    eANCode?: String;\n    eANPackageCode?: String;\n    logisticData?: LogisticsData[];\n    tags?: String[];\n    customAttributes?: CustomAttributes[];\n    likes?: Number;\n    description?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsArray.html":{"url":"classes/ProductsArray.html","title":"class - ProductsArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsArray\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/productsArray.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productsArray.interface.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Products } from \"./products.interface\";\n\n\nexport class ProductsArray {\n    products?: Products[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsArrayDto.html":{"url":"classes/ProductsArrayDto.html","title":"class - ProductsArrayDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsArrayDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.array.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.array.interface.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { ValidateNested } from \"class-validator\";\nimport { ProductsDto } from \"./products.interface.dto\";\n\n\nexport class ProductsArrayDto {\n    @ValidateNested({ each: true })\n    @Type(() => ProductsDto)\n    products: ProductsDto[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(inputData: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(inputData: ProductsArrayDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createProducts')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsArrayDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, inputData: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Put } from '@nestjs/common';\nimport { ProductsDto } from './dto/products.interface.dto';\nimport { ProductsService } from './products.service';\nimport { Products } from './interfaces/products.interface';\nimport { ProductsArrayDto } from './dto/products.array.interface.dto';\nimport { ProductsArray } from './interfaces/productsArray.interface';\nimport { ProductsWithProductClassDto } from './dto/products.with.product.class.interface.dto';\nimport { ProductsWithClasses } from './interfaces/products.with.classes.interface';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  async createProduct(@Body() inputData: ProductsDto): Promise {\n    return await this.productsService.createProduct(inputData)\n  }\n\n  @Post('createProducts')\n  async createProducts(@Body() inputData: ProductsArrayDto): Promise {\n    return await this.productsService.createProducts(inputData);\n  }\n\n  @Get(':id')\n  async getProduct(@Param('id') id: string): Promise {\n    return await this.productsService.getProduct(id);\n  }\n\n  @Get()\n  async getAllProducts() {\n    return await this.productsService.getAllProducts();\n  }\n\n  @Put(':id')\n  async updateProduct(@Param('id') id: string, @Body() inputData: ProductsDto): Promise {\n    const result = await this.productsService.updateProduct(id, inputData);\n    this.productsService.addLogs(id, 'updated');\n    return result;\n  }\n\n  @Delete(':id')\n  async deleteProduct(@Param('id') id: string) {\n    await this.productsService.deleteProduct(id);\n    this.productsService.addLogs(id, 'deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsDto.html":{"url":"classes/ProductsDto.html","title":"class - ProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                customAttributes\n                            \n                            \n                                description\n                            \n                            \n                                eANCode\n                            \n                            \n                                eANPackageCode\n                            \n                            \n                                foreignNames\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                likes\n                            \n                            \n                                logisticData\n                            \n                            \n                                productClass\n                            \n                            \n                                productCode\n                            \n                            \n                                productName\n                            \n                            \n                                tags\n                            \n                            \n                                thumbnail\n                            \n                            \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CustomAttributesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eANCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eANPackageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foreignNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ForeignNamesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ImagesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logisticData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LogisticsDataDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductClassDto\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThumbnailDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidateNested } from \"class-validator\";\nimport { Type } from 'class-transformer';\nimport { ForeignNamesDto } from \"./foreignNames.interface.dto\";\nimport { ProductClassDto } from \"src/product/dto/product.interface.dto\";\nimport { ThumbnailDto } from \"./thumbnail.interface.dto\";\nimport { ImagesDto } from \"./images.interface.dto\";\nimport { LogisticsDataDto } from \"./logisticsData.interface.dto\";\nimport { CustomAttributesDto } from \"./customAttributes.interface.dto\";\n\n\nexport class ProductsDto {\n  id: string;\n  productCode: string;\n  productName: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => ForeignNamesDto)\n  foreignNames: ForeignNamesDto[];\n\n  productClass: ProductClassDto;\n  active: boolean;\n\n  @ValidateNested()\n  @Type(() => ThumbnailDto)\n  thumbnail: ThumbnailDto;\n\n  @ValidateNested({ each: true })\n  @Type(() => ImagesDto)\n  images: ImagesDto[];\n\n  unit: string;\n  eANCode: string;\n  eANPackageCode: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => LogisticsDataDto)\n  logisticData: LogisticsDataDto[];\n\n  tags: string[];\n\n  @ValidateNested({ each: true })\n  @Type(() => CustomAttributesDto)\n  customAttributes: CustomAttributesDto[];\n\n  likes: number;\n  description: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ProductModule } from \"src/product/product.module\";\nimport { ProductsController } from \"./products.controller\";\nimport { ProductsService } from \"./products.service\";\nimport { CustomAttributesSchema } from \"./schemas/customAttributes.schema\";\nimport { ForeignNamesSchema } from \"./schemas/foreignNames.schema\";\nimport { ImagesSchema } from \"./schemas/images.schema\";\nimport { LogisticsDataSchema } from \"./schemas/logisticsData.schema\";\nimport { ProductClassSchema } from \"./schemas/productClass.schema\";\nimport { ProductsSchema } from \"./schemas/products.schema\";\nimport { ThumbnailSchema } from \"./schemas/thumbnail.schema\";\n\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([{name: 'Products', schema: ProductsSchema}]),\n        MongooseModule.forFeature([{name: 'CustomAttributes', schema: CustomAttributesSchema}]),\n        MongooseModule.forFeature([{name: 'ForeignNames', schema: ForeignNamesSchema}]),\n        MongooseModule.forFeature([{name: 'Images', schema: ImagesSchema}]),\n        MongooseModule.forFeature([{name: 'LogisticsData', schema: LogisticsDataSchema}]),\n        MongooseModule.forFeature([{name: 'ProductClassSchema', schema: ProductClassSchema}]),\n        MongooseModule.forFeature([{name: 'Thumbnail', schema: ThumbnailSchema}]),\n        ProductModule\n    ],\n    controllers: [ProductsController],\n    providers: [ProductsService]\n})\nexport class ProductsModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                productExist\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsModel: Model, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(inputData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(inputData: ProductsArrayDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsArrayDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    productExist(id: string, create: Boolean, updateOrFind: Boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    create\n                                    \n                                                Boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    updateOrFind\n                                    \n                                                Boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, updateData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ProductsDto } from './dto/products.interface.dto';\nimport { Products } from './interfaces/products.interface';\nimport { ProductsArrayDto } from './dto/products.array.interface.dto';\nimport { ProductsWithProductClassDto } from './dto/products.with.product.class.interface.dto';\nimport { ProductService } from 'src/product/product.service';\n\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel('Products') private readonly productsModel: Model,\n    private readonly productService: ProductService) {}\n\n  async createProduct(inputData: ProductsDto): Promise {\n    await this.productExist(inputData.id, true);    // check if product already exists\n    const newProduct = new this.productsModel(inputData);\n    const result = await newProduct.save();\n    this.addLogs(inputData.id, 'created');\n    return await result;\n  }\n\n  async productExist(id: string, create: Boolean=false, updateOrFind: Boolean=false) {\n    const productExist = await this.productsModel.findOne({ id: id });\n    if (create && productExist) {\n      // if we want to create product, it should not be in database\n      throw new HttpException(\n        `Product with id: ${id} already exist.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    if (updateOrFind && !productExist) {\n      // if we want to find/update product, it should be in database\n      throw new NotFoundException(`Product with id: ${id} does not exist.`)\n    }\n  }\n\n  async createProducts(inputData: ProductsArrayDto): Promise {\n    const products = [];\n    for (let product of inputData.products) {\n      await this.productExist(product.id, true);      // check if product already exists\n      const newProduct = new this.productsModel(product);\n      products.push(newProduct.save());\n      this.addLogs(product.id, 'created');\n    }\n    return await Promise.all(products);     // array of Promise objects\n  }\n\n  async getProduct(id: string): Promise {\n    await this.productExist(id, false, true);\n    const result = await this.productsModel.findOne({ id: id });\n    return await result;\n  }\n\n  async getAllProducts() {\n    return await this.productsModel.find({});\n  }\n\n  async updateProduct(id: string, updateData: ProductsDto): Promise {\n    await this.productExist(id, false, true);\n    return await this.productsModel.findOneAndUpdate({id: id}, updateData);\n  }\n\n  async addLogs(id: string, action: string) {\n    var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n    await console.log(\n      `Product with id: ${id} ${action} --- ${date}`\n    );\n  }\n\n  async deleteProduct(id: string) {\n    await this.productExist(id, false, true);\n    await this.productsModel.findOneAndRemove({id: id});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/interfaces/register.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n    _id?: String;\n    firstName?: String;\n    lastName?: String;\n    dateOfBirth?: String;\n    username?: String;\n    password?: String;\n    email?: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RegisterController.html":{"url":"controllers/RegisterController.html","title":"controller - RegisterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RegisterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/register.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                register\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                isRegistered\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRegistered\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRegistered(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('isRegistered/:username')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userData: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, updateData: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('updatePassword/:id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsername(id: string, updateData: UpdateUsernameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('updateUsername/:id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateUsernameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { RegisterDto } from './dto/register.interface.dto';\nimport { UpdatePasswordDto } from './dto/update.password.interface.dto';\nimport { UpdateUsernameDto } from './dto/update.username.interface.dto';\nimport { Register } from './interfaces/register.interface';\nimport { RegisterService } from './register.service';\n\n@Controller('register')\nexport class RegisterController {\n  constructor(private readonly registerService: RegisterService) { }\n\n  @Post()\n  async registerUser(@Body() userData: RegisterDto): Promise {\n    const result = await this.registerService.registerUser(userData);\n    this.registerService.registerLogs(result, 'registered');\n    return await result;\n  }\n\n  @Get('isRegistered/:username')\n  async isRegistered(@Param('username') username: string): Promise {\n    return await this.registerService.isRegistered(username);\n  }\n\n  @Delete(':id')\n  deleteUser(@Param('id') id) {\n    this.registerService.deleteUser(id);\n  }\n\n  @Patch('updatePassword/:id')\n  async updatePassword(\n    @Param('id') id: string, @Body() updateData: UpdatePasswordDto\n  ): Promise {\n    const result = await this.registerService.updatePassword(id, updateData);\n    this.registerService.registerLogs(result, 'password updated');\n    return await result;\n  }\n\n  @Patch('updateUsername/:id')\n  async updateUsername(\n    @Param('id') id: string, @Body() updateData: UpdateUsernameDto\n  ): Promise {\n    const result = await this.registerService.updateUsername(id, updateData);\n    this.registerService.registerLogs(result, 'username updated');\n    return await result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/register.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterDto {\n    firstName?: string;\n    lastName?: string;\n    dateOfBirth?: string;\n    username?: string;\n    password?: string;\n    email?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterModule.html":{"url":"modules/RegisterModule.html","title":"module - RegisterModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_providers\n\n\n\ncluster_RegisterModule_exports\n\n\n\n\nRegisterService \n\nRegisterService \n\n\n\nRegisterModule\n\nRegisterModule\n\nRegisterService  -->\n\nRegisterModule->RegisterService \n\n\n\n\n\nRegisterService\n\nRegisterService\n\nRegisterModule -->\n\nRegisterService->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RegisterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RegisterController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegisterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { RegisterController } from \"./register.controller\";\nimport { RegisterService } from \"./register.service\";\nimport { RegisterSchema } from \"./schemas/register.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Register', schema: RegisterSchema}])],\n    controllers: [RegisterController],\n    providers: [RegisterService],\n    exports: [RegisterService]\n})\nexport class RegisterModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/register.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                isRegistered\n                            \n                            \n                                    Async\n                                registerLogs\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUsername\n                            \n                            \n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registerModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/register/register.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        registerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRegistered\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRegistered(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerLogs(userData: Register, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                Register\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userData: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, updateData: UpdatePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsername(id: string, updateData: UpdateUsernameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateUsernameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCode, HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, ObjectId } from 'mongoose';\nimport { Register } from './interfaces/register.interface';\nimport { RegisterDto } from './dto/register.interface.dto';\nimport { Observable, from, of, switchMap, lastValueFrom } from 'rxjs';\nimport { boolean } from 'yargs';\nimport { UpdatePasswordDto } from './dto/update.password.interface.dto';\nimport { UpdateUsernameDto } from './dto/update.username.interface.dto';\n\nconst bcrypt = require('bcrypt');\nconst saltRounds = 12;\n\n@Injectable()\nexport class RegisterService {\n  constructor(\n    @InjectModel('Register') private readonly registerModel: Model\n  ) { }\n\n  async registerUser(userData: RegisterDto): Promise {\n    const passHashed = await bcrypt.hash(userData.password, saltRounds);\n    // put hashed password in userData\n    const user = await this.registerModel.findOne({ username: userData.username });\n    if (user) {\n      throw new HttpException(\n        `User with username: ${userData.username} already exists.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    userData = {\n      ...userData,\n      password: passHashed\n    };\n    const newUser = new this.registerModel(userData);\n    return await newUser.save();\n  }\n\n  async registerLogs(userData: Register, action: string) {\n    var date = new Date().toLocaleString('hu-HU', { timeZone: 'CET' });\n    console.log(\n      `User with id: ${userData._id} --- ${action} at: ${date}`\n    );\n  }\n\n  async isRegistered(username: string) {\n    var user = await this.registerModel.findOne({\n      username: username\n    });\n    if (!user) {\n      throw new HttpException(\n        `User: ${username} is not registered`,\n        HttpStatus.NOT_FOUND\n      );\n    }\n    return await user;\n  }\n\n  async validateLogin(username: string, password: string) {\n    var user = await this.isRegistered(username);\n    var passwordsEqual = await bcrypt.compare(password, user.password);\n    if (!passwordsEqual) {\n      throw new HttpException(\n        `Password for ${(await user).username} is not valid.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n  }\n\n  async deleteUser(id: string) {\n    await this.registerModel.findOneAndRemove({ _id: id });\n  }\n\n  async updatePassword(id: string, updateData: UpdatePasswordDto): Promise {\n    const userData = (await this.registerModel.findById(id)).toObject();\n    const passwordsEqual = await bcrypt.compare(\n      updateData.newPassword, userData.password\n    );\n    if (passwordsEqual) {\n      throw new HttpException('Old password cannot be new password', HttpStatus.BAD_REQUEST);\n    }\n    else {\n      const newPassHashed = await bcrypt.hash(\n        updateData.newPassword, saltRounds\n      );\n      return await this.registerModel.findOneAndUpdate(\n        { username: userData.username },\n        { $set: { password: newPassHashed } }\n      );\n    }\n  }\n\n  async updateUsername(id: string, updateData: UpdateUsernameDto): Promise {\n    const userData = (await this.registerModel.findById(id)).toObject();\n    const passwordsEqual = bcrypt.compare(updateData.password, userData.password)\n    if (!passwordsEqual) {\n      throw new HttpException(\n        `Password for user: ${userData.username} is not valid.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    if (userData.username == updateData.newUsername) {\n      throw new HttpException('Please enter new username', HttpStatus.BAD_REQUEST);\n    }\n    return await this.registerModel.findOneAndUpdate(\n      { username: userData.username },\n      { $set: { username: updateData.newUsername } }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thumbnail.html":{"url":"classes/Thumbnail.html","title":"class - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/thumbnail.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/thumbnail.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/thumbnail.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Thumbnail {\n    id?: String;\n    imageName?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThumbnailDto.html":{"url":"classes/ThumbnailDto.html","title":"class - ThumbnailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThumbnailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/thumbnail.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/thumbnail.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/thumbnail.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ThumbnailDto {\n    id: string;\n    imageName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePassword.html":{"url":"interfaces/UpdatePassword.html","title":"interface - UpdatePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdatePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/interfaces/update.password.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdatePassword{\n    newPassword: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/update.password.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/update.password.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdatePasswordDto {\n    newPassword: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUsernameDto.html":{"url":"interfaces/UpdateUsernameDto.html","title":"interface - UpdateUsernameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUsernameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/update.username.interface.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newUsername\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newUsername:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUsernameDto {\n    newUsername: String;\n    password: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/admin/dto/admin.interface.dto.ts\n            \n            class\n            AdminDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/dto/aprove.interface.dto.ts\n            \n            class\n            AproveDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/admin/interfaces/admin.interface.ts\n            \n            interface\n            Admin\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/schemas/admin.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login/dto/login.interface.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/interfaces/login.interface.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/login/schemas/login.schema.ts\n            \n            variable\n            LoginSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/product.interface.dto.ts\n            \n            class\n            ProductClassDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/product/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/customAttributes.interface.dto.ts\n            \n            class\n            CustomAttributesDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dto/foreignNames.interface.dto.ts\n            \n            class\n            ForeignNamesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/images.interface.dto.ts\n            \n            class\n            ImagesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/logisticsData.interface.dto.ts\n            \n            class\n            LogisticsDataDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dto/productClass.interface.dto.ts\n            \n            class\n            ProductClassDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/products.array.interface.dto.ts\n            \n            class\n            ProductsArrayDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/dto/products.interface.dto.ts\n            \n            class\n            ProductsDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/products/dto/thumbnail.interface.dto.ts\n            \n            class\n            ThumbnailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/customAttributes.interface.ts\n            \n            class\n            CustomAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/interfaces/foreignNames.interface.ts\n            \n            class\n            ForeignNames\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/images.interface.ts\n            \n            class\n            Images\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/logisticsData.interface.ts\n            \n            class\n            LogisticsData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/interfaces/productClass.interface.ts\n            \n            class\n            ProductClass\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/products.interface.ts\n            \n            class\n            Products\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/products/interfaces/productsArray.interface.ts\n            \n            class\n            ProductsArray\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/interfaces/thumbnail.interface.ts\n            \n            class\n            Thumbnail\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/products/schemas/customAttributes.schema.ts\n            \n            variable\n            CustomAttributesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/foreignNames.schema.ts\n            \n            variable\n            ForeignNamesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/images.schema.ts\n            \n            variable\n            ImagesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/logisticsData.schema.ts\n            \n            variable\n            LogisticsDataSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/productClass.schema.ts\n            \n            variable\n            ProductClassSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/products.schema.ts\n            \n            variable\n            ProductsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/thumbnail.schema.ts\n            \n            variable\n            ThumbnailSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/dto/register.interface.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/register/dto/update.password.interface.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/register/dto/update.username.interface.dto.ts\n            \n            interface\n            UpdateUsernameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/register/interfaces/register.interface.ts\n            \n            interface\n            Register\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/register/interfaces/update.password.interface.ts\n            \n            interface\n            UpdatePassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/register/register.controller.ts\n            \n            controller\n            RegisterController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            injectable\n            RegisterService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/schemas/register.schema.ts\n            \n            variable\n            RegisterSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.2\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.1\n        \n            @types/bcryptjs : ^2.4.2\n        \n            bcrypt : ^5.0.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mongoose : ^5.13.2\n        \n            nest : ^0.1.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_exports\n\n\n\ncluster_RegisterModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductModule->ProductsModule\n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nLoginModule -->\n\nRegisterModule->LoginModule\n\n\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nRegisterService \n\nRegisterService \n\nRegisterService  -->\n\nRegisterModule->RegisterService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nRegisterService\n\nRegisterService\n\nRegisterModule -->\n\nRegisterService->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AdminSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            bcrypt   (src/.../register.service.ts)\n                        \n                        \n                            CustomAttributesSchema   (src/.../customAttributes.schema.ts)\n                        \n                        \n                            ForeignNamesSchema   (src/.../foreignNames.schema.ts)\n                        \n                        \n                            ImagesSchema   (src/.../images.schema.ts)\n                        \n                        \n                            LoginSchema   (src/.../login.schema.ts)\n                        \n                        \n                            LogisticsDataSchema   (src/.../logisticsData.schema.ts)\n                        \n                        \n                            ProductClassSchema   (src/.../productClass.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            ProductsSchema   (src/.../products.schema.ts)\n                        \n                        \n                            RegisterSchema   (src/.../register.schema.ts)\n                        \n                        \n                            saltRounds   (src/.../register.service.ts)\n                        \n                        \n                            ThumbnailSchema   (src/.../thumbnail.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/schemas/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    productCode: String,\n    dateAdded: String,\n    comment: String,\n    visitorNick: String,\n    anyContactData: String,\n    aproved: Boolean\n})\n                    \n                \n\n\n        \n    \n\n    src/register/register.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/customAttributes.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomAttributesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    key: String,\n    prompt: String,\n    value: Boolean\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/foreignNames.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ForeignNamesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    countryCode: String,\n    name: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/images.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ImagesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    imageName: String\n})\n                    \n                \n\n\n        \n    \n\n    src/login/schemas/login.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoginSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    username: String,\n    password: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/logisticsData.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogisticsDataSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    key: String,\n    prompt: String,\n    value: Number\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/productClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    title: String\n})\n                    \n                \n\n\n        \n    \n\n    src/product/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    title: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/products.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    productCode: String,\n    productName: String,\n    foreignNames: [ForeignNamesSchema],\n    productClass: ProductClassSchema,\n    active: Boolean,\n    thumbnail: ThumbnailSchema,\n    images: [ImagesSchema],\n    unit: String,\n    eANCode: String,\n    eANPackageCode: String,\n    logisticData: [LogisticsDataSchema],\n    tags: [String],\n    customAttributes: [CustomAttributesSchema],\n    likes: Number,\n    description: String\n})\n                    \n                \n\n\n        \n    \n\n    src/register/schemas/register.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RegisterSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    firstName: String,\n    lastName: String,\n    dateOfBirth: String,\n    username: String,\n    password: String,\n    email: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/thumbnail.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ThumbnailSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    imageName: String\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
