var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Admin.html",[0,1.412,1,2.157]],["body/interfaces/Admin.html",[0,1.526,1,3.107,2,2.174,3,0.165,4,0.165,5,0.141,6,3.383,7,0.238,8,0.938,9,1.541,10,4.818,11,4.022,12,4.375,13,4.375,14,1.465,15,4.022,16,4.375,17,0.76,18,0.554,19,0.019,20,2.553,21,0.165,22,0.01,23,0.014,24,0.01]],["title/controllers/AdminController.html",[25,1.412,26,2.532]],["body/controllers/AdminController.html",[1,1.962,3,0.088,4,0.088,5,0.075,7,0.127,9,1.185,11,1.341,14,0.771,17,0.653,18,0.408,19,0.02,21,0.088,22,0.017,23,0.009,24,0.005,25,0.814,26,2.303,27,0.814,28,1.804,29,1.341,30,1.356,31,3.186,32,2.848,33,3.322,34,2.848,35,2.848,36,2.848,37,2.848,38,2.848,39,1.804,40,6.04,41,3.241,42,2.921,43,3.322,44,0.708,45,2.104,46,2.587,47,2.19,48,4.008,49,2.312,50,1.02,51,2.104,52,2.854,53,2.104,54,1.804,55,3.322,56,2.104,57,2.826,58,2.104,59,3.322,60,2.104,61,3.322,62,1.804,63,3.322,64,2.104,65,2.848,66,2.104,67,3.609,68,3.322,69,2.104,70,1.804,71,3.322,72,2.104,73,2.848,74,1.243,75,2.623,76,1.341,77,1.459,78,1.341,79,2.104,80,0.598,81,2.431,82,1.804,83,1.804,84,1.804,85,2.104,86,2.104,87,0.089,88,1.243,89,0.772,90,2.104,91,2.471,92,3.168,93,2.104,94,2.104,95,1.607,96,2.208,97,2.104,98,2.104,99,2.104,100,2.104,101,4.115,102,2.104,103,2.104,104,2.104,105,2.104,106,2.104,107,2.104,108,3.322,109,1.459,110,2.104,111,2.104,112,2.104,113,2.104,114,2.104,115,2.104,116,2.104,117,1.804]],["title/classes/AdminDto.html",[67,2.327,87,0.154]],["body/classes/AdminDto.html",[3,0.153,4,0.153,5,0.131,7,0.221,8,0.893,9,1.525,10,4.352,11,3.633,12,3.953,13,3.953,14,1.323,15,3.633,16,3.953,17,0.732,18,0.544,19,0.019,20,2.161,21,0.153,22,0.01,23,0.013,24,0.01,44,0.847,67,3.191,87,0.154,89,2.743,118,0.852,119,3.145,120,3.668,121,3.668,122,3.668,123,3.668,124,3.668,125,3.668,126,3.668]],["title/modules/AdminModule.html",[127,1.491,128,2.327]],["body/modules/AdminModule.html",[1,2.455,3,0.173,4,0.173,5,0.149,19,0.019,21,0.173,22,0.011,23,0.014,24,0.011,26,4.208,27,2.105,74,1.633,80,1.181,81,4.334,82,3.563,87,0.175,127,2.222,128,4.454,129,2.015,130,2.639,131,3.563,132,3.563,133,3.563,134,2.998,135,2.289,136,2.289,137,4.155,138,3.215,139,3.774,140,2.455,141,1.697,142,4.155,143,4.155,144,4.155,145,2.455,146,2.649,147,2.649]],["title/injectables/AdminService.html",[81,2.157,148,1.412]],["body/injectables/AdminService.html",[1,1.156,3,0.082,4,0.082,5,0.07,7,0.118,9,1.267,11,1.248,12,3.112,13,1.357,14,1.485,16,1.357,17,0.712,18,0.474,19,0.02,20,1.694,21,0.082,22,0.01,23,0.008,24,0.005,30,1.281,31,3.239,32,2.689,34,2.689,35,2.689,36,2.689,37,2.689,38,2.689,39,2.689,44,0.757,46,2.765,47,2.341,48,2.689,49,2.409,50,1.521,54,2.689,57,2.696,62,2.689,65,2.689,67,3.508,70,2.689,73,1.678,74,1.2,80,0.556,81,1.853,83,1.678,84,1.678,87,0.082,89,0.718,91,1.433,92,2.696,96,2.14,141,0.799,148,1.213,149,1.078,150,1.678,151,2.395,152,3.136,153,3.136,154,1.999,155,1.957,156,2.472,157,1.957,158,3.136,159,2.395,160,3.112,161,1.957,162,3.848,163,1.957,164,3.136,165,1.957,166,1.957,167,3.136,168,1.957,169,3.136,170,1.957,171,3.136,172,1.957,173,3.136,174,1.957,175,1.957,176,1.357,177,1.01,178,1.248,179,1.957,180,1.156,181,1.957,182,2.025,183,1.957,184,1.957,185,3.136,186,3.136,187,1.678,188,1.957,189,1.957,190,1.957,191,1.678,192,1.678,193,1.957,194,1.357,195,1.957,196,1.678,197,1.248,198,1.999,199,1.248,200,1.248,201,1.248,202,1.248,203,1.957]],["title/controllers/AppController.html",[25,1.412,204,2.532]],["body/controllers/AppController.html",[3,0.196,4,0.196,5,0.169,7,0.284,17,0.6,19,0.019,21,0.196,22,0.012,23,0.015,24,0.012,25,2.281,27,1.822,30,2.408,42,2.43,44,0.589,49,1.923,74,1.44,80,1.338,87,0.198,88,2.782,89,1.728,96,1.923,204,4.088,205,4.038,206,5.785,207,4.709,208,3.803,209,4.038,210,4.709]],["title/modules/AppModule.html",[127,1.491,211,2.532]],["body/modules/AppModule.html",[3,0.132,4,0.132,5,0.113,19,0.02,21,0.132,22,0.008,23,0.012,24,0.008,27,1.745,74,1.727,80,0.898,87,0.133,127,1.842,128,4.023,129,1.532,130,2.188,134,2.485,135,1.741,136,1.741,138,2.666,140,1.867,141,1.29,145,2.666,204,3.649,208,3.729,209,2.71,211,5,212,2.71,213,2.71,214,2.71,215,4.023,216,3.729,217,4.023,218,3.729,219,3.16,220,3.16,221,2.014,222,3.16,223,1.741,224,3.16,225,3.16,226,2.71,227,3.16,228,3.16,229,3.16,230,3.16,231,3.16,232,3.16,233,3.16,234,3.16,235,3.16,236,3.16,237,2.71,238,3.16,239,3.16,240,3.16,241,3.16,242,3.649,243,3.16,244,3.16]],["title/injectables/AppService.html",[148,1.412,208,2.157]],["body/injectables/AppService.html",[3,0.206,4,0.206,5,0.177,7,0.298,17,0.618,19,0.019,21,0.206,22,0.013,23,0.016,24,0.013,30,2.481,44,0.618,49,2.018,74,1.207,80,1.405,87,0.208,96,2.018,148,2.35,149,2.723,206,5.885,208,3.59,245,4.238,246,4.943,247,4.943,248,4.943]],["title/classes/AproveDto.html",[41,2.532,87,0.154]],["body/classes/AproveDto.html",[3,0.218,4,0.218,5,0.187,7,0.315,8,1.121,18,0.419,19,0.019,20,2.713,21,0.218,22,0.014,23,0.016,24,0.014,41,4.358,44,0.653,87,0.22,118,1.213,162,5.78,249,4.481,250,5.226]],["title/classes/CustomAttributes.html",[87,0.154,251,2.011]],["body/classes/CustomAttributes.html",[3,0.196,4,0.196,5,0.168,7,0.283,8,1.049,9,1.482,17,0.685,18,0.516,19,0.019,20,2.538,21,0.196,22,0.012,23,0.015,24,0.012,44,0.803,87,0.197,118,1.089,251,3.239,252,4.02,253,4.095,254,4.095,255,3.796,256,4.689,257,4.689,258,4.689]],["title/classes/CustomAttributesDto.html",[87,0.154,259,2.532]],["body/classes/CustomAttributesDto.html",[3,0.201,4,0.201,5,0.172,7,0.29,8,1.066,17,0.692,18,0.522,19,0.019,20,2.579,21,0.201,22,0.012,23,0.016,24,0.012,44,0.813,87,0.203,118,1.117,253,4.144,254,4.144,255,3.841,259,4.144,260,4.126,261,4.812,262,4.812,263,4.812]],["title/classes/ForeignNames.html",[87,0.154,264,2.011]],["body/classes/ForeignNames.html",[3,0.205,4,0.205,5,0.176,7,0.297,8,1.081,9,1.435,17,0.697,18,0.486,19,0.019,21,0.205,22,0.013,23,0.016,24,0.013,44,0.758,47,2.54,87,0.207,118,1.142,264,3.338,265,4.219,266,5.013,267,4.92,268,4.92]],["title/classes/ForeignNamesDto.html",[87,0.154,269,2.532]],["body/classes/ForeignNamesDto.html",[3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.766,47,2.56,87,0.211,118,1.163,266,5.054,269,4.249,270,4.296,271,5.01,272,5.01]],["title/classes/Images.html",[87,0.154,273,2.011]],["body/classes/Images.html",[3,0.205,4,0.205,5,0.176,7,0.297,8,1.081,9,1.435,14,1.524,17,0.697,18,0.486,19,0.019,21,0.205,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.142,273,3.338,274,4.219,275,4.185,276,4.92,277,4.92]],["title/classes/ImagesDto.html",[87,0.154,278,2.532]],["body/classes/ImagesDto.html",[3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,14,1.537,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.766,87,0.211,118,1.163,275,4.219,278,4.249,279,4.296,280,5.01,281,5.01]],["title/interfaces/Login.html",[0,1.412,282,2.157]],["body/interfaces/Login.html",[0,1.903,2,2.711,3,0.205,4,0.205,5,0.176,7,0.297,8,1.081,9,1.435,17,0.729,18,0.486,19,0.019,21,0.205,22,0.013,23,0.016,24,0.013,282,3.58,283,4.219,284,3.535,285,3.323]],["title/controllers/LoginController.html",[25,1.412,221,2.327]],["body/controllers/LoginController.html",[3,0.124,4,0.124,5,0.106,7,0.179,9,1.064,14,1.002,18,0.239,19,0.02,21,0.124,22,0.013,23,0.011,24,0.008,25,1.15,27,1.15,29,1.894,30,1.762,31,3.044,42,2.878,44,0.697,46,2.323,47,1.966,49,2.278,50,1.441,57,2.825,74,1.447,75,1.894,76,1.894,78,3.24,80,0.845,87,0.125,88,1.756,89,1.584,91,1.358,92,2.708,96,2.278,180,1.756,182,1.533,197,1.894,198,2.751,199,1.894,200,1.894,201,1.894,202,1.894,221,2.751,223,2.8,282,3.296,285,2.093,286,2.548,287,3.701,288,4.316,289,4.783,290,2.548,291,3.296,292,2.972,293,2.972,294,4.316,295,2.972,296,2.972,297,2.548,298,3.556,299,2.972,300,3.701,301,2.548,302,2.548,303,2.548,304,2.8,305,2.972,306,2.972,307,2.972,308,2.972,309,4.316,310,2.972,311,2.972,312,2.269,313,2.269,314,2.972,315,2.972,316,2.972,317,2.972,318,2.972,319,2.972,320,2.972]],["title/classes/LoginDto.html",[87,0.154,298,2.327]],["body/classes/LoginDto.html",[3,0.2,4,0.2,5,0.171,7,0.289,8,1.063,9,1.421,17,0.691,18,0.478,19,0.018,21,0.2,22,0.012,23,0.015,24,0.012,44,0.745,87,0.202,89,2.612,118,1.112,284,3.347,285,3.146,298,3.799,321,4.108,322,4.791,323,4.791]],["title/modules/LoginModule.html",[127,1.491,215,2.327]],["body/modules/LoginModule.html",[3,0.164,4,0.164,5,0.141,19,0.019,21,0.164,22,0.01,23,0.014,24,0.01,27,2.03,74,1.65,80,1.117,87,0.165,127,2.142,129,1.906,130,2.544,134,2.89,135,2.166,136,2.166,138,3.1,139,3.638,140,2.323,141,1.605,145,3.1,146,2.506,147,2.506,215,4.52,218,3.989,221,3.764,223,4.007,282,2.323,302,3.371,324,3.371,325,3.931,326,3.371,327,3.371,328,3.931,329,3.931,330,3.931,331,4.006,332,3.931]],["title/injectables/LoginService.html",[148,1.412,223,2.011]],["body/injectables/LoginService.html",[3,0.113,4,0.113,5,0.097,7,0.164,9,1.195,14,0.937,17,0.662,18,0.458,19,0.02,21,0.113,22,0.007,23,0.01,24,0.007,30,1.649,31,3.197,44,0.748,46,2.609,47,2.208,49,2.331,50,1.316,57,2.735,74,1.395,80,0.771,87,0.114,89,0.996,91,1.845,92,2.609,96,2.181,141,1.108,148,1.562,149,1.495,154,2.574,156,2.942,176,2.8,177,1.4,178,1.73,180,1.603,182,2.083,194,1.882,196,2.327,223,2.224,282,2.849,285,3.088,287,3.462,289,4.579,290,3.462,297,3.462,298,3.404,300,2.327,301,2.327,303,2.327,313,3.083,333,2.327,334,4.038,335,4.038,336,2.714,337,2.714,338,4.038,339,4.038,340,2.714,341,2.714,342,2.714,343,2.714,344,4.038,345,2.714,346,2.327,347,2.072,348,2.072,349,2.714,350,2.714,351,2.714,352,2.714,353,2.714,354,2.714,355,2.714,356,4.038,357,4.038,358,2.714]],["title/classes/LogisticsData.html",[87,0.154,359,2.327]],["body/classes/LogisticsData.html",[3,0.196,4,0.196,5,0.168,7,0.283,8,1.049,9,1.482,17,0.685,18,0.516,19,0.019,21,0.196,22,0.012,23,0.015,24,0.012,44,0.803,87,0.197,118,1.089,253,4.095,254,4.095,255,3.796,359,3.748,360,4.02,361,4.689,362,4.689,363,3.748,364,4.689]],["title/classes/LogisticsDataDto.html",[87,0.154,365,2.532]],["body/classes/LogisticsDataDto.html",[3,0.201,4,0.201,5,0.172,7,0.29,8,1.066,17,0.692,18,0.522,19,0.019,21,0.201,22,0.012,23,0.016,24,0.012,44,0.813,87,0.203,118,1.117,253,4.144,254,4.144,255,3.841,363,3.81,365,4.144,366,4.126,367,4.812,368,4.812,369,4.812]],["title/interfaces/Product.html",[0,1.412,370,1.884]],["body/interfaces/Product.html",[0,1.938,2,2.76,3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,14,1.601,17,0.732,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,370,3.161,371,4.296,372,4.395]],["title/classes/ProductClass.html",[87,0.154,373,2.157]],["body/classes/ProductClass.html",[3,0.205,4,0.205,5,0.176,7,0.297,8,1.081,9,1.435,14,1.524,17,0.697,18,0.486,19,0.019,21,0.205,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.142,372,4.185,373,3.58,374,4.219,375,4.92,376,4.92]],["title/classes/ProductClassDto.html",[87,0.154,377,1.884]],["body/classes/ProductClassDto.html",[3,0.2,4,0.2,5,0.171,7,0.289,8,1.063,9,1.421,14,1.506,17,0.691,18,0.478,19,0.018,21,0.2,22,0.012,23,0.015,24,0.012,44,0.745,87,0.202,89,2.612,118,1.112,372,4.136,377,3.075,378,4.108,379,4.791,380,4.791]],["title/classes/ProductClassDto-1.html",[87,0.128,377,1.571,381,3.045]],["body/classes/ProductClassDto-1.html",[3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,14,1.537,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.766,87,0.211,118,1.163,377,3.161,382,4.296,383,6.619,384,5.01,385,5.01]],["title/controllers/ProductController.html",[25,1.412,386,2.532]],["body/controllers/ProductController.html",[3,0.097,4,0.097,5,0.083,7,0.141,9,1.182,14,1.311,17,0.634,18,0.453,19,0.02,21,0.097,22,0.014,23,0.009,24,0.006,25,0.902,27,0.902,29,1.487,30,1.47,31,3.006,42,3.036,44,0.736,46,2.58,47,2.184,49,2.402,50,1.746,52,1.617,57,2.777,74,1.305,75,3.151,76,1.487,77,1.617,78,2.802,80,0.663,87,0.098,88,1.378,89,0.856,91,1.645,92,2.689,95,1.781,96,2.305,109,1.617,117,2,156,1.285,177,1.203,291,2.749,370,3.217,377,3.438,386,2.496,387,2,388,2.333,389,3.087,390,3.77,391,4.238,392,3.087,393,3.77,394,3.087,395,3.048,396,2,397,2.333,398,2,399,3.6,400,2.333,401,3.77,402,2.333,403,2,404,2.333,405,2.333,406,3.6,407,2.333,408,2,409,2.749,410,2.333,411,1.617,412,3.6,413,2.333,414,2.422,415,2,416,2,417,2,418,2.333,419,2.333,420,2.333,421,2.333,422,2.333,423,2.333,424,2.333,425,2.333,426,2.333,427,2,428,2.333,429,3.6,430,2.333,431,2.333,432,2.333]],["title/modules/ProductModule.html",[127,1.491,216,2.157]],["body/modules/ProductModule.html",[3,0.173,4,0.173,5,0.149,19,0.019,21,0.173,22,0.011,23,0.014,24,0.011,27,2.105,74,1.633,80,1.181,87,0.175,127,2.222,129,2.015,130,2.639,134,2.998,135,2.289,136,2.289,138,3.215,139,3.774,140,2.455,141,1.697,145,2.455,146,2.649,147,2.649,216,4.129,370,2.144,386,4.208,414,4.041,415,3.563,433,3.563,434,3.563,435,3.563,436,4.155,437,4.155,438,4.155,439,4.155]],["title/injectables/ProductService.html",[148,1.412,414,2.011]],["body/injectables/ProductService.html",[3,0.089,4,0.089,5,0.076,7,0.129,9,1.235,14,1.517,17,0.698,18,0.474,19,0.02,21,0.089,22,0.006,23,0.009,24,0.006,30,1.373,31,3.24,44,0.759,46,2.696,47,2.403,49,2.409,50,2.016,57,2.696,74,1.252,80,0.607,87,0.142,89,0.784,91,1.9,92,2.603,95,1.632,96,2.326,141,0.873,148,1.301,149,1.177,151,2.567,154,2.143,156,2.597,159,2.567,160,3.269,177,1.103,178,1.362,180,1.263,182,2.145,197,1.362,198,2.143,199,1.362,200,1.362,201,1.362,202,1.362,370,2.939,372,1.362,377,3.206,389,3.565,390,2.883,391,4.042,392,2.883,393,2.883,394,2.883,395,2.883,396,1.832,398,2.883,401,2.883,403,2.883,408,2.883,411,1.482,414,1.852,416,1.832,417,1.832,440,1.832,441,2.137,442,2.137,443,3.362,444,2.137,445,2.137,446,2.137,447,2.137,448,2.137,449,3.362,450,2.137,451,2.137,452,2.137,453,2.137,454,2.883,455,2.137,456,1.832,457,2.137,458,3.362,459,2.137,460,2.137,461,2.137,462,1.036,463,2.137,464,2.137,465,1.832,466,2.137,467,1.832]],["title/classes/Products.html",[87,0.154,462,1.77]],["body/classes/Products.html",[3,0.109,4,0.109,5,0.094,7,0.158,8,0.702,9,1.559,14,1.097,15,3.012,17,0.722,18,0.566,19,0.019,20,1.699,21,0.109,22,0.007,23,0.01,24,0.007,44,0.882,74,1.444,87,0.11,118,0.609,251,3.255,264,3.255,273,3.255,359,3.012,363,2.509,373,3.491,462,1.909,468,2.249,469,3.608,470,3.608,471,3.608,472,3.608,473,3.608,474,3.608,475,3.608,476,4.725,477,3.608,478,3.255,479,3.608,480,2.623,481,2.623,482,2.623,483,2.623,484,2.623,485,2.623,486,2.623,487,2.623,488,2.623,489,2.623,490,2.623,491,2.623,492,2.623,493,2.623,494,2.623,495,2.623,496,2.623,497,2.623,498,2.623,499,2.623,500,2.623,501,2.623,502,2.623]],["title/classes/ProductsArray.html",[87,0.154,503,2.532]],["body/classes/ProductsArray.html",[3,0.211,4,0.211,5,0.181,7,0.305,8,1.099,9,1.29,18,0.406,19,0.019,21,0.211,22,0.013,23,0.016,24,0.013,44,0.632,74,1.235,87,0.213,118,1.174,462,3.497,503,4.272,504,4.336,505,5.057,506,5.057]],["title/classes/ProductsArrayDto.html",[87,0.154,507,2.327]],["body/classes/ProductsArrayDto.html",[3,0.192,4,0.192,5,0.165,7,0.278,8,1.038,18,0.512,19,0.019,21,0.192,22,0.012,23,0.015,24,0.012,42,2.378,44,0.576,74,1.557,87,0.268,118,1.07,242,3.197,462,3.091,507,3.708,508,3.953,509,3.955,510,3.953,511,3.953,512,4.61,513,3.52,514,4.988,515,3.52,516,4.61,517,3.953]],["title/controllers/ProductsController.html",[25,1.412,518,2.532]],["body/controllers/ProductsController.html",[3,0.105,4,0.105,5,0.09,7,0.151,9,1.156,14,1.349,17,0.648,18,0.443,19,0.02,21,0.105,22,0.012,23,0.01,24,0.007,25,0.971,27,0.971,29,1.599,30,1.554,31,3.22,42,2.997,44,0.726,46,2.522,47,2.135,49,2.372,50,1.217,52,1.74,57,2.842,74,1.419,75,2.426,76,1.599,77,1.74,78,2.932,80,0.713,87,0.106,88,1.482,89,0.921,91,1.147,92,2.655,96,2.254,109,1.74,291,2.906,395,2.639,409,2.906,411,1.74,462,1.846,503,1.74,507,3.273,509,3.566,518,2.639,519,2.151,520,3.264,521,3.264,522,3.264,523,4.402,524,3.264,525,2.151,526,2.509,527,5.332,528,2.151,529,3.806,530,2.509,531,2.151,532,2.509,533,2.509,534,2.151,535,2.509,536,3.806,537,2.509,538,2.151,539,2.151,540,2.717,541,2.151,542,2.151,543,2.151,544,2.509,545,2.509,546,2.509,547,2.509,548,2.509,549,2.509,550,2.509,551,2.509,552,2.509,553,2.509,554,2.509,555,3.806,556,2.509,557,2.509,558,2.509]],["title/classes/ProductsDto.html",[87,0.154,509,2.157]],["body/classes/ProductsDto.html",[3,0.104,4,0.104,5,0.09,7,0.151,8,0.678,14,1.066,15,2.928,17,0.707,18,0.577,19,0.02,20,1.64,21,0.104,22,0.006,23,0.01,24,0.006,42,2.845,44,0.869,74,1.518,87,0.193,118,0.581,242,3.556,251,2.53,259,3.556,264,2.53,269,3.556,273,2.53,278,3.556,363,2.422,365,3.556,373,2.714,377,2.37,470,3.507,471,3.507,472,3.507,473,3.507,474,3.507,475,3.507,477,3.507,478,2.53,479,3.507,509,2.245,510,4.397,511,4.397,513,1.911,514,4.977,515,1.911,517,4.397,559,2.146,560,3.938,561,2.503,562,2.503,563,2.503,564,2.503,565,2.503,566,2.503,567,2.503,568,2.503,569,2.503,570,2.503,571,2.503,572,2.503,573,2.503,574,2.503,575,3.556,576,2.503,577,2.503,578,2.503,579,2.503,580,2.503,581,2.503,582,2.503,583,2.503,584,2.503]],["title/modules/ProductsModule.html",[127,1.491,217,2.327]],["body/modules/ProductsModule.html",[3,0.141,4,0.141,5,0.121,19,0.02,21,0.141,22,0.009,23,0.012,24,0.009,27,1.832,74,1.734,80,0.962,87,0.142,127,1.934,129,1.641,130,2.297,134,2.609,135,1.865,136,1.865,138,2.798,140,2,141,1.382,145,2.798,146,4.223,147,4.223,216,3.813,217,4.309,251,1.865,264,1.865,273,1.865,359,2.158,462,1.641,478,1.865,518,3.788,540,3.813,541,2.902,585,2.902,586,3.385,587,2.902,588,3.385,589,3.385,590,3.385,591,3.616,592,3.385,593,3.616,594,3.385,595,3.616,596,3.385,597,3.616,598,3.385,599,4.172,600,3.385,601,3.616,602,3.385,603,3.616,604,3.385]],["title/injectables/ProductsService.html",[148,1.412,540,2.157]],["body/injectables/ProductsService.html",[3,0.074,4,0.074,5,0.063,7,0.107,9,1.153,14,1.521,17,0.673,18,0.442,19,0.02,20,1.826,21,0.074,22,0.012,23,0.008,24,0.005,30,1.181,31,3.15,44,0.712,46,2.517,47,2.13,49,2.249,50,0.859,57,2.604,74,1.29,80,0.503,87,0.075,89,1.061,91,2.287,92,2.929,96,1.904,141,0.723,148,1.119,149,0.975,151,2.208,154,1.843,156,2.331,159,2.208,160,2.934,176,1.228,177,0.914,178,1.129,180,1.709,182,2.406,191,1.518,192,1.518,194,2.005,197,1.129,198,1.843,199,1.129,200,1.129,201,1.129,202,1.129,242,3.234,255,1.046,312,1.352,347,2.208,348,1.352,370,2.724,395,2.005,411,2.005,414,2.909,454,2.48,456,1.518,462,1.402,465,1.518,467,1.518,507,2.697,509,3.119,520,2.48,521,2.48,522,2.48,523,3.628,524,2.48,525,2.48,527,2.48,528,2.48,531,2.48,534,2.48,539,1.518,540,1.709,542,1.518,543,1.518,605,1.518,606,4.664,607,1.771,608,1.771,609,2.892,610,1.771,611,1.771,612,1.771,613,1.771,614,1.771,615,1.771,616,2.892,617,4.664,618,4.232,619,1.771,620,1.518,621,4.664,622,3.231,623,1.771,624,1.771,625,1.771,626,1.771,627,2.892,628,3.143,629,2.48,630,1.771,631,1.771,632,2.892,633,2.892,634,2.892,635,2.892,636,2.892,637,2.892,638,1.518,639,1.771,640,1.771,641,1.771,642,1.771,643,1.771,644,1.771,645,3.666,646,1.771,647,1.771,648,1.771]],["title/interfaces/Register.html",[0,1.412,649,2.157]],["body/interfaces/Register.html",[0,1.526,2,2.174,3,0.165,4,0.165,5,0.141,7,0.238,8,0.938,9,1.541,17,0.766,18,0.554,19,0.019,21,0.165,22,0.01,23,0.014,24,0.01,284,3.255,285,3.06,469,4.818,649,3.107,650,3.383,651,4.818,652,4.818,653,4.818,654,4.818]],["title/controllers/RegisterController.html",[25,1.412,655,2.532]],["body/controllers/RegisterController.html",[3,0.103,4,0.103,5,0.089,7,0.149,9,1.149,14,1.342,17,0.645,18,0.409,19,0.02,21,0.103,22,0.016,23,0.01,24,0.006,25,0.957,27,0.957,29,1.578,30,1.538,31,3.048,42,2.83,44,0.686,46,2.507,47,2.122,49,2.24,52,1.716,57,2.83,74,1.468,75,2.907,76,1.578,77,1.716,78,2.907,80,0.703,87,0.104,88,1.462,89,0.908,91,2.084,92,2.746,96,2.082,109,2.612,156,1.363,177,1.277,284,1.277,285,2.212,304,2.513,409,2.876,427,3.23,622,4.728,649,2.226,655,2.612,656,2.122,657,3.23,658,3.23,659,3.23,660,2.907,661,3.911,662,2.122,663,2.475,664,2.475,665,2.122,666,3.767,667,2.475,668,2.122,669,3.25,670,2.475,671,3.23,672,2.122,673,3.25,674,3.767,675,2.475,676,2.122,677,3.25,678,3.767,679,2.475,680,2.122,681,2.122,682,2.122,683,2.122,684,2.122,685,2.475,686,2.475,687,2.475,688,4.561,689,2.122,690,2.475,691,2.475,692,2.475,693,2.475,694,2.475,695,2.475]],["title/classes/RegisterDto.html",[87,0.154,669,2.327]],["body/classes/RegisterDto.html",[3,0.171,4,0.171,5,0.147,7,0.248,8,0.963,9,1.533,17,0.745,18,0.549,19,0.019,21,0.171,22,0.011,23,0.014,24,0.011,44,0.855,87,0.173,118,0.954,284,3.114,285,2.927,651,4.608,652,4.608,653,4.608,654,4.608,669,3.443,696,3.523,697,4.108,698,4.108,699,4.108,700,4.108,701,4.108,702,4.108]],["title/modules/RegisterModule.html",[127,1.491,218,2.157]],["body/modules/RegisterModule.html",[3,0.173,4,0.173,5,0.149,19,0.019,21,0.173,22,0.011,23,0.014,24,0.011,27,2.105,74,1.633,80,1.181,87,0.175,127,2.222,129,2.015,130,2.639,134,2.998,135,2.289,136,2.289,138,3.215,139,3.774,140,2.455,141,1.697,145,2.455,146,2.649,147,2.649,218,4.129,304,4.041,649,2.455,655,4.208,684,3.563,703,3.563,704,3.563,705,3.563,706,4.155,707,4.155,708,4.155,709,4.155]],["title/injectables/RegisterService.html",[148,1.412,304,2.011]],["body/injectables/RegisterService.html",[3,0.067,4,0.067,5,0.058,7,0.097,9,1.111,14,1.03,17,0.677,18,0.426,19,0.02,20,0.697,21,0.067,22,0.004,23,0.007,24,0.004,30,1.094,31,3.04,44,0.664,46,2.425,47,2.053,49,2.07,50,0.783,57,2.187,74,1.345,80,0.459,87,0.068,89,0.592,91,2.595,92,2.862,96,1.633,141,0.659,148,1.037,149,0.889,154,1.708,156,2.203,160,2.774,176,1.119,177,0.833,178,1.029,180,0.954,182,2.93,187,2.298,194,3.319,197,2.55,198,1.708,199,1.029,200,1.029,201,1.029,202,1.029,284,2.93,285,2.825,304,1.476,312,1.233,313,4.336,346,1.384,347,3.388,348,1.233,469,1.233,538,1.384,622,3.654,628,1.384,629,1.384,638,3.805,649,2.363,657,2.298,658,2.298,659,2.298,660,1.708,661,2.298,662,2.298,665,2.298,668,2.298,669,2.55,671,4.348,672,2.298,673,2.55,676,2.298,677,2.55,680,1.384,681,1.384,682,1.384,683,1.384,689,1.384,710,1.233,711,2.68,712,2.68,713,1.614,714,1.614,715,2.68,716,1.614,717,1.614,718,2.68,719,1.614,720,1.614,721,1.614,722,1.614,723,2.68,724,1.614,725,1.614,726,1.614,727,1.614,728,1.614,729,1.384,730,1.614,731,1.119,732,1.384,733,2.623,734,1.384,735,1.614,736,2.68,737,1.614,738,1.614,739,2.68,740,4.786,741,1.614,742,1.614,743,1.614,744,1.614,745,1.614,746,1.614,747,4.786,748,1.614,749,1.614,750,1.614,751,2.68,752,1.614,753,2.68,754,1.614,755,2.68,756,2.68,757,1.614,758,2.68,759,1.614,760,2.68,761,1.614,762,2.68,763,1.614,764,1.614]],["title/classes/Thumbnail.html",[87,0.154,478,2.011]],["body/classes/Thumbnail.html",[3,0.205,4,0.205,5,0.176,7,0.297,8,1.081,9,1.435,14,1.524,17,0.697,18,0.486,19,0.019,21,0.205,22,0.013,23,0.016,24,0.013,44,0.758,87,0.207,118,1.142,275,4.185,478,3.338,765,4.219,766,4.92,767,4.92]],["title/classes/ThumbnailDto.html",[87,0.154,575,2.532]],["body/classes/ThumbnailDto.html",[3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,14,1.537,17,0.702,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,44,0.766,87,0.211,118,1.163,275,4.219,575,4.249,768,4.296,769,5.01,770,5.01]],["title/interfaces/UpdatePassword.html",[0,1.412,660,2.327]],["body/interfaces/UpdatePassword.html",[0,2.031,2,2.892,3,0.219,4,0.219,5,0.188,7,0.317,8,1.124,17,0.687,18,0.422,19,0.018,21,0.219,22,0.014,23,0.016,24,0.014,660,4.018,771,4.502,772,6.007]],["title/classes/UpdatePasswordDto.html",[87,0.154,673,2.327]],["body/classes/UpdatePasswordDto.html",[3,0.218,4,0.218,5,0.187,7,0.315,8,1.121,17,0.64,18,0.419,19,0.019,21,0.218,22,0.014,23,0.016,24,0.014,44,0.653,87,0.22,118,1.213,673,4.006,772,5.78,773,4.481,774,5.226]],["title/interfaces/UpdateUsernameDto.html",[0,1.412,677,2.327]],["body/interfaces/UpdateUsernameDto.html",[0,1.938,2,2.76,3,0.209,4,0.209,5,0.179,7,0.302,8,1.093,17,0.732,18,0.492,19,0.019,21,0.209,22,0.013,23,0.016,24,0.013,284,3.558,677,3.905,775,4.296,776,6.895]],["title/coverage.html",[777,4.279]],["body/coverage.html",[0,2.094,1,1.246,5,0.075,6,1.808,18,0.169,19,0.02,22,0.005,23,0.009,24,0.005,25,2.094,26,1.462,28,1.808,41,1.462,67,1.344,81,1.246,87,0.295,119,1.808,143,1.61,148,2.094,150,1.808,182,1.088,204,1.462,205,1.808,208,1.246,221,1.344,223,1.161,245,1.808,249,1.808,251,1.161,252,1.808,259,1.462,260,1.808,264,1.161,265,1.808,269,1.462,270,1.808,273,1.161,274,1.808,278,1.462,279,1.808,282,1.246,283,1.808,286,1.808,298,1.344,304,1.161,321,1.808,331,1.61,333,1.808,359,1.344,360,1.808,365,1.462,366,1.808,370,1.088,371,1.808,373,1.246,374,1.808,377,1.716,378,1.808,382,1.808,386,1.462,387,1.808,414,1.161,438,1.61,440,1.808,462,1.022,468,1.808,478,1.161,503,1.462,504,1.808,507,1.344,508,1.808,509,1.246,518,1.462,519,1.808,540,1.246,559,1.808,575,1.462,591,1.61,593,1.61,595,1.61,597,1.61,599,1.61,601,1.61,603,1.61,605,1.808,649,1.246,650,1.808,655,1.462,656,1.808,660,1.344,669,1.344,673,1.344,677,1.344,696,1.808,708,1.61,710,3.146,731,1.462,733,1.61,765,1.808,768,1.808,771,1.808,773,1.808,775,1.808,777,1.808,778,1.808,779,2.108,780,2.108,781,7.503,782,5.093,783,2.108,784,5.666,785,1.808,786,6.511,787,6.593,788,6.511,789,2.108,790,4.121,791,1.808,792,1.808,793,2.108,794,1.808,795,3.327,796,1.808,797,4.679,798,2.108,799,2.108,800,1.808,801,1.808,802,1.808,803,1.808,804,1.808,805,1.808,806,1.808,807,2.108,808,2.108,809,1.808,810,2.108,811,2.108]],["title/dependencies.html",[130,2.13,812,3.045]],["body/dependencies.html",[19,0.02,22,0.012,23,0.015,24,0.012,80,1.299,87,0.244,130,2.217,141,1.867,177,2.359,226,3.92,513,3.49,515,3.49,729,3.92,731,3.17,813,4.571,814,4.571,815,6.35,816,4.571,817,4.571,818,4.571,819,4.571,820,4.571,821,4.571,822,4.571,823,4.571,824,4.571,825,4.571,826,4.571,827,4.571,828,4.571,829,4.571,830,4.571,831,4.571,832,4.571,833,4.571,834,4.571,835,4.571,836,4.571]],["title/miscellaneous/functions.html",[837,2.111,838,3.767]],["body/miscellaneous/functions.html",[7,0.34,19,0.017,22,0.015,23,0.017,24,0.015,792,4.826,794,5.963,837,3.903,838,4.826,839,5.628]],["title/index.html",[7,0.184,840,3.045,841,3.045]],["body/index.html",[19,0.019,22,0.012,23,0.015,24,0.012,237,5.812,370,2.461,778,4.09,842,5.944,843,4.77,844,4.77,845,4.77,846,4.77,847,5.944,848,5.944,849,5.944,850,5.944,851,5.944,852,4.77,853,4.77,854,4.77,855,4.77,856,4.77,857,4.77,858,4.77,859,4.77,860,4.77,861,4.77,862,4.77,863,4.77,864,4.77,865,4.77,866,4.77,867,4.77]],["title/modules.html",[129,2.42]],["body/modules.html",[19,0.016,22,0.013,23,0.016,24,0.013,128,3.208,129,2.441,211,3.49,215,3.208,216,2.974,217,3.208,218,2.974,868,7.204,869,7.204,870,7.204,871,7.204]],["title/overview.html",[872,4.279]],["body/overview.html",[2,1.882,19,0.019,22,0.009,23,0.012,24,0.009,27,1.322,81,3.925,118,0.793,128,4.126,129,1.657,130,2.312,131,2.929,132,2.929,133,2.929,134,2.626,135,1.882,136,1.882,149,1.882,208,3.244,211,5,212,2.929,213,2.929,214,2.929,215,4.319,216,3.925,217,4.234,218,3.925,223,3.659,304,3.659,324,2.929,326,2.929,327,2.929,414,3.659,433,2.929,434,2.929,435,2.929,540,3.244,585,2.929,587,2.929,703,2.929,704,2.929,705,2.929,872,2.929,873,5.942,874,3.417]],["title/miscellaneous/variables.html",[837,2.111,875,3.767]],["body/miscellaneous/variables.html",[7,0.161,10,2.032,11,1.696,12,1.845,13,1.845,14,1.379,15,2.536,16,1.845,17,0.761,18,0.214,19,0.019,20,2.057,22,0.007,23,0.01,24,0.007,47,1.03,143,3.038,182,3.452,251,1.466,253,2.536,254,2.536,255,4.119,264,1.466,266,2.032,273,1.466,275,2.536,284,2.053,285,1.93,331,3.038,363,3.038,372,2.536,373,1.572,438,3.038,470,2.032,471,2.032,472,2.032,473,2.032,474,2.032,475,2.032,477,2.032,478,1.466,479,2.032,560,2.282,591,3.639,593,3.639,595,3.639,597,3.639,599,3.639,601,3.038,603,3.639,620,5.873,651,2.032,652,2.032,653,2.032,654,2.032,708,3.038,710,2.032,731,2.759,732,2.282,733,3.038,734,2.282,785,2.282,791,2.282,796,2.282,800,2.282,801,2.282,802,2.282,803,2.282,804,2.282,805,2.282,806,2.282,809,2.282,837,1.845,875,2.282,876,2.661,877,3.979,878,2.661,879,2.661,880,2.661,881,2.661,882,2.661,883,2.661,884,2.661,885,2.661,886,2.661,887,2.661,888,6.69]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["0.13.1",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["0.2.34",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":787,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":788,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":782,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":381,"title":{"classes/ProductClassDto-1.html":{}},"body":{}}],["12",{"_index":734,"title":{},"body":{"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["172.17.0.1",{"_index":240,"title":{},"body":{"modules/AppModule.html":{}}}],["2.4.2",{"_index":820,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["22",{"_index":874,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["5.0.1",{"_index":821,"title":{},"body":{"dependencies.html":{}}}],["5.13.2",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":873,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":815,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":818,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":813,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":469,"title":{},"body":{"classes/Products.html":{},"interfaces/Register.html":{},"injectables/RegisterService.html":{}}}],["a.d",{"_index":846,"title":{},"body":{"index.html":{}}}],["action",{"_index":160,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["active",{"_index":470,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["added",{"_index":95,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addlogs",{"_index":151,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["addlogs(id",{"_index":159,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["addproduct",{"_index":389,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproduct(@body",{"_index":419,"title":{},"body":{"controllers/ProductController.html":{}}}],["addproduct(product",{"_index":396,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproductclasslist",{"_index":390,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["addproductclasslist(productclasslist",{"_index":398,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["address",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["admin",{"_index":1,"title":{"interfaces/Admin.html":{}},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["admin.controller",{"_index":142,"title":{},"body":{"modules/AdminModule.html":{}}}],["admin.service",{"_index":82,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{}}}],["admin/admin.module",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["admincontroller",{"_index":26,"title":{"controllers/AdminController.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"coverage.html":{}}}],["admindto",{"_index":67,"title":{"classes/AdminDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"coverage.html":{}}}],["adminmodel",{"_index":158,"title":{},"body":{"injectables/AdminService.html":{}}}],["adminmodule",{"_index":128,"title":{"modules/AdminModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["adminschema",{"_index":143,"title":{},"body":{"modules/AdminModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["adminservice",{"_index":81,"title":{"injectables/AdminService.html":{}},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"coverage.html":{},"overview.html":{}}}],["allproductclasses",{"_index":391,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["already",{"_index":628,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["anycontactdata",{"_index":10,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"miscellaneous/variables.html":{}}}],["api",{"_index":842,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":209,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":204,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":211,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":208,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aprove",{"_index":162,"title":{},"body":{"injectables/AdminService.html":{},"classes/AproveDto.html":{}}}],["aprovecomment",{"_index":32,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["aprovecomment(@param('id",{"_index":110,"title":{},"body":{"controllers/AdminController.html":{}}}],["aprovecomment(commentid",{"_index":39,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["aproved",{"_index":11,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["aprovedto",{"_index":41,"title":{"classes/AproveDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AproveDto.html":{},"coverage.html":{}}}],["array",{"_index":191,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductsService.html":{}}}],["async",{"_index":31,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["await",{"_index":92,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["bambi",{"_index":845,"title":{},"body":{"index.html":{}}}],["bcrypt",{"_index":731,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bcrypt.compare",{"_index":754,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.compare(password",{"_index":748,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.compare(updatedata.password",{"_index":761,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.hash",{"_index":759,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcrypt.hash(userdata.password",{"_index":737,"title":{},"body":{"injectables/RegisterService.html":{}}}],["bcryptjs",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["body",{"_index":75,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["boolean",{"_index":20,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["boolean=false",{"_index":633,"title":{},"body":{"injectables/ProductsService.html":{}}}],["bootstrap",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":871,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":868,"title":{},"body":{"modules.html":{}}}],["build",{"_index":848,"title":{},"body":{"index.html":{}}}],["called",{"_index":98,"title":{},"body":{"controllers/AdminController.html":{}}}],["catalog",{"_index":843,"title":{},"body":{"index.html":{}}}],["cet",{"_index":202,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["check",{"_index":627,"title":{},"body":{"injectables/ProductsService.html":{}}}],["class",{"_index":87,"title":{"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{}},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":118,"title":{},"body":{"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{},"overview.html":{}}}],["cluster_adminmodule",{"_index":131,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_exports",{"_index":132,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_adminmodule_providers",{"_index":133,"title":{},"body":{"modules/AdminModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":324,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_exports",{"_index":326,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":325,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_providers",{"_index":327,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":433,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_exports",{"_index":435,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_providers",{"_index":434,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":585,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_imports",{"_index":586,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cluster_productsmodule_providers",{"_index":587,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_registermodule",{"_index":703,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_exports",{"_index":705,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["cluster_registermodule_providers",{"_index":704,"title":{},"body":{"modules/RegisterModule.html":{},"overview.html":{}}}],["comment",{"_index":12,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["commentexist",{"_index":152,"title":{},"body":{"injectables/AdminService.html":{}}}],["commentexist(result",{"_index":164,"title":{},"body":{"injectables/AdminService.html":{}}}],["commentid",{"_index":48,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["compodoc/compodoc",{"_index":862,"title":{},"body":{"index.html":{}}}],["compose",{"_index":851,"title":{},"body":{"index.html":{}}}],["config",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["config/address",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log",{"_index":312,"title":{},"body":{"controllers/LoginController.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["console.log('comment",{"_index":203,"title":{},"body":{"injectables/AdminService.html":{}}}],["console.log(`product",{"_index":461,"title":{},"body":{"injectables/ProductService.html":{}}}],["const",{"_index":91,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["constructor",{"_index":154,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["constructor(adminmodel",{"_index":155,"title":{},"body":{"injectables/AdminService.html":{}}}],["constructor(loginmodel",{"_index":336,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["constructor(productmodel",{"_index":441,"title":{},"body":{"injectables/ProductService.html":{}}}],["constructor(productsmodel",{"_index":607,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(registermodel",{"_index":713,"title":{},"body":{"injectables/RegisterService.html":{}}}],["container",{"_index":849,"title":{},"body":{"index.html":{}}}],["controller",{"_index":25,"title":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{},"coverage.html":{}}}],["controller('admin",{"_index":86,"title":{},"body":{"controllers/AdminController.html":{}}}],["controller('login",{"_index":306,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('productclasses",{"_index":418,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('products",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{}}}],["controller('register",{"_index":685,"title":{},"body":{"controllers/RegisterController.html":{}}}],["controllers",{"_index":27,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["countrycode",{"_index":266,"title":{},"body":{"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":777,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":617,"title":{},"body":{"injectables/ProductsService.html":{}}}],["created",{"_index":632,"title":{},"body":{"injectables/ProductsService.html":{}}}],["createproduct",{"_index":520,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproduct(@body",{"_index":546,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproduct(inputdata",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproducts",{"_index":521,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["createproducts(@body",{"_index":548,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproducts(inputdata",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["current_product",{"_index":463,"title":{},"body":{"injectables/ProductService.html":{}}}],["customattributes",{"_index":251,"title":{"classes/CustomAttributes.html":{}},"body":{"classes/CustomAttributes.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["customattributes.interface",{"_index":502,"title":{},"body":{"classes/Products.html":{}}}],["customattributes.interface.dto",{"_index":584,"title":{},"body":{"classes/ProductsDto.html":{}}}],["customattributesdto",{"_index":259,"title":{"classes/CustomAttributesDto.html":{}},"body":{"classes/CustomAttributesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["customattributesschema",{"_index":591,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":636,"title":{},"body":{"injectables/ProductsService.html":{}}}],["date",{"_index":198,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["date().tolocalestring('hu",{"_index":199,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["dateadded",{"_index":13,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["datecomment",{"_index":65,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["dateofbirth",{"_index":651,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"controllers/AdminController.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"controllers/RegisterController.html":{}}}],["default",{"_index":620,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"classes/UpdatePasswordDto.html":{}}}],["delete",{"_index":52,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["delete(':id",{"_index":409,"title":{},"body":{"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["deletecomment",{"_index":33,"title":{},"body":{"controllers/AdminController.html":{}}}],["deletecomment(@query",{"_index":113,"title":{},"body":{"controllers/AdminController.html":{}}}],["deletecomment(input",{"_index":51,"title":{},"body":{"controllers/AdminController.html":{}}}],["deleted",{"_index":558,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct",{"_index":522,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteproduct(@param('id",{"_index":556,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteproduct(id",{"_index":531,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["deleteuser",{"_index":657,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["deleteuser(@param('id",{"_index":692,"title":{},"body":{"controllers/RegisterController.html":{}}}],["deleteuser(id",{"_index":662,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dependencies",{"_index":130,"title":{"dependencies.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":471,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":854,"title":{},"body":{"index.html":{}}}],["docker",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["documentation",{"_index":778,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dto/admin.interface.dto",{"_index":83,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["dto/aprove.interface.dto",{"_index":85,"title":{},"body":{"controllers/AdminController.html":{}}}],["dto/login.interface.dto",{"_index":301,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["dto/product.interface.dto",{"_index":416,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["dto/products.array.interface.dto",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/products.interface.dto",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["dto/register.interface.dto",{"_index":680,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dto/update.password.interface.dto",{"_index":681,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["dto/update.username.interface.dto",{"_index":682,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["each",{"_index":517,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["eancode",{"_index":472,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["eanpackagecode",{"_index":473,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":652,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["enter",{"_index":764,"title":{},"body":{"injectables/RegisterService.html":{}}}],["exist",{"_index":637,"title":{},"body":{"injectables/ProductsService.html":{}}}],["exists",{"_index":629,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["exports",{"_index":139,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/RegisterModule.html":{}}}],["express",{"_index":817,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":621,"title":{},"body":{"injectables/ProductsService.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["find",{"_index":353,"title":{},"body":{"injectables/LoginService.html":{}}}],["find/update",{"_index":639,"title":{},"body":{"injectables/ProductsService.html":{}}}],["findbyusername",{"_index":334,"title":{},"body":{"injectables/LoginService.html":{}}}],["findbyusername(username",{"_index":339,"title":{},"body":{"injectables/LoginService.html":{}}}],["findcommentbyid",{"_index":34,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbyid(@param('id",{"_index":102,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbyid(id",{"_index":54,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbynickname",{"_index":35,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentbynickname(@query",{"_index":97,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbynickname(inputnick",{"_index":58,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentbynickname(nickaname",{"_index":167,"title":{},"body":{"injectables/AdminService.html":{}}}],["findcommentsbydate",{"_index":36,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findcommentsbydate(@param('datecomment",{"_index":104,"title":{},"body":{"controllers/AdminController.html":{}}}],["findcommentsbydate(datecomment",{"_index":62,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["findproductbyid",{"_index":392,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyid(@param('id",{"_index":424,"title":{},"body":{"controllers/ProductController.html":{}}}],["findproductbyid(id",{"_index":403,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyname",{"_index":393,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["findproductbyname(name",{"_index":449,"title":{},"body":{"injectables/ProductService.html":{}}}],["findproductbyname(product",{"_index":405,"title":{},"body":{"controllers/ProductController.html":{}}}],["finduser",{"_index":287,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["finduser(@param('id",{"_index":315,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduser(id",{"_index":290,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["finduserbyusername",{"_index":288,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduserbyusername(@param('username",{"_index":317,"title":{},"body":{"controllers/LoginController.html":{}}}],["finduserbyusername(username",{"_index":293,"title":{},"body":{"controllers/LoginController.html":{}}}],["firstname",{"_index":653,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["foreignnames",{"_index":264,"title":{"classes/ForeignNames.html":{}},"body":{"classes/ForeignNames.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["foreignnames.interface",{"_index":497,"title":{},"body":{"classes/Products.html":{}}}],["foreignnames.interface.dto",{"_index":579,"title":{},"body":{"classes/ProductsDto.html":{}}}],["foreignnamesdto",{"_index":269,"title":{"classes/ForeignNamesDto.html":{}},"body":{"classes/ForeignNamesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["foreignnamesschema",{"_index":593,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":196,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{}}}],["function",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":838,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":291,"title":{},"body":{"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{}}}],["get('filterbydate/:datecomment",{"_index":63,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('filterbyid/:id",{"_index":55,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('filterbynickname",{"_index":59,"title":{},"body":{"controllers/AdminController.html":{}}}],["get('findbyusername/:username",{"_index":294,"title":{},"body":{"controllers/LoginController.html":{}}}],["get('isregistered/:username",{"_index":666,"title":{},"body":{"controllers/RegisterController.html":{}}}],["getallproducts",{"_index":523,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["gethello",{"_index":206,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getproduct",{"_index":524,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getproduct(@param('id",{"_index":550,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getproduct(id",{"_index":534,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getting",{"_index":840,"title":{"index.html":{}},"body":{}}],["git",{"_index":858,"title":{},"body":{"index.html":{}}}],["github",{"_index":859,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":738,"title":{},"body":{"injectables/RegisterService.html":{}}}],["hello",{"_index":247,"title":{},"body":{"injectables/AppService.html":{}}}],["http://localhost:3000/admin/filterbynickname?nickname=visitornick",{"_index":99,"title":{},"body":{"controllers/AdminController.html":{}}}],["http://localhost:3000/admin?id=id",{"_index":114,"title":{},"body":{"controllers/AdminController.html":{}}}],["httpcode",{"_index":346,"title":{},"body":{"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["httpexception",{"_index":347,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpexception('old",{"_index":757,"title":{},"body":{"injectables/RegisterService.html":{}}}],["httpexception('please",{"_index":763,"title":{},"body":{"injectables/RegisterService.html":{}}}],["httpstatus",{"_index":348,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpstatus.bad_request",{"_index":638,"title":{},"body":{"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["httpstatus.not_found",{"_index":745,"title":{},"body":{"injectables/RegisterService.html":{}}}],["hu",{"_index":200,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["id",{"_index":14,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["imagename",{"_index":275,"title":{},"body":{"classes/Images.html":{},"classes/ImagesDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":273,"title":{"classes/Images.html":{}},"body":{"classes/Images.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["images.interface",{"_index":500,"title":{},"body":{"classes/Products.html":{}}}],["images.interface.dto",{"_index":582,"title":{},"body":{"classes/ProductsDto.html":{}}}],["imagesdto",{"_index":278,"title":{"classes/ImagesDto.html":{}},"body":{"classes/ImagesDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["imagesschema",{"_index":595,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["import",{"_index":74,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{}}}],["imports",{"_index":145,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["injectable",{"_index":148,"title":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["injectables",{"_index":149,"title":{},"body":{"injectables/AdminService.html":{},"injectables/AppService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"overview.html":{}}}],["injectmodel",{"_index":178,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["injectmodel('admin",{"_index":179,"title":{},"body":{"injectables/AdminService.html":{}}}],["injectmodel('login",{"_index":349,"title":{},"body":{"injectables/LoginService.html":{}}}],["injectmodel('product",{"_index":453,"title":{},"body":{"injectables/ProductService.html":{}}}],["injectmodel('products",{"_index":625,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectmodel('register",{"_index":735,"title":{},"body":{"injectables/RegisterService.html":{}}}],["input",{"_index":40,"title":{},"body":{"controllers/AdminController.html":{}}}],["input.aprove",{"_index":112,"title":{},"body":{"controllers/AdminController.html":{}}}],["inputdata",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["inputdata.products",{"_index":641,"title":{},"body":{"injectables/ProductsService.html":{}}}],["inputnick",{"_index":61,"title":{},"body":{"controllers/AdminController.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{}},"body":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Admin.html":{},"interfaces/Login.html":{},"interfaces/Product.html":{},"interfaces/Register.html":{},"interfaces/UpdatePassword.html":{},"interfaces/UpdateUsernameDto.html":{},"overview.html":{}}}],["interfaces/admin.interface",{"_index":84,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["interfaces/login.interface",{"_index":303,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["interfaces/product.interface",{"_index":417,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["interfaces/products.interface",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["interfaces/productsarray.interface",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{}}}],["interfaces/register.interface",{"_index":683,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["ip",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["isregistered",{"_index":658,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["isregistered(@param('username",{"_index":690,"title":{},"body":{"controllers/RegisterController.html":{}}}],["isregistered(username",{"_index":665,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["jovana",{"_index":866,"title":{},"body":{"index.html":{}}}],["jovanovi",{"_index":867,"title":{},"body":{"index.html":{}}}],["key",{"_index":253,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"miscellaneous/variables.html":{}}}],["koncern",{"_index":844,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":654,"title":{},"body":{"interfaces/Register.html":{},"classes/RegisterDto.html":{},"miscellaneous/variables.html":{}}}],["lastvaluefrom",{"_index":728,"title":{},"body":{"injectables/RegisterService.html":{}}}],["likes",{"_index":474,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["listallusers",{"_index":289,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["localhost:3000/productclasses",{"_index":422,"title":{},"body":{"controllers/ProductController.html":{}}}],["logged",{"_index":314,"title":{},"body":{"controllers/LoginController.html":{}}}],["login",{"_index":282,"title":{"interfaces/Login.html":{}},"body":{"interfaces/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["login(@body",{"_index":307,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(logininfo",{"_index":297,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.controller",{"_index":330,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.service",{"_index":302,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login/login.controller",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.module",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["login/login.service",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["logincontroller",{"_index":221,"title":{"controllers/LoginController.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["logindto",{"_index":298,"title":{"classes/LoginDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["logininfo",{"_index":300,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logininfo.password",{"_index":310,"title":{},"body":{"controllers/LoginController.html":{}}}],["logininfo.username",{"_index":309,"title":{},"body":{"controllers/LoginController.html":{}}}],["loginmodel",{"_index":338,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodule",{"_index":215,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginschema",{"_index":331,"title":{},"body":{"modules/LoginModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginservice",{"_index":223,"title":{"injectables/LoginService.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["logisticdata",{"_index":475,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["logisticsdata",{"_index":359,"title":{"classes/LogisticsData.html":{}},"body":{"classes/LogisticsData.html":{},"classes/Products.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["logisticsdata.interface",{"_index":501,"title":{},"body":{"classes/Products.html":{}}}],["logisticsdata.interface.dto",{"_index":583,"title":{},"body":{"classes/ProductsDto.html":{}}}],["logisticsdatadto",{"_index":365,"title":{"classes/LogisticsDataDto.html":{}},"body":{"classes/LogisticsDataDto.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["logisticsdataschema",{"_index":597,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":23,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":30,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["miscellaneous",{"_index":837,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":156,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["module",{"_index":127,"title":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["modules",{"_index":129,"title":{"modules.html":{}},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":857,"title":{},"body":{"index.html":{}}}],["mongoose",{"_index":177,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":140,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":146,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["mongoosemodule.forroot(config.mongodburi",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":47,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["nestjs",{"_index":856,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":80,"title":{},"body":{"controllers/AdminController.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":814,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":141,"title":{},"body":{"modules/AdminModule.html":{},"injectables/AdminService.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":816,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["new",{"_index":182,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newloginuser",{"_index":350,"title":{},"body":{"injectables/LoginService.html":{}}}],["newloginuser.save",{"_index":352,"title":{},"body":{"injectables/LoginService.html":{}}}],["newpasshashed",{"_index":758,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newpassword",{"_index":772,"title":{},"body":{"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{}}}],["newproduct",{"_index":454,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["newproduct.save",{"_index":456,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["newuser",{"_index":741,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newuser.save",{"_index":743,"title":{},"body":{"injectables/RegisterService.html":{}}}],["newusername",{"_index":776,"title":{},"body":{"interfaces/UpdateUsernameDto.html":{}}}],["newvisitor",{"_index":181,"title":{},"body":{"injectables/AdminService.html":{}}}],["newvisitor.save",{"_index":184,"title":{},"body":{"injectables/AdminService.html":{}}}],["nickaname",{"_index":169,"title":{},"body":{"injectables/AdminService.html":{}}}],["note",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["notfoundexception",{"_index":176,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["notfoundexception('comment",{"_index":195,"title":{},"body":{"injectables/AdminService.html":{}}}],["notfoundexception(`product",{"_index":640,"title":{},"body":{"injectables/ProductsService.html":{}}}],["npx",{"_index":861,"title":{},"body":{"index.html":{}}}],["number",{"_index":363,"title":{},"body":{"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["objectid",{"_index":725,"title":{},"body":{"injectables/RegisterService.html":{}}}],["objects",{"_index":192,"title":{},"body":{"injectables/AdminService.html":{},"injectables/ProductsService.html":{}}}],["observable",{"_index":726,"title":{},"body":{"injectables/RegisterService.html":{}}}],["one",{"_index":354,"title":{},"body":{"injectables/LoginService.html":{}}}],["optional",{"_index":9,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/CustomAttributes.html":{},"classes/ForeignNames.html":{},"classes/Images.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{}}}],["out",{"_index":136,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["overview",{"_index":872,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":863,"title":{},"body":{"index.html":{}}}],["package",{"_index":812,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":76,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["param('id",{"_index":427,"title":{},"body":{"controllers/ProductController.html":{},"controllers/RegisterController.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["passhashed",{"_index":736,"title":{},"body":{"injectables/RegisterService.html":{}}}],["password",{"_index":284,"title":{},"body":{"interfaces/Login.html":{},"classes/LoginDto.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/variables.html":{}}}],["passwordsequal",{"_index":747,"title":{},"body":{"injectables/RegisterService.html":{}}}],["patch",{"_index":77,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["patch(':id",{"_index":412,"title":{},"body":{"controllers/ProductController.html":{}}}],["patch('aprove/:id",{"_index":43,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('update/:id",{"_index":68,"title":{},"body":{"controllers/AdminController.html":{}}}],["patch('updatepassword/:id",{"_index":674,"title":{},"body":{"controllers/RegisterController.html":{}}}],["patch('updateusername/:id",{"_index":678,"title":{},"body":{"controllers/RegisterController.html":{}}}],["post",{"_index":78,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["post('addcomment",{"_index":71,"title":{},"body":{"controllers/AdminController.html":{}}}],["post('addproductclasslist",{"_index":399,"title":{},"body":{"controllers/ProductController.html":{}}}],["post('createproducts",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('findbyname",{"_index":406,"title":{},"body":{"controllers/ProductController.html":{}}}],["postman",{"_index":860,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":29,"title":{},"body":{"controllers/AdminController.html":{},"controllers/LoginController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["private",{"_index":180,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["product",{"_index":370,"title":{"interfaces/Product.html":{}},"body":{"interfaces/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"index.html":{}}}],["product.controller",{"_index":437,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.service",{"_index":415,"title":{},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{}}}],["product/product.module",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["productclass",{"_index":373,"title":{"classes/ProductClass.html":{}},"body":{"classes/ProductClass.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productclass.interface",{"_index":498,"title":{},"body":{"classes/Products.html":{}}}],["productclassdto",{"_index":377,"title":{"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{}},"body":{"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/ProductsDto.html":{},"coverage.html":{}}}],["productclasses",{"_index":388,"title":{},"body":{"controllers/ProductController.html":{}}}],["productclasslist",{"_index":401,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["productclassschema",{"_index":599,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productcode",{"_index":15,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["productcontroller",{"_index":386,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productexist",{"_index":606,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productexist(id",{"_index":616,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productgroupname",{"_index":383,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["productmodel",{"_index":443,"title":{},"body":{"injectables/ProductService.html":{}}}],["productmodule",{"_index":216,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productname",{"_index":560,"title":{},"body":{"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["productnane",{"_index":476,"title":{},"body":{"classes/Products.html":{}}}],["products",{"_index":462,"title":{"classes/Products.html":{}},"body":{"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["products.controller",{"_index":590,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.interface",{"_index":506,"title":{},"body":{"classes/ProductsArray.html":{}}}],["products.interface.dto",{"_index":516,"title":{},"body":{"classes/ProductsArrayDto.html":{}}}],["products.push(newproduct.save",{"_index":465,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["products.service",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["products/products.module",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["productsarray",{"_index":503,"title":{"classes/ProductsArray.html":{}},"body":{"classes/ProductsArray.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["productsarraydto",{"_index":507,"title":{"classes/ProductsArrayDto.html":{}},"body":{"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productschema",{"_index":438,"title":{},"body":{"modules/ProductModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productscontroller",{"_index":518,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsdto",{"_index":509,"title":{"classes/ProductsDto.html":{}},"body":{"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"coverage.html":{}}}],["productservice",{"_index":414,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["productsmodel",{"_index":609,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsmodule",{"_index":217,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsschema",{"_index":601,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["productsservice",{"_index":540,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["promise",{"_index":57,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["promise.all(products",{"_index":467,"title":{},"body":{"injectables/ProductService.html":{},"injectables/ProductsService.html":{}}}],["promise.all(promises",{"_index":190,"title":{},"body":{"injectables/AdminService.html":{}}}],["promises",{"_index":188,"title":{},"body":{"injectables/AdminService.html":{}}}],["prompt",{"_index":254,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"classes/LoginDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"interfaces/Register.html":{},"classes/RegisterDto.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["providers",{"_index":138,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["put",{"_index":538,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/RegisterService.html":{}}}],["put(':id",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query",{"_index":79,"title":{},"body":{"controllers/AdminController.html":{}}}],["readonly",{"_index":89,"title":{},"body":{"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/ProductClassDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["reflect",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":649,"title":{"interfaces/Register.html":{}},"body":{"interfaces/Register.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["register.controller",{"_index":707,"title":{},"body":{"modules/RegisterModule.html":{}}}],["register.service",{"_index":684,"title":{},"body":{"controllers/RegisterController.html":{},"modules/RegisterModule.html":{}}}],["register/register.module",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["registercontroller",{"_index":655,"title":{"controllers/RegisterController.html":{}},"body":{"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"coverage.html":{}}}],["registerdto",{"_index":669,"title":{"classes/RegisterDto.html":{}},"body":{"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"coverage.html":{}}}],["registered",{"_index":689,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["registerlogs",{"_index":711,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registerlogs(userdata",{"_index":718,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registermodel",{"_index":715,"title":{},"body":{"injectables/RegisterService.html":{}}}],["registermodule",{"_index":218,"title":{"modules/RegisterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/RegisterModule.html":{},"modules.html":{},"overview.html":{}}}],["registerschema",{"_index":708,"title":{},"body":{"modules/RegisterModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registerservice",{"_index":304,"title":{"injectables/RegisterService.html":{}},"body":{"controllers/LoginController.html":{},"controllers/RegisterController.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"coverage.html":{},"overview.html":{}}}],["registeruser",{"_index":659,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["registeruser(@body",{"_index":686,"title":{},"body":{"controllers/RegisterController.html":{}}}],["registeruser(userdata",{"_index":668,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["removecomment",{"_index":153,"title":{},"body":{"injectables/AdminService.html":{}}}],["removecomment(id",{"_index":171,"title":{},"body":{"injectables/AdminService.html":{}}}],["removed",{"_index":117,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{}}}],["removeproduct",{"_index":394,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["removeproduct(@param('id",{"_index":430,"title":{},"body":{"controllers/ProductController.html":{}}}],["removeproduct(id",{"_index":408,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["require('bcrypt",{"_index":732,"title":{},"body":{"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["reset",{"_index":135,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}],["result",{"_index":22,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":24,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":96,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["rimraf",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":847,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":729,"title":{},"body":{"injectables/RegisterService.html":{},"dependencies.html":{}}}],["saltrounds",{"_index":733,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sauthor",{"_index":865,"title":{},"body":{"index.html":{}}}],["schema",{"_index":147,"title":{},"body":{"modules/AdminModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{}}}],["schemas/admin.schema",{"_index":144,"title":{},"body":{"modules/AdminModule.html":{}}}],["schemas/customattributes.schema",{"_index":592,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/foreignnames.schema",{"_index":594,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/images.schema",{"_index":596,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/login.schema",{"_index":332,"title":{},"body":{"modules/LoginModule.html":{}}}],["schemas/logisticsdata.schema",{"_index":598,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/product.schema",{"_index":439,"title":{},"body":{"modules/ProductModule.html":{}}}],["schemas/productclass.schema",{"_index":600,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/products.schema",{"_index":602,"title":{},"body":{"modules/ProductsModule.html":{}}}],["schemas/register.schema",{"_index":709,"title":{},"body":{"modules/RegisterModule.html":{}}}],["schemas/thumbnail.schema",{"_index":604,"title":{},"body":{"modules/ProductsModule.html":{}}}],["set",{"_index":187,"title":{},"body":{"injectables/AdminService.html":{},"injectables/RegisterService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"modules/AdminModule.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"modules/RegisterModule.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{}}}],["src/.../admin.schema.ts",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../customattributes.schema.ts",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../foreignnames.schema.ts",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../images.schema.ts",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../login.schema.ts",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logisticsdata.schema.ts",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":839,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../product.schema.ts",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../productclass.schema.ts",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../products.schema.ts",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.schema.ts",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../register.service.ts",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../thumbnail.schema.ts",{"_index":887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/admin/admin.controller.ts",{"_index":28,"title":{},"body":{"controllers/AdminController.html":{},"coverage.html":{}}}],["src/admin/admin.controller.ts:12",{"_index":72,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:19",{"_index":60,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:27",{"_index":56,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:34",{"_index":64,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:41",{"_index":69,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:48",{"_index":45,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.controller.ts:55",{"_index":53,"title":{},"body":{"controllers/AdminController.html":{}}}],["src/admin/admin.module.ts",{"_index":137,"title":{},"body":{"modules/AdminModule.html":{}}}],["src/admin/admin.service.ts",{"_index":150,"title":{},"body":{"injectables/AdminService.html":{},"coverage.html":{}}}],["src/admin/admin.service.ts:14",{"_index":175,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:19",{"_index":166,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:23",{"_index":168,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:27",{"_index":163,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:34",{"_index":170,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:39",{"_index":174,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:43",{"_index":172,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:47",{"_index":165,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:53",{"_index":161,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/admin.service.ts:9",{"_index":157,"title":{},"body":{"injectables/AdminService.html":{}}}],["src/admin/dto/admin.interface.dto.ts",{"_index":119,"title":{},"body":{"classes/AdminDto.html":{},"coverage.html":{}}}],["src/admin/dto/admin.interface.dto.ts:2",{"_index":124,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:3",{"_index":125,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:4",{"_index":123,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:5",{"_index":122,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:6",{"_index":126,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:7",{"_index":120,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/admin.interface.dto.ts:8",{"_index":121,"title":{},"body":{"classes/AdminDto.html":{}}}],["src/admin/dto/aprove.interface.dto.ts",{"_index":249,"title":{},"body":{"classes/AproveDto.html":{},"coverage.html":{}}}],["src/admin/dto/aprove.interface.dto.ts:2",{"_index":250,"title":{},"body":{"classes/AproveDto.html":{}}}],["src/admin/interfaces/admin.interface.ts",{"_index":6,"title":{},"body":{"interfaces/Admin.html":{},"coverage.html":{}}}],["src/admin/schemas/admin.schema.ts",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":205,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":207,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":245,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":246,"title":{},"body":{"injectables/AppService.html":{}}}],["src/login/dto/login.interface.dto.ts",{"_index":321,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/login/dto/login.interface.dto.ts:2",{"_index":323,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/dto/login.interface.dto.ts:3",{"_index":322,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/login/interfaces/login.interface.ts",{"_index":283,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/login/login.controller.ts",{"_index":286,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/login/login.controller.ts:13",{"_index":299,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:26",{"_index":292,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:31",{"_index":295,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:37",{"_index":296,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.module.ts",{"_index":328,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/login/login.service.ts",{"_index":333,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/login/login.service.ts:13",{"_index":343,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:18",{"_index":341,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:23",{"_index":340,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:27",{"_index":345,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:39",{"_index":342,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:8",{"_index":337,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/schemas/login.schema.ts",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/product/dto/product.interface.dto",{"_index":580,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/product/dto/product.interface.dto.ts",{"_index":378,"title":{},"body":{"classes/ProductClassDto.html":{},"coverage.html":{}}}],["src/product/dto/product.interface.dto.ts:2",{"_index":379,"title":{},"body":{"classes/ProductClassDto.html":{}}}],["src/product/dto/product.interface.dto.ts:3",{"_index":380,"title":{},"body":{"classes/ProductClassDto.html":{}}}],["src/product/interfaces/product.interface.ts",{"_index":371,"title":{},"body":{"interfaces/Product.html":{},"coverage.html":{}}}],["src/product/product.controller.ts",{"_index":387,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:12",{"_index":397,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:19",{"_index":402,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:25",{"_index":404,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:30",{"_index":407,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:37",{"_index":413,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:46",{"_index":410,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:52",{"_index":400,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module",{"_index":589,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/product/product.module.ts",{"_index":436,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service",{"_index":624,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/product/product.service.ts",{"_index":440,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:13",{"_index":445,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:20",{"_index":447,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:24",{"_index":448,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:28",{"_index":450,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:32",{"_index":452,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:40",{"_index":451,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:46",{"_index":444,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:51",{"_index":446,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:8",{"_index":442,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/schemas/product.schema.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/dto/customattributes.interface.dto.ts",{"_index":260,"title":{},"body":{"classes/CustomAttributesDto.html":{},"coverage.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:2",{"_index":261,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:3",{"_index":262,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/customattributes.interface.dto.ts:4",{"_index":263,"title":{},"body":{"classes/CustomAttributesDto.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts",{"_index":270,"title":{},"body":{"classes/ForeignNamesDto.html":{},"coverage.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts:2",{"_index":271,"title":{},"body":{"classes/ForeignNamesDto.html":{}}}],["src/products/dto/foreignnames.interface.dto.ts:3",{"_index":272,"title":{},"body":{"classes/ForeignNamesDto.html":{}}}],["src/products/dto/images.interface.dto.ts",{"_index":279,"title":{},"body":{"classes/ImagesDto.html":{},"coverage.html":{}}}],["src/products/dto/images.interface.dto.ts:2",{"_index":280,"title":{},"body":{"classes/ImagesDto.html":{}}}],["src/products/dto/images.interface.dto.ts:3",{"_index":281,"title":{},"body":{"classes/ImagesDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts",{"_index":366,"title":{},"body":{"classes/LogisticsDataDto.html":{},"coverage.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:2",{"_index":367,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:3",{"_index":368,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/logisticsdata.interface.dto.ts:4",{"_index":369,"title":{},"body":{"classes/LogisticsDataDto.html":{}}}],["src/products/dto/productclass.interface.dto.ts",{"_index":382,"title":{},"body":{"classes/ProductClassDto-1.html":{},"coverage.html":{}}}],["src/products/dto/productclass.interface.dto.ts:2",{"_index":384,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["src/products/dto/productclass.interface.dto.ts:3",{"_index":385,"title":{},"body":{"classes/ProductClassDto-1.html":{}}}],["src/products/dto/products.array.interface.dto.ts",{"_index":508,"title":{},"body":{"classes/ProductsArrayDto.html":{},"coverage.html":{}}}],["src/products/dto/products.array.interface.dto.ts:9",{"_index":512,"title":{},"body":{"classes/ProductsArrayDto.html":{}}}],["src/products/dto/products.interface.dto.ts",{"_index":559,"title":{},"body":{"classes/ProductsDto.html":{},"coverage.html":{}}}],["src/products/dto/products.interface.dto.ts:12",{"_index":567,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:13",{"_index":572,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:14",{"_index":573,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:18",{"_index":566,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:20",{"_index":571,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:21",{"_index":561,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:25",{"_index":577,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:29",{"_index":568,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:31",{"_index":578,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:32",{"_index":564,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:33",{"_index":565,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:37",{"_index":570,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:39",{"_index":574,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:43",{"_index":562,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:45",{"_index":569,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/products.interface.dto.ts:46",{"_index":563,"title":{},"body":{"classes/ProductsDto.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts",{"_index":768,"title":{},"body":{"classes/ThumbnailDto.html":{},"coverage.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts:2",{"_index":769,"title":{},"body":{"classes/ThumbnailDto.html":{}}}],["src/products/dto/thumbnail.interface.dto.ts:3",{"_index":770,"title":{},"body":{"classes/ThumbnailDto.html":{}}}],["src/products/interfaces/customattributes.interface.ts",{"_index":252,"title":{},"body":{"classes/CustomAttributes.html":{},"coverage.html":{}}}],["src/products/interfaces/customattributes.interface.ts:2",{"_index":256,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/customattributes.interface.ts:3",{"_index":257,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/customattributes.interface.ts:4",{"_index":258,"title":{},"body":{"classes/CustomAttributes.html":{}}}],["src/products/interfaces/foreignnames.interface.ts",{"_index":265,"title":{},"body":{"classes/ForeignNames.html":{},"coverage.html":{}}}],["src/products/interfaces/foreignnames.interface.ts:2",{"_index":267,"title":{},"body":{"classes/ForeignNames.html":{}}}],["src/products/interfaces/foreignnames.interface.ts:3",{"_index":268,"title":{},"body":{"classes/ForeignNames.html":{}}}],["src/products/interfaces/images.interface.ts",{"_index":274,"title":{},"body":{"classes/Images.html":{},"coverage.html":{}}}],["src/products/interfaces/images.interface.ts:2",{"_index":276,"title":{},"body":{"classes/Images.html":{}}}],["src/products/interfaces/images.interface.ts:3",{"_index":277,"title":{},"body":{"classes/Images.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts",{"_index":360,"title":{},"body":{"classes/LogisticsData.html":{},"coverage.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:2",{"_index":361,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:3",{"_index":362,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/logisticsdata.interface.ts:4",{"_index":364,"title":{},"body":{"classes/LogisticsData.html":{}}}],["src/products/interfaces/productclass.interface.ts",{"_index":374,"title":{},"body":{"classes/ProductClass.html":{},"coverage.html":{}}}],["src/products/interfaces/productclass.interface.ts:2",{"_index":375,"title":{},"body":{"classes/ProductClass.html":{}}}],["src/products/interfaces/productclass.interface.ts:3",{"_index":376,"title":{},"body":{"classes/ProductClass.html":{}}}],["src/products/interfaces/products.interface.ts",{"_index":468,"title":{},"body":{"classes/Products.html":{},"coverage.html":{}}}],["src/products/interfaces/products.interface.ts:10",{"_index":487,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:11",{"_index":492,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:12",{"_index":493,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:13",{"_index":486,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:14",{"_index":491,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:15",{"_index":481,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:16",{"_index":495,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:17",{"_index":488,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:18",{"_index":496,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:19",{"_index":484,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:20",{"_index":485,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:21",{"_index":490,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:22",{"_index":494,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:23",{"_index":482,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:24",{"_index":489,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:25",{"_index":483,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/products.interface.ts:9",{"_index":480,"title":{},"body":{"classes/Products.html":{}}}],["src/products/interfaces/productsarray.interface.ts",{"_index":504,"title":{},"body":{"classes/ProductsArray.html":{},"coverage.html":{}}}],["src/products/interfaces/productsarray.interface.ts:5",{"_index":505,"title":{},"body":{"classes/ProductsArray.html":{}}}],["src/products/interfaces/thumbnail.interface.ts",{"_index":765,"title":{},"body":{"classes/Thumbnail.html":{},"coverage.html":{}}}],["src/products/interfaces/thumbnail.interface.ts:2",{"_index":766,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/products/interfaces/thumbnail.interface.ts:3",{"_index":767,"title":{},"body":{"classes/Thumbnail.html":{}}}],["src/products/products.controller.ts",{"_index":519,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/products/products.controller.ts:13",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:18",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:23",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:28",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:33",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.controller.ts:40",{"_index":532,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/products/products.module.ts",{"_index":588,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/products/products.service.ts",{"_index":605,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/products/products.service.ts:11",{"_index":608,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:16",{"_index":611,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:24",{"_index":619,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:39",{"_index":612,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:50",{"_index":615,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:56",{"_index":614,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:60",{"_index":623,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:65",{"_index":610,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/products.service.ts:72",{"_index":613,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/products/schemas/customattributes.schema.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/foreignnames.schema.ts",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/images.schema.ts",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/logisticsdata.schema.ts",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/productclass.schema.ts",{"_index":804,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/products.schema.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/products/schemas/thumbnail.schema.ts",{"_index":806,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/register/dto/register.interface.dto.ts",{"_index":696,"title":{},"body":{"classes/RegisterDto.html":{},"coverage.html":{}}}],["src/register/dto/register.interface.dto.ts:2",{"_index":699,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:3",{"_index":700,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:4",{"_index":697,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:5",{"_index":702,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:6",{"_index":701,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/register.interface.dto.ts:7",{"_index":698,"title":{},"body":{"classes/RegisterDto.html":{}}}],["src/register/dto/update.password.interface.dto.ts",{"_index":773,"title":{},"body":{"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["src/register/dto/update.password.interface.dto.ts:2",{"_index":774,"title":{},"body":{"classes/UpdatePasswordDto.html":{}}}],["src/register/dto/update.username.interface.dto.ts",{"_index":775,"title":{},"body":{"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["src/register/interfaces/register.interface.ts",{"_index":650,"title":{},"body":{"interfaces/Register.html":{},"coverage.html":{}}}],["src/register/interfaces/update.password.interface.ts",{"_index":771,"title":{},"body":{"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["src/register/register.controller.ts",{"_index":656,"title":{},"body":{"controllers/RegisterController.html":{},"coverage.html":{}}}],["src/register/register.controller.ts:14",{"_index":670,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:21",{"_index":667,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:26",{"_index":663,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:31",{"_index":675,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.controller.ts:40",{"_index":679,"title":{},"body":{"controllers/RegisterController.html":{}}}],["src/register/register.module",{"_index":329,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/register/register.module.ts",{"_index":706,"title":{},"body":{"modules/RegisterModule.html":{}}}],["src/register/register.service",{"_index":305,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/register/register.service.ts",{"_index":710,"title":{},"body":{"injectables/RegisterService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/register/register.service.ts:15",{"_index":714,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:20",{"_index":720,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:38",{"_index":719,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:45",{"_index":717,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:58",{"_index":724,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:69",{"_index":716,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:73",{"_index":721,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/register.service.ts:92",{"_index":722,"title":{},"body":{"injectables/RegisterService.html":{}}}],["src/register/schemas/register.schema.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":841,"title":{"index.html":{}},"body":{}}],["statements",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":17,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"miscellaneous/variables.html":{}}}],["sudo",{"_index":850,"title":{},"body":{"index.html":{}}}],["support",{"_index":869,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":870,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":727,"title":{},"body":{"injectables/RegisterService.html":{}}}],["table",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":477,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["this.addlogs(inputdata.id",{"_index":631,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.addlogs(newproduct.id",{"_index":466,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.addlogs(product.id",{"_index":644,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.adminmodel(visitordata",{"_index":183,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.find",{"_index":189,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findone",{"_index":185,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findoneandremove",{"_index":193,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminmodel.findoneandupdate",{"_index":186,"title":{},"body":{"injectables/AdminService.html":{}}}],["this.adminservice.addlogs(commentid",{"_index":108,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.addlogs(input.id",{"_index":116,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.addlogs(visitordata.id",{"_index":94,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.aprovecomment(commentid",{"_index":111,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.commentexist(result",{"_index":101,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentbyid(id",{"_index":103,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentbynickname(inputnick.nickname",{"_index":100,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.findcommentsbydate(datecomment",{"_index":105,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.removecomment(input.id",{"_index":115,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.updatecomment(commentid",{"_index":107,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.adminservice.visitorreview(visitordata",{"_index":93,"title":{},"body":{"controllers/AdminController.html":{}}}],["this.appservice.gethello",{"_index":210,"title":{},"body":{"controllers/AppController.html":{}}}],["this.isregistered(username",{"_index":746,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.loginmodel(logininfo",{"_index":351,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.find",{"_index":358,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.findbyid(id",{"_index":355,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.findone",{"_index":356,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginservice.findbyusername(username",{"_index":319,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.finduser(id",{"_index":316,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.listallusers",{"_index":320,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.login(logininfo",{"_index":311,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.userexist(username",{"_index":318,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.productexist(id",{"_index":645,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productexist(inputdata.id",{"_index":626,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productexist(product.id",{"_index":642,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productmodel(current_product",{"_index":464,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel(product",{"_index":455,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.find",{"_index":457,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findone",{"_index":458,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findoneandremove",{"_index":460,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productmodel.findoneandupdate",{"_index":459,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.productservice.addlogs(id",{"_index":429,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addlogs(product.id",{"_index":421,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addproduct(product",{"_index":420,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.addproductclasslist",{"_index":432,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.allproductclasses",{"_index":423,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductbyid(id",{"_index":425,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findproductbyname(product.title",{"_index":426,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.removeproduct(id",{"_index":431,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.updateproduct(id",{"_index":428,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productsmodel(inputdata",{"_index":630,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel(product",{"_index":643,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.find",{"_index":646,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findone",{"_index":634,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findoneandremove({id",{"_index":648,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsmodel.findoneandupdate({id",{"_index":647,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.productsservice.addlogs(id",{"_index":555,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.createproduct(inputdata",{"_index":547,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.createproducts(inputdata",{"_index":549,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.deleteproduct(id",{"_index":557,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getallproducts",{"_index":552,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.getproduct(id",{"_index":551,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.updateproduct(id",{"_index":554,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.registermodel(userdata",{"_index":742,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findbyid(id)).toobject",{"_index":753,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findone",{"_index":739,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findoneandremove",{"_index":752,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registermodel.findoneandupdate",{"_index":760,"title":{},"body":{"injectables/RegisterService.html":{}}}],["this.registerservice.deleteuser(id",{"_index":693,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.isregistered(username",{"_index":691,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.registerlogs(result",{"_index":688,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.registeruser(userdata",{"_index":687,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.updatepassword(id",{"_index":694,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.updateusername(id",{"_index":695,"title":{},"body":{"controllers/RegisterController.html":{}}}],["this.registerservice.validatelogin",{"_index":308,"title":{},"body":{"controllers/LoginController.html":{}}}],["throw",{"_index":194,"title":{},"body":{"injectables/AdminService.html":{},"injectables/LoginService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["thumbnail",{"_index":478,"title":{"classes/Thumbnail.html":{}},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"modules/ProductsModule.html":{},"classes/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["thumbnail.interface",{"_index":499,"title":{},"body":{"classes/Products.html":{}}}],["thumbnail.interface.dto",{"_index":581,"title":{},"body":{"classes/ProductsDto.html":{}}}],["thumbnaildto",{"_index":575,"title":{"classes/ThumbnailDto.html":{}},"body":{"classes/ProductsDto.html":{},"classes/ThumbnailDto.html":{},"coverage.html":{}}}],["thumbnailschema",{"_index":603,"title":{},"body":{"modules/ProductsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timezone",{"_index":201,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["title",{"_index":372,"title":{},"body":{"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"injectables/ProductService.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":513,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"dependencies.html":{}}}],["true",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{}}}],["true})@type(undefined",{"_index":511,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["tsconfig.json",{"_index":864,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"interfaces/Admin.html":{},"controllers/AdminController.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"classes/AproveDto.html":{},"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/ForeignNames.html":{},"classes/ForeignNamesDto.html":{},"classes/Images.html":{},"classes/ImagesDto.html":{},"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"interfaces/Product.html":{},"classes/ProductClass.html":{},"classes/ProductClassDto.html":{},"classes/ProductClassDto-1.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/Products.html":{},"classes/ProductsArray.html":{},"classes/ProductsArrayDto.html":{},"controllers/ProductsController.html":{},"classes/ProductsDto.html":{},"injectables/ProductsService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"classes/Thumbnail.html":{},"classes/ThumbnailDto.html":{},"interfaces/UpdatePassword.html":{},"classes/UpdatePasswordDto.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["typeormmodule",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["types/bcryptjs",{"_index":819,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":855,"title":{},"body":{"index.html":{}}}],["unit",{"_index":479,"title":{},"body":{"classes/Products.html":{},"classes/ProductsDto.html":{},"miscellaneous/variables.html":{}}}],["unknown",{"_index":50,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["updatecomment",{"_index":37,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["updatecomment(@param('id",{"_index":106,"title":{},"body":{"controllers/AdminController.html":{}}}],["updatecomment(commentid",{"_index":66,"title":{},"body":{"controllers/AdminController.html":{}}}],["updatecomment(id",{"_index":173,"title":{},"body":{"injectables/AdminService.html":{}}}],["updated",{"_index":109,"title":{},"body":{"controllers/AdminController.html":{},"controllers/ProductController.html":{},"controllers/ProductsController.html":{},"controllers/RegisterController.html":{}}}],["updatedata",{"_index":622,"title":{},"body":{"injectables/ProductsService.html":{},"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updatedata.newpassword",{"_index":755,"title":{},"body":{"injectables/RegisterService.html":{}}}],["updatedata.newusername",{"_index":762,"title":{},"body":{"injectables/RegisterService.html":{}}}],["updateorfind",{"_index":618,"title":{},"body":{"injectables/ProductsService.html":{}}}],["updatepassword",{"_index":660,"title":{"interfaces/UpdatePassword.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"interfaces/UpdatePassword.html":{},"coverage.html":{}}}],["updatepassword(id",{"_index":672,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updatepassworddto",{"_index":673,"title":{"classes/UpdatePasswordDto.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"classes/UpdatePasswordDto.html":{},"coverage.html":{}}}],["updateproduct",{"_index":395,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateproduct(@param('id",{"_index":553,"title":{},"body":{"controllers/ProductsController.html":{}}}],["updateproduct(id",{"_index":411,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["updateusername",{"_index":661,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updateusername(id",{"_index":676,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["updateusernamedto",{"_index":677,"title":{"interfaces/UpdateUsernameDto.html":{}},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{},"interfaces/UpdateUsernameDto.html":{},"coverage.html":{}}}],["uptools",{"_index":852,"title":{},"body":{"index.html":{}}}],["usecreateindex",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":853,"title":{},"body":{"index.html":{}}}],["usenewurlparser",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":313,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/RegisterService.html":{}}}],["user).username",{"_index":750,"title":{},"body":{"injectables/RegisterService.html":{}}}],["user.password",{"_index":749,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userbyusername",{"_index":357,"title":{},"body":{"injectables/LoginService.html":{}}}],["userdata",{"_index":671,"title":{},"body":{"controllers/RegisterController.html":{},"injectables/RegisterService.html":{}}}],["userdata._id",{"_index":744,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userdata.password",{"_index":756,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userdata.username",{"_index":740,"title":{},"body":{"injectables/RegisterService.html":{}}}],["userexist",{"_index":335,"title":{},"body":{"injectables/LoginService.html":{}}}],["userexist(username",{"_index":344,"title":{},"body":{"injectables/LoginService.html":{}}}],["username",{"_index":285,"title":{},"body":{"interfaces/Login.html":{},"controllers/LoginController.html":{},"classes/LoginDto.html":{},"injectables/LoginService.html":{},"interfaces/Register.html":{},"controllers/RegisterController.html":{},"classes/RegisterDto.html":{},"injectables/RegisterService.html":{},"miscellaneous/variables.html":{}}}],["useunifiedtopology",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["valid",{"_index":751,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatelogin",{"_index":712,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatelogin(username",{"_index":723,"title":{},"body":{"injectables/RegisterService.html":{}}}],["validatenested",{"_index":514,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["validatenested()@type(undefined",{"_index":576,"title":{},"body":{"classes/ProductsDto.html":{}}}],["validatenested({each",{"_index":510,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{}}}],["validator",{"_index":515,"title":{},"body":{"classes/ProductsArrayDto.html":{},"classes/ProductsDto.html":{},"dependencies.html":{}}}],["value",{"_index":255,"title":{},"body":{"classes/CustomAttributes.html":{},"classes/CustomAttributesDto.html":{},"classes/LogisticsData.html":{},"classes/LogisticsDataDto.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":197,"title":{},"body":{"injectables/AdminService.html":{},"controllers/LoginController.html":{},"injectables/ProductService.html":{},"injectables/ProductsService.html":{},"injectables/RegisterService.html":{}}}],["variable",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":875,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visitordata",{"_index":73,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["visitornick",{"_index":16,"title":{},"body":{"interfaces/Admin.html":{},"classes/AdminDto.html":{},"injectables/AdminService.html":{},"miscellaneous/variables.html":{}}}],["visitorreview",{"_index":38,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["visitorreview(@body",{"_index":90,"title":{},"body":{"controllers/AdminController.html":{}}}],["visitorreview(visitordata",{"_index":70,"title":{},"body":{"controllers/AdminController.html":{},"injectables/AdminService.html":{}}}],["void",{"_index":664,"title":{},"body":{"controllers/RegisterController.html":{}}}],["want",{"_index":635,"title":{},"body":{"injectables/ProductsService.html":{}}}],["world",{"_index":248,"title":{},"body":{"injectables/AppService.html":{}}}],["yargs",{"_index":730,"title":{},"body":{"injectables/RegisterService.html":{}}}],["zoom",{"_index":134,"title":{},"body":{"modules/AdminModule.html":{},"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/ProductModule.html":{},"modules/ProductsModule.html":{},"modules/RegisterModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Admin.html":{"url":"interfaces/Admin.html","title":"interface - Admin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Admin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/interfaces/admin.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anyContactData\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            aproved\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            comment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateAdded\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            productCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            visitorNick\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anyContactData\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anyContactData:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        aproved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        aproved:         Boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        comment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        comment:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateAdded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateAdded:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        productCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        productCode:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        visitorNick\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        visitorNick:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Admin {\n    id?: String;\n    productCode?: String;\n    dateAdded?: String;\n    comment?: String;\n    visitorNick?: String;\n    anyContactData?: String;\n    aproved?: Boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AdminController.html":{"url":"controllers/AdminController.html","title":"controller - AdminController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AdminController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                admin\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                aproveComment\n                            \n                            \n                                    Async\n                                deleteComment\n                            \n                            \n                                    Async\n                                findCommentById\n                            \n                            \n                                    Async\n                                findCommentByNickname\n                            \n                            \n                                    Async\n                                findCommentsByDate\n                            \n                            \n                                    Async\n                                updateComment\n                            \n                            \n                                    Async\n                                visitorReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        aproveComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    aproveComment(commentId: string, input: AproveDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('aprove/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                AproveDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteComment(input)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete()\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterById/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentByNickname\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentByNickname(inputNick)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterByNickname')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputNick\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentsByDate(dateComment: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('filterByDate/:dateComment')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateComment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComment(commentId: string, input: AdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('update/:id')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    input\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        visitorReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    visitorReview(visitorData: AdminDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addComment')\n                \n            \n\n            \n                \n                    Defined in src/admin/admin.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visitorData\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Query } from '@nestjs/common';\nimport { AdminService } from './admin.service';\nimport { AdminDto } from './dto/admin.interface.dto';\nimport { Admin } from './interfaces/admin.interface';\nimport { AproveDto } from './dto/aprove.interface.dto';\n\n@Controller('admin')\nexport class AdminController {\n    constructor(private readonly adminService: AdminService) {}\n\n    @Post('addComment')\n    async visitorReview(@Body() visitorData: AdminDto): Promise {\n        const result = await this.adminService.visitorReview(visitorData);\n        await this.adminService.addLogs(visitorData.id, 'added');\n        return await result;\n    }\n\n    @Get('filterByNickname')\n    async findCommentByNickname(@Query() inputNick): Promise {\n        // should be called like this: http://localhost:3000/admin/filterByNickName?nickname=visitorNick\n        const result = await this.adminService.findCommentByNickname(inputNick.nickname);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Get('filterById/:id')\n    async findCommentById(@Param('id') id: string): Promise {\n        const result = await this.adminService.findCommentById(id);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Get('filterByDate/:dateComment')\n    async findCommentsByDate(@Param('dateComment') dateComment: string): Promise {\n        const result = await this.adminService.findCommentsByDate(dateComment);\n        await this.adminService.commentExist(result);\n        return await result;\n    }\n\n    @Patch('update/:id')\n    async updateComment(@Param('id') commentId: string, @Body() input: AdminDto): Promise {\n        const result = await this.adminService.updateComment(commentId, input);\n        await this.adminService.addLogs(commentId, 'updated');\n        return await result;\n        \n    }\n    @Patch('aprove/:id')\n    async aproveComment(@Param('id') commentId: string, @Body() input: AproveDto) {\n        const result = await this.adminService.aproveComment(commentId, input.aprove);\n        await this.adminService.addLogs(commentId, 'aproved');\n        return await result;\n    }\n\n    @Delete()\n    async deleteComment(@Query() input) {\n        // http://localhost:3000/admin?id=ID\n        await this.adminService.removeComment(input.id);\n        await this.adminService.addLogs(input.id, 'removed');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AdminDto.html":{"url":"classes/AdminDto.html","title":"class - AdminDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AdminDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/admin.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                anyContactData\n                            \n                            \n                                    Readonly\n                                    Optional\n                                aproved\n                            \n                            \n                                    Readonly\n                                    Optional\n                                comment\n                            \n                            \n                                    Readonly\n                                    Optional\n                                dateAdded\n                            \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                productCode\n                            \n                            \n                                    Readonly\n                                    Optional\n                                visitorNick\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        anyContactData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        aproved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        comment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        dateAdded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        visitorNick\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/admin.interface.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AdminDto {\n    readonly id?: string;\n    readonly productCode?: string;\n    readonly dateAdded?: string;\n    readonly comment?: string;\n    readonly visitorNick?: string;\n    readonly anyContactData?: string;\n    readonly aproved?: Boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AdminModule.html":{"url":"modules/AdminModule.html","title":"module - AdminModule","body":"\n                   \n\n\n\n\n    Modules\n    AdminModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/admin/admin.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AdminService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AdminController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AdminService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { AdminController } from \"./admin.controller\";\nimport { AdminService } from \"./admin.service\";\nimport { AdminSchema } from \"./schemas/admin.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Admin', schema: AdminSchema}])],\n    controllers: [AdminController],\n    providers: [AdminService],\n    exports: [AdminService]\n})\nexport class AdminModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AdminService.html":{"url":"injectables/AdminService.html","title":"injectable - AdminService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AdminService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/admin.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                aproveComment\n                            \n                            \n                                    Async\n                                commentExist\n                            \n                            \n                                    Async\n                                findCommentById\n                            \n                            \n                                    Async\n                                findCommentByNickname\n                            \n                            \n                                    Async\n                                findCommentsByDate\n                            \n                            \n                                    Async\n                                removeComment\n                            \n                            \n                                    Async\n                                updateComment\n                            \n                            \n                                    Async\n                                visitorReview\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adminModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/admin/admin.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adminModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        aproveComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    aproveComment(commentId: string, aprove: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    commentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    aprove\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        commentExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    commentExist(result)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentByNickname\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentByNickname(nickaname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nickaname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findCommentsByDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    findCommentsByDate(dateComment: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dateComment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeComment(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateComment\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateComment(id: string, comment: AdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    comment\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        visitorReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    visitorReview(visitorData: AdminDto)\n                \n            \n\n\n            \n                \n                    Defined in src/admin/admin.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    visitorData\n                                    \n                                                AdminDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { AdminDto } from './dto/admin.interface.dto';\nimport { Model } from 'mongoose';\nimport { Admin } from './interfaces/admin.interface';\nimport { InjectModel } from '@nestjs/mongoose';\n\n\n@Injectable()\nexport class AdminService {\n    constructor(\n        @InjectModel('Admin') private readonly adminModel: Model \n    ) {}\n\n    async visitorReview(visitorData: AdminDto): Promise {\n        const newVisitor = new this.adminModel(visitorData);\n        return await newVisitor.save();\n    }\n\n    async findCommentById(id: string) {\n        return await this.adminModel.findOne( {id: id});\n    }\n\n    async findCommentByNickname(nickaname: string): Promise {\n        return await this.adminModel.findOne( { visitorNick: nickaname } );\n    }\n\n    async aproveComment(commentId: string, aprove: boolean) {\n        return await this.adminModel.findOneAndUpdate(\n            {id: commentId},\n            {$set: { aproved: aprove }}\n        );\n    }\n\n    async findCommentsByDate(dateComment: string): Promise {\n        const promises = await this.adminModel.find({ dateAdded: dateComment });\n        return await Promise.all(promises);     // array of Promise objects\n    }\n\n    async updateComment(id: string, comment: AdminDto): Promise {\n        return await this.adminModel.findOneAndUpdate({ id: id }, comment);\n    }\n\n    async removeComment(id: string) {\n        await this.adminModel.findOneAndRemove({ id: id });\n    }\n\n    async commentExist(result) {\n        if (!result) {\n           throw new NotFoundException('Comment not found.');\n        }\n   }\n\n    async addLogs(id: string, action: string) {\n        var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n        await console.log('Comment ' + action + ': ' + date + ' --- id: ' + id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAdminModule\n\nAdminModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AdminModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            RegisterModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { LoginController } from './login/login.controller';\nimport { LoginService } from './login/login.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LoginModule } from './login/login.module';\nimport config from './config/address';\nimport { AdminModule } from './admin/admin.module';\nimport { ProductModule } from './product/product.module';\nimport { ProductsModule } from './products/products.module';\nimport { RegisterModule } from './register/register.module';\n\n@Module({\n    imports: [\n      LoginModule,\n      AdminModule,\n      ProductModule,\n      ProductsModule,\n      RegisterModule,\n      MongooseModule.forRoot(config.mongodbURI,     // note: using docker ip address: 172.17.0.1\n      { useNewUrlParser: true, useCreateIndex: true, useUnifiedTopology: true }),\n    ],\n  controllers: [AppController], \n  providers: [AppService]\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AproveDto.html":{"url":"classes/AproveDto.html","title":"class - AproveDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AproveDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/admin/dto/aprove.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aprove\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        aprove\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/admin/dto/aprove.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AproveDto {\n    aprove: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomAttributes.html":{"url":"classes/CustomAttributes.html","title":"class - CustomAttributes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomAttributes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/customAttributes.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                prompt\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/customAttributes.interface.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomAttributes {\n    key?: String;\n    prompt?: String;\n    value?: Boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomAttributesDto.html":{"url":"classes/CustomAttributesDto.html","title":"class - CustomAttributesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomAttributesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/customAttributes.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                prompt\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/customAttributes.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CustomAttributesDto {\n    key: string;\n    prompt: string;\n    value: boolean;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignNames.html":{"url":"classes/ForeignNames.html","title":"class - ForeignNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/foreignNames.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                countryCode\n                            \n                            \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/foreignNames.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/foreignNames.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForeignNames {\n    countryCode?: String;\n    name?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForeignNamesDto.html":{"url":"classes/ForeignNamesDto.html","title":"class - ForeignNamesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForeignNamesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/foreignNames.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                countryCode\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        countryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/foreignNames.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/foreignNames.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ForeignNamesDto {\n    countryCode: string;\n    name: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Images.html":{"url":"classes/Images.html","title":"class - Images","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Images\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/images.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/images.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/images.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Images {\n    id?: String;\n    imageName?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ImagesDto.html":{"url":"classes/ImagesDto.html","title":"class - ImagesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ImagesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/images.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/images.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/images.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ImagesDto {\n    id: string;\n    imageName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/interfaces/login.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    username?: String;\n    password?: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findUser\n                            \n                            \n                                    Async\n                                findUserByUsername\n                            \n                            \n                                    Async\n                                listAllUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findUser\n                        \n                    \n                \n            \n            \n                \nfindUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUserByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUserByUsername(username)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('findByUsername/:username')\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginInfo: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Param, Post } from '@nestjs/common';\nimport { LoginDto } from './dto/login.interface.dto';\nimport { LoginService } from './login.service';\nimport { Login } from './interfaces/login.interface';\nimport { RegisterService } from 'src/register/register.service';\n\n@Controller('login')\nexport class LoginController {\n\tconstructor(private readonly loginService: LoginService,\n    private readonly registerService: RegisterService) {}\n\n\t@Post()\n\tasync login(@Body() loginInfo: LoginDto): Promise {\n\t\tawait this.registerService.validateLogin(\n\t\t\tloginInfo.username, loginInfo.password\n\t\t)\n\t\tconst result = this.loginService.login(loginInfo);\n\t\tvar date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n\t\tconsole.log(\n\t\t\t`User: ${loginInfo.username} logged in at: ${date}`\n\t\t)\n\t\treturn await result;\n\t}\n\n\t@Get(':id')\n\tfindUser(@Param('id') id): Promise {\n    return this.loginService.findUser(id);\n\t}\n\n\t@Get('findByUsername/:username')\n\tasync findUserByUsername(@Param('username') username): Promise {\n    await this.loginService.userExist(username);\n    return await this.loginService.findByUsername(username);\n\t}\n\n\t@Get()\n\tasync listAllUsers() {\n    return await this.loginService.listAllUsers();\n\t}\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/dto/login.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                password\n                            \n                            \n                                    Readonly\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/dto/login.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/login/dto/login.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginDto {\n    readonly username?: string;\n    readonly password?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nRegisterModule\n\nRegisterModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nRegisterModule->LoginModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { RegisterModule } from \"src/register/register.module\";\nimport { LoginController } from \"./login.controller\";\nimport { LoginService } from \"./login.service\";\nimport { LoginSchema } from \"./schemas/login.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Login', schema: LoginSchema}]), RegisterModule],\n    controllers: [LoginController],\n    providers: [LoginService],\n    exports: [LoginService]\n})\nexport class LoginModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByUsername\n                            \n                            \n                                    Async\n                                findUser\n                            \n                            \n                                    Async\n                                listAllUsers\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                userExist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByUsername(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    findUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    listAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginInfo: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginInfo\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        userExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    userExist(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCode, HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { LoginDto } from './dto/login.interface.dto';\nimport { Model } from 'mongoose';\nimport { Login } from './interfaces/login.interface';\nimport { InjectModel } from '@nestjs/mongoose';\n\n@Injectable()\nexport class LoginService {\n  constructor(\n    @InjectModel('Login') private readonly loginModel: Model\n  ) { }\n\n  async login(loginInfo: LoginDto): Promise {\n    const newLoginUser = new this.loginModel(loginInfo);\n    return await newLoginUser.save();\n  }\n\n  async findUser(id: string): Promise {\n    // find one user by id\n    return await this.loginModel.findById(id);\n  }\n\n  async findByUsername(username: string): Promise {\n    return await this.loginModel.findOne({ username: username });\n  }\n\n  async userExist(username: string) {\n    const userByUsername = await this.loginModel.findOne({\n      username: username\n    });\n\n    if (!userByUsername) {\n      throw new NotFoundException(\n        `User with username: ${username} cannot be found.`\n      );\n    }\n  }\n\n  async listAllUsers() {\n    return await this.loginModel.find();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogisticsData.html":{"url":"classes/LogisticsData.html","title":"class - LogisticsData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogisticsData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/logisticsData.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                key\n                            \n                            \n                                    Optional\n                                prompt\n                            \n                            \n                                    Optional\n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/logisticsData.interface.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LogisticsData {\n    key?: String;\n    prompt?: String;\n    value?: Number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogisticsDataDto.html":{"url":"classes/LogisticsDataDto.html","title":"class - LogisticsDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogisticsDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/logisticsData.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                prompt\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/logisticsData.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LogisticsDataDto {\n    key: string;\n    prompt: string;\n    value: number;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Product.html":{"url":"interfaces/Product.html","title":"interface - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/interfaces/product.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Product {\n    id: String;\n    title: String\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClass.html":{"url":"classes/ProductClass.html","title":"class - ProductClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/productClass.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productClass.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productClass.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClass {\n    id?: String;\n    title?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClassDto.html":{"url":"classes/ProductClassDto.html","title":"class - ProductClassDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/dto/product.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                    Optional\n                                id\n                            \n                            \n                                    Readonly\n                                    Optional\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                            Optional\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/product/dto/product.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClassDto {\n    readonly id?: string;\n    readonly title?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductClassDto-1.html":{"url":"classes/ProductClassDto-1.html","title":"class - ProductClassDto-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductClassDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/productClass.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                productGroupName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/productClass.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productGroupName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/productClass.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ProductClassDto {\n    id: string;\n    productGroupName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                productClasses\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProduct\n                            \n                            \n                                    Async\n                                addProductClassList\n                            \n                            \n                                    Async\n                                allProductClasses\n                            \n                            \n                                findProductById\n                            \n                            \n                                findProductByName\n                            \n                            \n                                    Async\n                                removeProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProduct\n                        \n                    \n                \n            \n            \n                \naddProduct(product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductClassList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductClassList(productClassList: ProductClassDto[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('addProductClassList')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productClassList\n                                    \n                                                ProductClassDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProductClasses\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProductClasses()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductById\n                        \n                    \n                \n            \n            \n                \nfindProductById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findProductByName\n                        \n                    \n                \n            \n            \n                \nfindProductByName(product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('findByName')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, product: ProductClassDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/product/product.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { ProductService } from './product.service';\nimport { ProductClassDto } from './dto/product.interface.dto';\nimport { Product } from './interfaces/product.interface';\nimport { Model } from 'mongoose';\n\n@Controller('productClasses')\nexport class ProductController {\n  constructor(private readonly productService: ProductService) {}\n\n  @Post()\n  addProduct(@Body() product: ProductClassDto): Promise {\n    const result = this.productService.addProduct(product);\n    this.productService.addLogs(product.id, 'added');\n    return result;\n  }\n\n  @Get()\n  async allProductClasses() {\n    // localhost:3000/productClasses\n    return await this.productService.allProductClasses();\n  }\n\n  @Get(':id')\n  findProductById(@Param('id') id: string): Promise {\n    return this.productService.findProductById(id);\n  }\n\n  @Post('findByName')\n  findProductByName(\n    @Body() product: ProductClassDto\n  ): Promise {\n    return this.productService.findProductByName(product.title);\n  }\n\n  @Patch(':id')\n  async updateProduct(\n    @Param('id') id: string, @Body() product: ProductClassDto\n  ): Promise {\n    const result = await this.productService.updateProduct(id, product);\n    await this.productService.addLogs(id, 'updated');\n    return await result;\n  }\n\n  @Delete(':id')\n  async removeProduct(@Param('id') id: string) {\n    await this.productService.removeProduct(id);\n    await this.productService.addLogs(id, 'removed');\n  }\n\n  @Post('addProductClassList')\n  async addProductClassList (\n    @Body() productClassList: ProductClassDto[]\n  ) {\n    return await this.productService.addProductClassList(\n      productClassList\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_exports\n\n\n\n\nProductService \n\nProductService \n\n\n\nProductModule\n\nProductModule\n\nProductService  -->\n\nProductModule->ProductService \n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ProductService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ProductController } from \"./product.controller\";\nimport { ProductService } from \"./product.service\";\nimport { ProductSchema } from \"./schemas/product.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Product', schema: ProductSchema}])],\n    controllers: [ProductController],\n    providers: [ProductService],\n    exports: [ProductService]\n})\nexport class ProductModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                addProduct\n                            \n                            \n                                    Async\n                                addProductClassList\n                            \n                            \n                                    Async\n                                allProductClasses\n                            \n                            \n                                    Async\n                                findProductById\n                            \n                            \n                                    Async\n                                findProductByName\n                            \n                            \n                                    Async\n                                removeProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/product/product.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProduct(product: ProductClassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addProductClassList\n                        \n                    \n                \n            \n            \n                \n                    \n                    addProductClassList(productClassList: ProductClassDto[])\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productClassList\n                                    \n                                                ProductClassDto[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        allProductClasses\n                        \n                    \n                \n            \n            \n                \n                    \n                    allProductClasses()\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findProductByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        removeProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    removeProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, product: ProductClassDto)\n                \n            \n\n\n            \n                \n                    Defined in src/product/product.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    product\n                                    \n                                                ProductClassDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { ProductClassDto } from './dto/product.interface.dto'\nimport { Product } from './interfaces/product.interface';\nimport { Model } from 'mongoose';\n\n@Injectable()\nexport class ProductService {\n  constructor(\n    @InjectModel('Product') private readonly productModel: Model) \n  {}\n\n  async addProduct(\n    product: ProductClassDto\n  ): Promise {\n    const newProduct = new this.productModel(product);\n    return await newProduct.save();\n  }\n\n  async allProductClasses() {\n    return await this.productModel.find({});\n  }\n\n  async findProductById(id: string): Promise {\n    return await this.productModel.findOne( {id: id} );\n  }\n\n  async findProductByName(name: string): Promise {\n    return await this.productModel.findOne( {title: name} );\n  }\n\n  async updateProduct(\n    id: string, product: ProductClassDto\n  ): Promise {\n    return await this.productModel.findOneAndUpdate(\n      { id: id }, product\n    );\n  }\n\n  async removeProduct(id: string) {\n    return await this.productModel.findOneAndRemove(\n      { id: id }\n    );\n  }\n\n  async addLogs(id: string, action: string) {\n    var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n    console.log(`Product class with id ${id} ${action} at: ${date}`);\n  }\n\n  async addProductClassList(productClassList: ProductClassDto[]) {\n    const products = [];\n    for (let current_product of productClassList) {\n      const newProduct = new this.productModel(current_product);\n      products.push(newProduct.save());\n      this.addLogs(newProduct.id, 'added');\n    }\n    return await Promise.all(products);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Products.html":{"url":"classes/Products.html","title":"class - Products","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Products\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/products.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                    Optional\n                                active\n                            \n                            \n                                    Optional\n                                customAttributes\n                            \n                            \n                                    Optional\n                                description\n                            \n                            \n                                    Optional\n                                eANCode\n                            \n                            \n                                    Optional\n                                eANPackageCode\n                            \n                            \n                                    Optional\n                                foreignNames\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                images\n                            \n                            \n                                    Optional\n                                likes\n                            \n                            \n                                    Optional\n                                logisticData\n                            \n                            \n                                    Optional\n                                productClass\n                            \n                            \n                                    Optional\n                                productCode\n                            \n                            \n                                    Optional\n                                productNane\n                            \n                            \n                                    Optional\n                                tags\n                            \n                            \n                                    Optional\n                                thumbnail\n                            \n                            \n                                    Optional\n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomAttributes[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        eANCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        eANPackageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        foreignNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ForeignNames[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Images[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        logisticData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogisticsData[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductClass\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        productNane\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     String[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Thumbnail\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/products.interface.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ForeignNames } from \"./foreignNames.interface\";\nimport { ProductClass } from \"./productClass.interface\";\nimport { Thumbnail } from \"./thumbnail.interface\";\nimport { Images } from \"./images.interface\";\nimport { LogisticsData } from \"./logisticsData.interface\";\nimport { CustomAttributes } from \"./customAttributes.interface\";\n\nexport class Products {\n    _id?: String;\n    id?: String;\n    productCode?: String;\n    productNane?: String;\n    foreignNames?: ForeignNames[];\n    productClass?: ProductClass;\n    active?: Boolean;\n    thumbnail?: Thumbnail;\n    images?: Images[];\n    unit?: String;\n    eANCode?: String;\n    eANPackageCode?: String;\n    logisticData?: LogisticsData[];\n    tags?: String[];\n    customAttributes?: CustomAttributes[];\n    likes?: Number;\n    description?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsArray.html":{"url":"classes/ProductsArray.html","title":"class - ProductsArray","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsArray\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/productsArray.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Products[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/productsArray.interface.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Products } from \"./products.interface\";\n\n\nexport class ProductsArray {\n    products?: Products[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsArrayDto.html":{"url":"classes/ProductsArrayDto.html","title":"class - ProductsArrayDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsArrayDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.array.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.array.interface.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Type } from \"class-transformer\";\nimport { ValidateNested } from \"class-validator\";\nimport { ProductsDto } from \"./products.interface.dto\";\n\n\nexport class ProductsArrayDto {\n    @ValidateNested({ each: true })\n    @Type(() => ProductsDto)\n    products: ProductsDto[];\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                products\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(inputData: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(inputData: ProductsArrayDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('createProducts')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsArrayDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, inputData: ProductsDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/products/products.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post, Put } from '@nestjs/common';\nimport { ProductsDto } from './dto/products.interface.dto';\nimport { ProductsService } from './products.service';\nimport { Products } from './interfaces/products.interface';\nimport { ProductsArrayDto } from './dto/products.array.interface.dto';\nimport { ProductsArray } from './interfaces/productsArray.interface';\n\n@Controller('products')\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Post()\n  async createProduct(@Body() inputData: ProductsDto): Promise {\n    return await this.productsService.createProduct(inputData)\n  }\n\n  @Post('createProducts')\n  async createProducts(@Body() inputData: ProductsArrayDto): Promise {\n    return await this.productsService.createProducts(inputData);\n  }\n\n  @Get(':id')\n  async getProduct(@Param('id') id: string): Promise {\n    return await this.productsService.getProduct(id);\n  }\n\n  @Get()\n  async getAllProducts() {\n    return await this.productsService.getAllProducts();\n  }\n\n  @Put(':id')\n  async updateProduct(@Param('id') id: string, @Body() inputData: ProductsDto): Promise {\n    const result = await this.productsService.updateProduct(id, inputData);\n    this.productsService.addLogs(id, 'updated');\n    return result;\n  }\n\n  @Delete(':id')\n  async deleteProduct(@Param('id') id: string) {\n    await this.productsService.deleteProduct(id);\n    this.productsService.addLogs(id, 'deleted');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductsDto.html":{"url":"classes/ProductsDto.html","title":"class - ProductsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/products.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                customAttributes\n                            \n                            \n                                description\n                            \n                            \n                                eANCode\n                            \n                            \n                                eANPackageCode\n                            \n                            \n                                foreignNames\n                            \n                            \n                                id\n                            \n                            \n                                images\n                            \n                            \n                                likes\n                            \n                            \n                                logisticData\n                            \n                            \n                                productClass\n                            \n                            \n                                productCode\n                            \n                            \n                                productName\n                            \n                            \n                                tags\n                            \n                            \n                                thumbnail\n                            \n                            \n                                unit\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        customAttributes\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CustomAttributesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eANCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eANPackageCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        foreignNames\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ForeignNamesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ImagesDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        likes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logisticData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LogisticsDataDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productClass\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ProductClassDto\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        productName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thumbnail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThumbnailDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ValidateNested()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/products.interface.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidateNested } from \"class-validator\";\nimport { Type } from 'class-transformer';\nimport { ForeignNamesDto } from \"./foreignNames.interface.dto\";\nimport { ProductClassDto } from \"src/product/dto/product.interface.dto\";\nimport { ThumbnailDto } from \"./thumbnail.interface.dto\";\nimport { ImagesDto } from \"./images.interface.dto\";\nimport { LogisticsDataDto } from \"./logisticsData.interface.dto\";\nimport { CustomAttributesDto } from \"./customAttributes.interface.dto\";\n\n\nexport class ProductsDto {\n  id: string;\n  productCode: string;\n  productName: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => ForeignNamesDto)\n  foreignNames: ForeignNamesDto[];\n\n  productClass: ProductClassDto;\n  active: boolean;\n\n  @ValidateNested()\n  @Type(() => ThumbnailDto)\n  thumbnail: ThumbnailDto;\n\n  @ValidateNested({ each: true })\n  @Type(() => ImagesDto)\n  images: ImagesDto[];\n\n  unit: string;\n  eANCode: string;\n  eANPackageCode: string;\n\n  @ValidateNested({ each: true })\n  @Type(() => LogisticsDataDto)\n  logisticData: LogisticsDataDto[];\n\n  tags: string[];\n\n  @ValidateNested({ each: true })\n  @Type(() => CustomAttributesDto)\n  customAttributes: CustomAttributesDto[];\n\n  likes: number;\n  description: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_imports\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductModule->ProductsModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/products/products.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProductModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { ProductModule } from \"src/product/product.module\";\nimport { ProductsController } from \"./products.controller\";\nimport { ProductsService } from \"./products.service\";\nimport { CustomAttributesSchema } from \"./schemas/customAttributes.schema\";\nimport { ForeignNamesSchema } from \"./schemas/foreignNames.schema\";\nimport { ImagesSchema } from \"./schemas/images.schema\";\nimport { LogisticsDataSchema } from \"./schemas/logisticsData.schema\";\nimport { ProductClassSchema } from \"./schemas/productClass.schema\";\nimport { ProductsSchema } from \"./schemas/products.schema\";\nimport { ThumbnailSchema } from \"./schemas/thumbnail.schema\";\n\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([{name: 'Products', schema: ProductsSchema}]),\n        MongooseModule.forFeature([{name: 'CustomAttributes', schema: CustomAttributesSchema}]),\n        MongooseModule.forFeature([{name: 'ForeignNames', schema: ForeignNamesSchema}]),\n        MongooseModule.forFeature([{name: 'Images', schema: ImagesSchema}]),\n        MongooseModule.forFeature([{name: 'LogisticsData', schema: LogisticsDataSchema}]),\n        MongooseModule.forFeature([{name: 'ProductClassSchema', schema: ProductClassSchema}]),\n        MongooseModule.forFeature([{name: 'Thumbnail', schema: ThumbnailSchema}]),\n        ProductModule\n    ],\n    controllers: [ProductsController],\n    providers: [ProductsService]\n})\nexport class ProductsModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/products.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addLogs\n                            \n                            \n                                    Async\n                                createProduct\n                            \n                            \n                                    Async\n                                createProducts\n                            \n                            \n                                    Async\n                                deleteProduct\n                            \n                            \n                                    Async\n                                getAllProducts\n                            \n                            \n                                    Async\n                                getProduct\n                            \n                            \n                                    Async\n                                productExist\n                            \n                            \n                                    Async\n                                updateProduct\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsModel: Model, productService: ProductService)\n                    \n                \n                        \n                            \n                                Defined in src/products/products.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productService\n                                                  \n                                                        \n                                                                        ProductService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    addLogs(id: string, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProduct(inputData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    createProducts(inputData: ProductsArrayDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    inputData\n                                    \n                                                ProductsArrayDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllProducts\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProducts()\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        productExist\n                        \n                    \n                \n            \n            \n                \n                    \n                    productExist(id: string, create: Boolean, updateOrFind: Boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    create\n                                    \n                                                Boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    updateOrFind\n                                    \n                                                Boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateProduct\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProduct(id: string, updateData: ProductsDto)\n                \n            \n\n\n            \n                \n                    Defined in src/products/products.service.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                ProductsDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { ProductsDto } from './dto/products.interface.dto';\nimport { Products } from './interfaces/products.interface';\nimport { ProductsArrayDto } from './dto/products.array.interface.dto';\nimport { ProductService } from 'src/product/product.service';\n\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectModel('Products') private readonly productsModel: Model,\n    private readonly productService: ProductService) {}\n\n  async createProduct(inputData: ProductsDto): Promise {\n    await this.productExist(inputData.id, true);    // check if product already exists\n    const newProduct = new this.productsModel(inputData);\n    const result = await newProduct.save();\n    this.addLogs(inputData.id, 'created');\n    return await result;\n  }\n\n  async productExist(id: string, create: Boolean=false, updateOrFind: Boolean=false) {\n    const productExist = await this.productsModel.findOne({ id: id });\n    if (create && productExist) {\n      // if we want to create product, it should not be in database\n      throw new HttpException(\n        `Product with id: ${id} already exist.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    if (updateOrFind && !productExist) {\n      // if we want to find/update product, it should be in database\n      throw new NotFoundException(`Product with id: ${id} does not exist.`)\n    }\n  }\n\n  async createProducts(inputData: ProductsArrayDto): Promise {\n    const products = [];\n    for (let product of inputData.products) {\n      await this.productExist(product.id, true);      // check if product already exists\n      const newProduct = new this.productsModel(product);\n      products.push(newProduct.save());\n      this.addLogs(product.id, 'created');\n    }\n    return await Promise.all(products);     // array of Promise objects\n  }\n\n  async getProduct(id: string): Promise {\n    await this.productExist(id, false, true);\n    const result = await this.productsModel.findOne({ id: id });\n    return await result;\n  }\n\n  async getAllProducts() {\n    return await this.productsModel.find({});\n  }\n\n  async updateProduct(id: string, updateData: ProductsDto): Promise {\n    await this.productExist(id, false, true);\n    return await this.productsModel.findOneAndUpdate({id: id}, updateData);\n  }\n\n  async addLogs(id: string, action: string) {\n    var date = new Date().toLocaleString('hu-HU', {timeZone: 'CET'});\n    await console.log(\n      `Product with id: ${id} ${action} --- ${date}`\n    );\n  }\n\n  async deleteProduct(id: string) {\n    await this.productExist(id, false, true);\n    await this.productsModel.findOneAndRemove({id: id});\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Register.html":{"url":"interfaces/Register.html","title":"interface - Register","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Register\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/interfaces/register.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            _id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dateOfBirth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateOfBirth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateOfBirth:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Register {\n    _id?: String;\n    firstName?: String;\n    lastName?: String;\n    dateOfBirth?: String;\n    username?: String;\n    password?: String;\n    email?: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RegisterController.html":{"url":"controllers/RegisterController.html","title":"controller - RegisterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RegisterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/register.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                register\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                    Async\n                                isRegistered\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUsername\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRegistered\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRegistered(username: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('isRegistered/:username')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userData: RegisterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, updateData: UpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('updatePassword/:id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsername(id: string, updateData: UpdateUsernameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('updateUsername/:id')\n                \n            \n\n            \n                \n                    Defined in src/register/register.controller.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateUsernameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Patch, Post } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { RegisterDto } from './dto/register.interface.dto';\nimport { UpdatePasswordDto } from './dto/update.password.interface.dto';\nimport { UpdateUsernameDto } from './dto/update.username.interface.dto';\nimport { Register } from './interfaces/register.interface';\nimport { RegisterService } from './register.service';\n\n@Controller('register')\nexport class RegisterController {\n  constructor(private readonly registerService: RegisterService) { }\n\n  @Post()\n  async registerUser(@Body() userData: RegisterDto): Promise {\n    const result = await this.registerService.registerUser(userData);\n    this.registerService.registerLogs(result, 'registered');\n    return await result;\n  }\n\n  @Get('isRegistered/:username')\n  async isRegistered(@Param('username') username: string): Promise {\n    return await this.registerService.isRegistered(username);\n  }\n\n  @Delete(':id')\n  deleteUser(@Param('id') id) {\n    this.registerService.deleteUser(id);\n  }\n\n  @Patch('updatePassword/:id')\n  async updatePassword(\n    @Param('id') id: string, @Body() updateData: UpdatePasswordDto\n  ): Promise {\n    const result = await this.registerService.updatePassword(id, updateData);\n    this.registerService.registerLogs(result, 'password updated');\n    return await result;\n  }\n\n  @Patch('updateUsername/:id')\n  async updateUsername(\n    @Param('id') id: string, @Body() updateData: UpdateUsernameDto\n  ): Promise {\n    const result = await this.registerService.updateUsername(id, updateData);\n    this.registerService.registerLogs(result, 'username updated');\n    return await result;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterDto.html":{"url":"classes/RegisterDto.html","title":"class - RegisterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/register.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateOfBirth\n                            \n                            \n                                    Optional\n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                    Optional\n                                password\n                            \n                            \n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        dateOfBirth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/register.interface.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegisterDto {\n    firstName?: string;\n    lastName?: string;\n    dateOfBirth?: string;\n    username?: string;\n    password?: string;\n    email?: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterModule.html":{"url":"modules/RegisterModule.html","title":"module - RegisterModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_providers\n\n\n\ncluster_RegisterModule_exports\n\n\n\n\nRegisterService \n\nRegisterService \n\n\n\nRegisterModule\n\nRegisterModule\n\nRegisterService  -->\n\nRegisterModule->RegisterService \n\n\n\n\n\nRegisterService\n\nRegisterService\n\nRegisterModule -->\n\nRegisterService->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RegisterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RegisterController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RegisterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { RegisterController } from \"./register.controller\";\nimport { RegisterService } from \"./register.service\";\nimport { RegisterSchema } from \"./schemas/register.schema\";\n\n\n@Module({\n    imports: [MongooseModule.forFeature([{name: 'Register', schema: RegisterSchema}])],\n    controllers: [RegisterController],\n    providers: [RegisterService],\n    exports: [RegisterService]\n})\nexport class RegisterModule {} \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RegisterService.html":{"url":"injectables/RegisterService.html","title":"injectable - RegisterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RegisterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/register.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                isRegistered\n                            \n                            \n                                    Async\n                                registerLogs\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Async\n                                updateUsername\n                            \n                            \n                                    Async\n                                validateLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registerModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/register/register.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        registerModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteUser(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        isRegistered\n                        \n                    \n                \n            \n            \n                \n                    \n                    isRegistered(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerLogs\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerLogs(userData: Register, action: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                Register\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(userData: RegisterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userData\n                                    \n                                                RegisterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(id: string, updateData: UpdatePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateUsername\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUsername(id: string, updateData: UpdateUsernameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateData\n                                    \n                                                UpdateUsernameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLogin(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/register/register.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpCode, HttpException, HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model, ObjectId } from 'mongoose';\nimport { Register } from './interfaces/register.interface';\nimport { RegisterDto } from './dto/register.interface.dto';\nimport { Observable, from, of, switchMap, lastValueFrom } from 'rxjs';\nimport { boolean } from 'yargs';\nimport { UpdatePasswordDto } from './dto/update.password.interface.dto';\nimport { UpdateUsernameDto } from './dto/update.username.interface.dto';\n\nconst bcrypt = require('bcrypt');\nconst saltRounds = 12;\n\n@Injectable()\nexport class RegisterService {\n  constructor(\n    @InjectModel('Register') private readonly registerModel: Model\n  ) { }\n\n  async registerUser(userData: RegisterDto): Promise {\n    const passHashed = await bcrypt.hash(userData.password, saltRounds);\n    // put hashed password in userData\n    const user = await this.registerModel.findOne({ username: userData.username });\n    if (user) {\n      throw new HttpException(\n        `User with username: ${userData.username} already exists.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    userData = {\n      ...userData,\n      password: passHashed\n    };\n    const newUser = new this.registerModel(userData);\n    return await newUser.save();\n  }\n\n  async registerLogs(userData: Register, action: string) {\n    var date = new Date().toLocaleString('hu-HU', { timeZone: 'CET' });\n    console.log(\n      `User with id: ${userData._id} --- ${action} at: ${date}`\n    );\n  }\n\n  async isRegistered(username: string) {\n    var user = await this.registerModel.findOne({\n      username: username\n    });\n    if (!user) {\n      throw new HttpException(\n        `User: ${username} is not registered`,\n        HttpStatus.NOT_FOUND\n      );\n    }\n    return await user;\n  }\n\n  async validateLogin(username: string, password: string) {\n    var user = await this.isRegistered(username);\n    var passwordsEqual = await bcrypt.compare(password, user.password);\n    if (!passwordsEqual) {\n      throw new HttpException(\n        `Password for ${(await user).username} is not valid.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n  }\n\n  async deleteUser(id: string) {\n    await this.registerModel.findOneAndRemove({ _id: id });\n  }\n\n  async updatePassword(id: string, updateData: UpdatePasswordDto): Promise {\n    const userData = (await this.registerModel.findById(id)).toObject();\n    const passwordsEqual = await bcrypt.compare(\n      updateData.newPassword, userData.password\n    );\n    if (passwordsEqual) {\n      throw new HttpException('Old password cannot be new password', HttpStatus.BAD_REQUEST);\n    }\n    else {\n      const newPassHashed = await bcrypt.hash(\n        updateData.newPassword, saltRounds\n      );\n      return await this.registerModel.findOneAndUpdate(\n        { username: userData.username },\n        { $set: { password: newPassHashed } }\n      );\n    }\n  }\n\n  async updateUsername(id: string, updateData: UpdateUsernameDto): Promise {\n    const userData = (await this.registerModel.findById(id)).toObject();\n    const passwordsEqual = bcrypt.compare(updateData.password, userData.password)\n    if (!passwordsEqual) {\n      throw new HttpException(\n        `Password for user: ${userData.username} is not valid.`,\n        HttpStatus.BAD_REQUEST\n      );\n    }\n    if (userData.username == updateData.newUsername) {\n      throw new HttpException('Please enter new username', HttpStatus.BAD_REQUEST);\n    }\n    return await this.registerModel.findOneAndUpdate(\n      { username: userData.username },\n      { $set: { username: updateData.newUsername } }\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Thumbnail.html":{"url":"classes/Thumbnail.html","title":"class - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/interfaces/thumbnail.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/thumbnail.interface.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/products/interfaces/thumbnail.interface.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Thumbnail {\n    id?: String;\n    imageName?: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ThumbnailDto.html":{"url":"classes/ThumbnailDto.html","title":"class - ThumbnailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ThumbnailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/products/dto/thumbnail.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                imageName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/thumbnail.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/products/dto/thumbnail.interface.dto.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ThumbnailDto {\n    id: string;\n    imageName: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdatePassword.html":{"url":"interfaces/UpdatePassword.html","title":"interface - UpdatePassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdatePassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/interfaces/update.password.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newPassword\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newPassword\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newPassword:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdatePassword{\n    newPassword: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePasswordDto.html":{"url":"classes/UpdatePasswordDto.html","title":"class - UpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/update.password.interface.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                newPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         String\n\n                    \n                \n                    \n                        \n                                Defined in src/register/dto/update.password.interface.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class UpdatePasswordDto {\n    newPassword: String;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UpdateUsernameDto.html":{"url":"interfaces/UpdateUsernameDto.html","title":"interface - UpdateUsernameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UpdateUsernameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/register/dto/update.username.interface.dto.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            newUsername\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        newUsername\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        newUsername:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UpdateUsernameDto {\n    newUsername: String;\n    password: String;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/admin/admin.controller.ts\n            \n            controller\n            AdminController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/admin.service.ts\n            \n            injectable\n            AdminService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/admin/dto/admin.interface.dto.ts\n            \n            class\n            AdminDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/dto/aprove.interface.dto.ts\n            \n            class\n            AproveDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/admin/interfaces/admin.interface.ts\n            \n            interface\n            Admin\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/admin/schemas/admin.schema.ts\n            \n            variable\n            AdminSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login/dto/login.interface.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/interfaces/login.interface.ts\n            \n            interface\n            Login\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/login/schemas/login.schema.ts\n            \n            variable\n            LoginSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/product/dto/product.interface.dto.ts\n            \n            class\n            ProductClassDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/interfaces/product.interface.ts\n            \n            interface\n            Product\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/product/schemas/product.schema.ts\n            \n            variable\n            ProductSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/dto/customAttributes.interface.dto.ts\n            \n            class\n            CustomAttributesDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dto/foreignNames.interface.dto.ts\n            \n            class\n            ForeignNamesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/images.interface.dto.ts\n            \n            class\n            ImagesDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/logisticsData.interface.dto.ts\n            \n            class\n            LogisticsDataDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/dto/productClass.interface.dto.ts\n            \n            class\n            ProductClassDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/dto/products.array.interface.dto.ts\n            \n            class\n            ProductsArrayDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/dto/products.interface.dto.ts\n            \n            class\n            ProductsDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/products/dto/thumbnail.interface.dto.ts\n            \n            class\n            ThumbnailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/customAttributes.interface.ts\n            \n            class\n            CustomAttributes\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/interfaces/foreignNames.interface.ts\n            \n            class\n            ForeignNames\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/images.interface.ts\n            \n            class\n            Images\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/logisticsData.interface.ts\n            \n            class\n            LogisticsData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/products/interfaces/productClass.interface.ts\n            \n            class\n            ProductClass\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/interfaces/products.interface.ts\n            \n            class\n            Products\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/products/interfaces/productsArray.interface.ts\n            \n            class\n            ProductsArray\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/products/interfaces/thumbnail.interface.ts\n            \n            class\n            Thumbnail\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/products/schemas/customAttributes.schema.ts\n            \n            variable\n            CustomAttributesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/foreignNames.schema.ts\n            \n            variable\n            ForeignNamesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/images.schema.ts\n            \n            variable\n            ImagesSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/logisticsData.schema.ts\n            \n            variable\n            LogisticsDataSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/productClass.schema.ts\n            \n            variable\n            ProductClassSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/products.schema.ts\n            \n            variable\n            ProductsSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/products/schemas/thumbnail.schema.ts\n            \n            variable\n            ThumbnailSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/dto/register.interface.dto.ts\n            \n            class\n            RegisterDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/register/dto/update.password.interface.dto.ts\n            \n            class\n            UpdatePasswordDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/register/dto/update.username.interface.dto.ts\n            \n            interface\n            UpdateUsernameDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/register/interfaces/register.interface.ts\n            \n            interface\n            Register\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/register/interfaces/update.password.interface.ts\n            \n            interface\n            UpdatePassword\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/register/register.controller.ts\n            \n            controller\n            RegisterController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            injectable\n            RegisterService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            variable\n            bcrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/register.service.ts\n            \n            variable\n            saltRounds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/register/schemas/register.schema.ts\n            \n            variable\n            RegisterSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.2\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^8.0.1\n        \n            @types/bcryptjs : ^2.4.2\n        \n            bcrypt : ^5.0.1\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.4.0\n        \n            class-validator : ^0.13.1\n        \n            mongoose : ^5.13.2\n        \n            nest : ^0.1.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.2.34\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\nAPI for product catalog for Koncern Bambi a.d.\n\nRun API\n# build docker container\n$ sudo docker-compose build\n\n# run container\n$ sudo docker-compose upTools used in development:\n\nTypeScript\nNestJS\nMongoDB\nGit\nGitHub\nDocker\nPostman\n\nDocumentation:\n$ npx @compodoc/compodoc -p tsconfig.json -sAuthor\n\nJovana Jovanović\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AdminModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AdminModule\n\n\n\ncluster_AdminModule_exports\n\n\n\ncluster_AdminModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_exports\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_RegisterModule\n\n\n\ncluster_RegisterModule_exports\n\n\n\ncluster_RegisterModule_providers\n\n\n\n\nAdminService \n\nAdminService \n\n\n\nAdminModule\n\nAdminModule\n\nAdminService  -->\n\nAdminModule->AdminService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAdminModule->AppModule\n\n\n\n\n\nAdminService\n\nAdminService\n\nAdminModule -->\n\nAdminService->AdminModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nProductModule\n\nProductModule\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductModule->ProductsModule\n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nProductService \n\nProductService \n\nProductService  -->\n\nProductModule->ProductService \n\n\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nRegisterModule\n\nRegisterModule\n\nLoginModule -->\n\nRegisterModule->LoginModule\n\n\n\nAppModule -->\n\nRegisterModule->AppModule\n\n\n\n\n\nRegisterService \n\nRegisterService \n\nRegisterService  -->\n\nRegisterModule->RegisterService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nRegisterService\n\nRegisterService\n\nRegisterModule -->\n\nRegisterService->RegisterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AdminSchema   (src/.../admin.schema.ts)\n                        \n                        \n                            bcrypt   (src/.../register.service.ts)\n                        \n                        \n                            CustomAttributesSchema   (src/.../customAttributes.schema.ts)\n                        \n                        \n                            ForeignNamesSchema   (src/.../foreignNames.schema.ts)\n                        \n                        \n                            ImagesSchema   (src/.../images.schema.ts)\n                        \n                        \n                            LoginSchema   (src/.../login.schema.ts)\n                        \n                        \n                            LogisticsDataSchema   (src/.../logisticsData.schema.ts)\n                        \n                        \n                            ProductClassSchema   (src/.../productClass.schema.ts)\n                        \n                        \n                            ProductSchema   (src/.../product.schema.ts)\n                        \n                        \n                            ProductsSchema   (src/.../products.schema.ts)\n                        \n                        \n                            RegisterSchema   (src/.../register.schema.ts)\n                        \n                        \n                            saltRounds   (src/.../register.service.ts)\n                        \n                        \n                            ThumbnailSchema   (src/.../thumbnail.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/admin/schemas/admin.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AdminSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    productCode: String,\n    dateAdded: String,\n    comment: String,\n    visitorNick: String,\n    anyContactData: String,\n    aproved: Boolean\n})\n                    \n                \n\n\n        \n    \n\n    src/register/register.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bcrypt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require('bcrypt')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saltRounds\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 12\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/customAttributes.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CustomAttributesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    key: String,\n    prompt: String,\n    value: Boolean\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/foreignNames.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ForeignNamesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    countryCode: String,\n    name: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/images.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ImagesSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    imageName: String\n})\n                    \n                \n\n\n        \n    \n\n    src/login/schemas/login.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoginSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    username: String,\n    password: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/logisticsData.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogisticsDataSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    key: String,\n    prompt: String,\n    value: Number\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/productClass.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductClassSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    title: String\n})\n                    \n                \n\n\n        \n    \n\n    src/product/schemas/product.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    title: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/products.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ProductsSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    productCode: String,\n    productName: String,\n    foreignNames: [ForeignNamesSchema],\n    productClass: ProductClassSchema,\n    active: Boolean,\n    thumbnail: ThumbnailSchema,\n    images: [ImagesSchema],\n    unit: String,\n    eANCode: String,\n    eANPackageCode: String,\n    logisticData: [LogisticsDataSchema],\n    tags: [String],\n    customAttributes: [CustomAttributesSchema],\n    likes: Number,\n    description: String\n})\n                    \n                \n\n\n        \n    \n\n    src/register/schemas/register.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RegisterSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    firstName: String,\n    lastName: String,\n    dateOfBirth: String,\n    username: String,\n    password: String,\n    email: String\n})\n                    \n                \n\n\n        \n    \n\n    src/products/schemas/thumbnail.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ThumbnailSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema({\n    id: String,\n    imageName: String\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
